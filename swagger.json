{
  "x-generator": "NSwag v14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "PortalApi v6",
    "description": "This is a JWT authentication/authorization portal api for GosuGamers's frontend",
    "version": "v6"
  },
  "servers": [
    {
      "url": "https://portal-api.staging.gosugamers.net"
    }
  ],
  "paths": {
    "/api/v6/account/logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Logout",
        "operationId": "Account_Logout",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "description": "Refresh token",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfLogoutResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/notifications": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get user notification",
        "operationId": "Account_GetUserNotifications",
        "parameters": [
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetUserNotificationsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/notifications/{id}/dismiss": {
      "patch": {
        "tags": [
          "Account"
        ],
        "summary": "Dismiss user notification",
        "operationId": "Account_DismissUserNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Notification id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfDismissUserNotificationResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/setting-profile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get user profile",
        "operationId": "Account_GetUserProfile",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetUserProfileResp"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "summary": "Modify user profile",
        "operationId": "Account_ModUserProfile",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FirstName": {
                    "type": "string",
                    "nullable": true
                  },
                  "LastName": {
                    "type": "string",
                    "nullable": true
                  },
                  "Email": {
                    "type": "string",
                    "nullable": true
                  },
                  "CountryId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "AboutMe": {
                    "type": "string",
                    "nullable": true
                  },
                  "AvatarImage": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  },
                  "Password": {
                    "type": "string",
                    "nullable": true
                  },
                  "PasswordVerify": {
                    "type": "string",
                    "nullable": true
                  },
                  "NewsletterOptedIn": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "PromotionsOptedIn": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "UpdatesOptedIn": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "SendPmNotifications": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "SendCommentNotifications": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "PrimaryGameId": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfModUserProfileResp"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete user profile",
        "operationId": "Account_DelUserAccount",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelUserAccountReq"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfDelUserAccountResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/password": {
      "patch": {
        "tags": [
          "Account"
        ],
        "summary": "Modify user password",
        "operationId": "Account_ModUserPassword",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModPasswordReq"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfModPasswordResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/setting-follow": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get user follow",
        "operationId": "Account_GetUserFollow",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetFollowResp"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Add follow",
        "operationId": "Account_AddFollow",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetFollowReq"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Remove follow",
        "operationId": "Account_RemoveFollow",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetFollowReq"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/setting-follow/{id}": {
      "patch": {
        "tags": [
          "Account"
        ],
        "summary": "Modify user follow",
        "operationId": "Account_ModUserFollow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Fans id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModFollowReq"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfModFollowReq"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete user follow",
        "operationId": "Account_DelUserFollow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Fans id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfDelFollowResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/stream-options": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get user stream options",
        "operationId": "Account_GetUserStreamOptions",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfListOfGetUserStreamOptionsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/setting-stream": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get user streams",
        "operationId": "Account_GetUserStreams",
        "parameters": [
          {
            "name": "PageNo",
            "in": "query",
            "description": "Page number (default : 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size (default : 10)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 20.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfListOfGetUserStreamsResp"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Add user stream",
        "operationId": "Account_AddUserStream",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStreamReq"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfAddStreamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/setting-stream/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get user stream detail",
        "operationId": "Account_GetUserStreamDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Media stream id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetUserStreamDetailResp"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "summary": "Modify user stream",
        "operationId": "Account_ModUserStream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Media stream Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModStreamReq"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfModStreamResp"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Del user stream",
        "operationId": "Account_DelUserStream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfDelStreamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/account/complete-registration": {
      "patch": {
        "tags": [
          "Account"
        ],
        "summary": "Complete registration",
        "operationId": "Account_CompleteRegistration",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteRegistrationReq"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get articles by condition V6",
        "operationId": "Articles_GetArticlesV6",
        "parameters": [
          {
            "name": "SectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "ArticleType",
            "in": "query",
            "description": "Article type",
            "schema": {
              "maximum": 3.0,
              "minimum": 1.0,
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/EnumArticleType"
                }
              ]
            },
            "x-position": 3
          },
          {
            "name": "IsFeatured",
            "in": "query",
            "description": "Is featured articles",
            "schema": {
              "type": "boolean"
            },
            "x-position": 4
          },
          {
            "name": "IsPopular",
            "in": "query",
            "description": "Is popular articles",
            "schema": {
              "type": "boolean"
            },
            "x-position": 5
          },
          {
            "name": "PlayerId",
            "in": "query",
            "description": "Related player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "TeamId",
            "in": "query",
            "description": "Related team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "TournamentId",
            "in": "query",
            "description": "Related tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 9
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 10
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticlesV6Resp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/{siteSectionName}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get articles by condition V6",
        "operationId": "Articles_GetArticlesV62",
        "parameters": [
          {
            "name": "siteSectionName",
            "in": "path",
            "required": true,
            "description": "Site section name",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "SectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "ArticleType",
            "in": "query",
            "description": "Article type",
            "schema": {
              "maximum": 3.0,
              "minimum": 1.0,
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/EnumArticleType"
                }
              ]
            },
            "x-position": 4
          },
          {
            "name": "IsFeatured",
            "in": "query",
            "description": "Is featured articles",
            "schema": {
              "type": "boolean"
            },
            "x-position": 5
          },
          {
            "name": "IsPopular",
            "in": "query",
            "description": "Is popular articles",
            "schema": {
              "type": "boolean"
            },
            "x-position": 6
          },
          {
            "name": "PlayerId",
            "in": "query",
            "description": "Related player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "TeamId",
            "in": "query",
            "description": "Related team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "TournamentId",
            "in": "query",
            "description": "Related tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 10
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 11
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticlesV6Resp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/type/{type}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get articles by type\ntype:\n    - 0: All\n    - 1: News\n    - 2: Featured\n    - 3: Guide",
        "operationId": "Articles_GetArticlesByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "description": "Article type",
            "schema": {
              "type": "integer"
            },
            "x-position": 1
          },
          {
            "name": "SectionId",
            "in": "query",
            "description": "Section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 0.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PlayerId",
            "in": "query",
            "description": "Related player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "TeamId",
            "in": "query",
            "description": "Related team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "TournamentId",
            "in": "query",
            "description": "Related parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 6
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 7
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticlesResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/{id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article details V6",
        "operationId": "Articles_GetArticleDetailV6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Article id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "relatedSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticleDetailV6Resp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/detail/{id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article details V6",
        "operationId": "Articles_GetArticleDetailV62",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Article id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "relatedSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticleDetailV6Resp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/{id}/meta-tags": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article detail meta tags",
        "operationId": "Articles_GetArticleDetailMetaTags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Article id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticleDetailMetaTagsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/{id}/json-ld": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article detail json",
        "operationId": "Articles_GetArticleDetailJsonLD",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Article id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticleJsonLDResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/{siteSectionName}/{id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article detail V6",
        "operationId": "Articles_GetArticleDetailV63",
        "parameters": [
          {
            "name": "siteSectionName",
            "in": "path",
            "required": true,
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Article id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "relatedSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticleDetailV6Resp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/{id}/quick-poll": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article quick poll",
        "operationId": "Articles_GetArticleQuickPoll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Quick poll id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetQuickPollResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/quick-poll/{id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article quick poll",
        "operationId": "Articles_GetArticleQuickPoll2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Quick poll id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetQuickPollResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/{id}/related": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article related data V6",
        "operationId": "Articles_GetArticleRelatedDataV6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "article id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticleRelatedDataV6Resp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/top-articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get V6 top articles by condition",
        "operationId": "Articles_GetTopArticles",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTopArticlesResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/articles/{siteSectionName}/top-articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get V6 top articles by condition",
        "operationId": "Articles_GetTopArticles2",
        "parameters": [
          {
            "name": "siteSectionName",
            "in": "path",
            "required": true,
            "description": "Site section name",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTopArticlesResp"
                }
              }
            }
          }
        }
      }
    },
    "/{siteSectionName}/articles/rss": {
      "get": {
        "tags": [
          "ArticlesRss"
        ],
        "summary": "Get article rss feed",
        "operationId": "ArticlesRss_GetArticlesRssFeed",
        "parameters": [
          {
            "name": "siteSectionName",
            "in": "path",
            "required": true,
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/articles/rss": {
      "get": {
        "tags": [
          "ArticlesRss"
        ],
        "summary": "Get article rss feed",
        "operationId": "ArticlesRss_GetArticlesRssFeed2",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/broadcasttalents": {
      "get": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Get broadcast talents",
        "operationId": "BroadcastTalents_GetBroadcastTalents",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PrefixName",
            "in": "query",
            "description": "Prefix name",
            "schema": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "RoleType",
            "in": "query",
            "description": "Role type\nnull: All\n1: Host\n2: Commentator\n3: Analyst\n4: Observer\n5: Interviewer\n99: Other",
            "schema": {
              "maximum": 99.0,
              "minimum": 1.0,
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/EnumBroadcastTalentType"
                }
              ]
            },
            "x-position": 4
          },
          {
            "name": "LanguageId",
            "in": "query",
            "description": "Language type\nnull: All ",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status\n1: Retired\n2: Active",
            "schema": {
              "maximum": 2.0,
              "minimum": 1.0,
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/EnumBroadcastTalentStatus"
                }
              ]
            },
            "x-position": 6
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 7
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 8
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetBroadcastTalentsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/broadcasttalents/{broadcastTalentId}": {
      "get": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Get broadcast talent detail",
        "operationId": "BroadcastTalents_GetBroadcastTalent",
        "parameters": [
          {
            "name": "broadcastTalentId",
            "in": "path",
            "required": true,
            "description": "Broadcast talent id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetBroadcastTalentDetailResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/broadcasttalents/{broadcastTalentId}/parents": {
      "get": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Get parent tournaments by broadcast talent",
        "operationId": "BroadcastTalents_GetParentsByBroadcastTalent",
        "parameters": [
          {
            "name": "broadcastTalentId",
            "in": "path",
            "required": true,
            "description": "Broadcast talent id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/broadcasttalents/{broadcastTalentId}/personal-stream": {
      "get": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Get personal stream by broadcast talent",
        "operationId": "BroadcastTalents_GetPersonalStreamByBroadcastTalent",
        "parameters": [
          {
            "name": "broadcastTalentId",
            "in": "path",
            "required": true,
            "description": "Broadcast talent id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetStreamByBroadcastTalentResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/broadcasttalents/{broadcastTalentId}/vods": {
      "get": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Get vods by broadcast talent",
        "operationId": "BroadcastTalents_GetVodsByBroadcastTalent",
        "parameters": [
          {
            "name": "broadcastTalentId",
            "in": "path",
            "required": true,
            "description": "Broadcast talent id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 5
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetVodsByBroadcastTalentResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get event page",
        "operationId": "Events_GetEventPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageId",
            "in": "query",
            "description": "Page id\nIf null, get main page data",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Hash",
            "in": "query",
            "description": "Preview hash\nIf preview, needs to pass hash param",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetEventPageResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/events/{id}/boxes/{boxId}/participants": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get event box participants",
        "operationId": "Events_GetEventBoxParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "boxId",
            "in": "path",
            "required": true,
            "description": "Box id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "ParentId",
            "in": "query",
            "description": "Parent id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "CountryId",
            "in": "query",
            "description": "Country id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetEventBoxParticipantsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/events/{id}/boxes/{boxId}/parents": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get event box parent tournaments",
        "operationId": "Events_GetEventBoxParents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "boxId",
            "in": "path",
            "required": true,
            "description": "Box id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Game id",
            "schema": {
              "type": "integer",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 4
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 5
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetEventBoxParentsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/events/{id}/boxes/{boxId}/countries": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get countries by parent tournaments",
        "operationId": "Events_GetCountriesByEventBox",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "boxId",
            "in": "path",
            "required": true,
            "description": "Box id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "ParentId",
            "in": "query",
            "description": "Parent id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetEventBoxCountriesResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/feature-team/live-stream": {
      "get": {
        "tags": [
          "FeatureTeam"
        ],
        "summary": "Get feature team live stream",
        "operationId": "FeatureTeam_GetFeatureTeamLiveStream",
        "parameters": [
          {
            "name": "TeamId",
            "in": "query",
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetLiveStreamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/frontends/banners": {
      "get": {
        "tags": [
          "Frontends"
        ],
        "summary": "Get core frontend banners",
        "operationId": "Frontends_GetSiteSectionBanners",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetSiteSectionBannersResp"
                }
              }
            }
          }
        }
      }
    },
    "/links/redirect": {
      "get": {
        "tags": [
          "Links"
        ],
        "summary": "Redirect to original url",
        "operationId": "Links_RedirectUrl",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/links/redirect": {
      "get": {
        "tags": [
          "Links"
        ],
        "summary": "Redirect to original url",
        "operationId": "Links_RedirectUrl2",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/links/verify-url": {
      "get": {
        "tags": [
          "Links"
        ],
        "summary": "Verify url",
        "operationId": "Links_VerifyUrl",
        "parameters": [
          {
            "name": "Url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 500,
              "minLength": 0
            },
            "x-position": 1
          },
          {
            "name": "Referer",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 500,
              "minLength": 0
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfVerifyUrlResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/log": {
      "post": {
        "tags": [
          "Log"
        ],
        "summary": "Add log",
        "operationId": "Log_AddLog",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLogReq"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfAddLogResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get match detail",
        "operationId": "Matches_GetMatchDetail",
        "parameters": [
          {
            "name": "MatchId",
            "in": "query",
            "required": true,
            "description": "Child tournament Match Id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetMatchDetailResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/match-game": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get match-game detail",
        "operationId": "Matches_GetMatchGameDetail",
        "parameters": [
          {
            "name": "GameId",
            "in": "query",
            "required": true,
            "description": "Child tournament Match-Game Id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetMatchGameDetailResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/upcoming": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get matches upcoming",
        "operationId": "Matches_GetMatchesUpcoming",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetMatchesUpcomingResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/results": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get matches results",
        "operationId": "Matches_GetMatchesResults",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetMatchesResultResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/match-ticker/upcoming": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get match ticker upcoming",
        "operationId": "Matches_GetMatchTickerUpcoming",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "ParentTournamentId",
            "in": "query",
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "TeamId",
            "in": "query",
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "PlayerId",
            "in": "query",
            "description": "Player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfListOfGetUpcomingResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/match-ticker/results": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get match ticker results",
        "operationId": "Matches_GetMatchTickerResults",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "ParentTournamentId",
            "in": "query",
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "TeamId",
            "in": "query",
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "PlayerId",
            "in": "query",
            "description": "Player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfListOfGetResultsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/teams/results": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get team all matches result",
        "operationId": "Matches_GetTeamsMatchesResults",
        "parameters": [
          {
            "name": "TeamId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 2100.0,
              "minimum": 2000.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTeamMatchResultResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/players/results": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get player all matches result",
        "operationId": "Matches_GetPlayersMatchesResults",
        "parameters": [
          {
            "name": "PlayerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 2100.0,
              "minimum": 2000.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetPlayerMatchResultResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/streams": {
      "post": {
        "tags": [
          "Matches"
        ],
        "summary": "Add stream to match",
        "operationId": "Matches_GetUserStreamOptions",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStreamToMatchReq"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get match streams",
        "operationId": "Matches_GetMatchStreams",
        "parameters": [
          {
            "name": "MatchId",
            "in": "query",
            "required": true,
            "description": "Child tournament Match Id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfListOfGetMatchStreamsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/encounters": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get match counters by two teams",
        "operationId": "Matches_GetTeamMatchEncounters",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "MatchId",
            "in": "query",
            "required": true,
            "description": "Child tournament Match Id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "Op1Id",
            "in": "query",
            "required": true,
            "description": "Opponent 1 team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 4
          },
          {
            "name": "Op2Id",
            "in": "query",
            "required": true,
            "description": "Opponent 2 team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 5
          },
          {
            "name": "Count",
            "in": "query",
            "required": true,
            "description": "Count",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            },
            "x-position": 6
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTeamMatchEncountersResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/external": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get upcoming matches for external users",
        "operationId": "Matches_GetUpcomingMatchesExternal",
        "parameters": [
          {
            "name": "ApiKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 0
            },
            "x-position": 1
          },
          {
            "name": "Game",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "x-position": 2
          },
          {
            "name": "MaxResults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 25.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfListOfGetMatchesExternalResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/event/upcoming": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get matches upcoming for event",
        "operationId": "Matches_GetEventMatchesUpcoming",
        "parameters": [
          {
            "name": "EventBoxId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetEventMatchUpcomingResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/event/results": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get matches results for event",
        "operationId": "Matches_GetEventMatchesResults",
        "parameters": [
          {
            "name": "EventBoxId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetEventMatchResultResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/matches/mlbb/battle-data": {
      "get": {
        "tags": [
          "Matches"
        ],
        "summary": "Get MLBB battle data",
        "operationId": "Matches_GetMLBBBattleData",
        "parameters": [
          {
            "name": "BattleId",
            "in": "query",
            "required": true,
            "description": "MLBB Battle Id",
            "schema": {
              "type": "string",
              "maxLength": 30,
              "minLength": 0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetMLBBBattleDataResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/members/{userId}": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Get member detail",
        "operationId": "Members_GetMember",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Member user id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "req",
            "in": "query",
            "description": "Request",
            "schema": {
              "$ref": "#/components/schemas/GetMemberReq"
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetMemberResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/members/{userId}/articles": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Get member articles",
        "operationId": "Members_GetMemberArticles",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Member user id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetMemberArticlesResp"
                }
              }
            }
          }
        }
      }
    },
    "/oembed": {
      "get": {
        "tags": [
          "OEmbed"
        ],
        "summary": "Get OEmbed",
        "operationId": "OEmbed_GetOEmbed",
        "parameters": [
          {
            "name": "Url",
            "in": "query",
            "required": true,
            "description": "Url",
            "schema": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1
            },
            "x-position": 1
          },
          {
            "name": "Format",
            "in": "query",
            "description": "Format\nExample: json",
            "schema": {
              "type": "string",
              "maxLength": 30,
              "minLength": 1
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/options/countries": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get country options",
        "operationId": "Options_GetCountryOptions",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetCountryOptionsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/options/games": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get game options",
        "operationId": "Options_GetGameOptions",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetGameOptionsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/options/languages": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get language options",
        "operationId": "Options_GetLanguageOptions",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetLanguagesResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/options/platforms": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get platform options",
        "operationId": "Options_GetPlatformOptions",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetPlatformOptionsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/options/currencies": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get currencies",
        "operationId": "Options_GetCurrencyOptions",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetCurrencyOptionsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/options/{gameId}/game-regions": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get game regions by game",
        "operationId": "Options_GetGameRegionsByGame",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetGameRegionOptionsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/pages/{id}": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Get Page",
        "operationId": "Pages_GetPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Page id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetPageResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/players/{playerId}": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get player detail",
        "operationId": "Players_GetPlayerDetail",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetPlayerDetailResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/players/{playerId}/vods": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get vods by player",
        "operationId": "Players_GetVodsByPlayer",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "Player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 4
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 5
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetVodsByPlayerResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/players/{playerId}/team-games": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get team game options by player",
        "operationId": "Players_GetTeamGameOptionsByPlayer",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "Player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTeamGameOptionsByPlayerResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/players/{playerId}/team-histories": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get player team histories",
        "operationId": "Players_GetPlayerTeamHistory",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "Player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "GameId",
            "in": "query",
            "required": true,
            "description": "Game id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetPlayerTeamHistoryResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/players/{playerId}/performance": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get performance by player",
        "operationId": "Players_GetPerformanceByPlayer",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "Player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetPerformanceByPlayerResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/players/{playerId}/top-achievements": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get top achievements by player",
        "operationId": "Players_GetTopAchievementsByTeam",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "Player id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "OfflineCount",
            "in": "query",
            "description": "Offline count",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 10.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "OnlineCount",
            "in": "query",
            "description": "Online count",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 10.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTopAchievementsByPlayerResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/players/{playerId}/grid-stats": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get player historical match statistics by grid",
        "operationId": "Players_GetTeamHistoricalMatchStats",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "Request",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "GridId",
            "in": "query",
            "required": true,
            "description": "Grid Player Id",
            "schema": {
              "type": "string",
              "maxLength": 12,
              "minLength": 0
            },
            "x-position": 2
          },
          {
            "name": "TimeWindow",
            "in": "query",
            "description": "grid statistics data time window",
            "schema": {
              "$ref": "#/components/schemas/EnumGridTimeWindow"
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetGridPlayerStatsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/polls/{id}/vote": {
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "Add poll vote",
        "operationId": "Polls_AddPollVote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Poll id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "x-name": "req",
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPollVoteReq"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfAddPollVoteResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/polls/{id}/standings": {
      "get": {
        "tags": [
          "Polls"
        ],
        "summary": "Get poll standings",
        "operationId": "Polls_GetPollStandings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Poll id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetPollStandingsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/rankings/all": {
      "get": {
        "tags": [
          "Rankings"
        ],
        "summary": "Get team rankings by game",
        "operationId": "Rankings_GetTeamRankings",
        "parameters": [
          {
            "name": "Count",
            "in": "query",
            "description": "Count",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTeamRankingsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/rankings": {
      "get": {
        "tags": [
          "Rankings"
        ],
        "summary": "Get team rankings by game",
        "operationId": "Rankings_GetTeamRankingsByGame",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTeamRankingsByGameResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/rankings/game-region": {
      "get": {
        "tags": [
          "Rankings"
        ],
        "summary": "Get team rankings by game region",
        "operationId": "Rankings_GetTeamRankingsByGameRegion",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "GameRegionId",
            "in": "query",
            "required": true,
            "description": "Game region id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 0.0
            },
            "x-position": 3
          },
          {
            "name": "Prefix",
            "in": "query",
            "description": "Prefix",
            "schema": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 6
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTeamRankingsByGameRegionResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/site/settings": {
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Get Site Settings V6",
        "operationId": "Site_GetSiteSettingsV6",
        "parameters": [
          {
            "name": "tk",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetSiteSettingsV6Resp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/site/settings-by-locale": {
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Get Site Settings by locale V6",
        "operationId": "Site_GetSiteSettingsByLocaleV6",
        "parameters": [
          {
            "name": "Locale",
            "in": "query",
            "required": true,
            "description": "Locale",
            "schema": {
              "type": "string",
              "maxLength": 6,
              "minLength": 1
            },
            "x-position": 1
          },
          {
            "name": "tk",
            "in": "query",
            "description": "Server token",
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetSiteSettingsV6Resp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/site/esports-url-safe-names": {
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Get ESports url safe names",
        "operationId": "Site_GetESportsUrlSafeNames",
        "parameters": [
          {
            "name": "Locale",
            "in": "query",
            "required": true,
            "description": "Locale: en-GB, vi",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "tk",
            "in": "query",
            "description": "Server token",
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetEsportsUrlSafeNamesResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/site/site-section": {
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Get site section",
        "operationId": "Site_GetSiteSection",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "tk",
            "in": "query",
            "description": "Server token",
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfSiteSectionInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/site/ad-settings-by-locale": {
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Get ad settings by locale",
        "operationId": "Site_GetSiteAdSettingsByLocale",
        "parameters": [
          {
            "name": "Locale",
            "in": "query",
            "required": true,
            "description": "Locale",
            "schema": {
              "type": "string",
              "maxLength": 6,
              "minLength": 1
            },
            "x-position": 1
          },
          {
            "name": "tk",
            "in": "query",
            "description": "Server token",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetSiteAdSettingsResp"
                }
              }
            }
          }
        }
      }
    },
    "/sitemap.xml": {
      "get": {
        "tags": [
          "Sitemap"
        ],
        "summary": "Get sitemap by type",
        "operationId": "Sitemap_GetSiteMapByType",
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "description": "Type\nroot\nindexPages\narticles\nteams\nplayers\nbroadcastTalents\ntournaments\nmatches\nspecialPages",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/EnumSitemapType"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "Year",
            "in": "query",
            "description": "Year",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Quarter",
            "in": "query",
            "description": "Quarter",
            "schema": {
              "type": "integer",
              "format": "byte",
              "maximum": 4.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page no",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v5/sitemap.xml": {
      "get": {
        "tags": [
          "Sitemap"
        ],
        "summary": "Get sitemap by type",
        "operationId": "Sitemap_GetSiteMapByType2",
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "description": "Type\nroot\nindexPages\narticles\nteams\nplayers\nbroadcastTalents\ntournaments\nmatches\nspecialPages",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/EnumSitemapType"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "Year",
            "in": "query",
            "description": "Year",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Quarter",
            "in": "query",
            "description": "Quarter",
            "schema": {
              "type": "integer",
              "format": "byte",
              "maximum": 4.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page no",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/news-sitemap.xml": {
      "get": {
        "tags": [
          "Sitemap"
        ],
        "summary": "Get news sitemap",
        "operationId": "Sitemap_GetNewsSiteMap",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v5/news-sitemap.xml": {
      "get": {
        "tags": [
          "Sitemap"
        ],
        "summary": "Get news sitemap",
        "operationId": "Sitemap_GetNewsSiteMap2",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/site-section/all": {
      "get": {
        "tags": [
          "SiteSection"
        ],
        "summary": "Get site section all",
        "operationId": "SiteSection_GetSiteSectionAll",
        "parameters": [
          {
            "name": "Locale",
            "in": "query",
            "required": true,
            "description": "Locale: en-GB, vi",
            "schema": {
              "type": "string",
              "maxLength": 6,
              "minLength": 1
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetSiteSectionAllResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/site-section/homepage": {
      "get": {
        "tags": [
          "SiteSection"
        ],
        "summary": "Get home page",
        "operationId": "SiteSection_GetHomePage",
        "parameters": [
          {
            "name": "Platform",
            "in": "query",
            "required": true,
            "description": "Plat form desktop = 1, mobile = 2",
            "schema": {
              "$ref": "#/components/schemas/EnumHomepagePlatform"
            },
            "x-position": 1
          },
          {
            "name": "Locale",
            "in": "query",
            "required": true,
            "description": "Locale: en-GB, vi",
            "schema": {
              "type": "string",
              "maxLength": 6,
              "minLength": 1
            },
            "x-position": 2
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetHomepageResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/sponsors/{sponsorId}": {
      "get": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Get sponsor detail",
        "operationId": "Sponsors_GetSponsor",
        "parameters": [
          {
            "name": "sponsorId",
            "in": "path",
            "required": true,
            "description": "Sponsor id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetSponsorResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/sponsors/{sponsorId}/parents": {
      "get": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Get parent tournaments by sponsor",
        "operationId": "Sponsors_GetParentsBySponsor",
        "parameters": [
          {
            "name": "sponsorId",
            "in": "path",
            "required": true,
            "description": "Sponsor id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/streams/{streamMediaId}": {
      "get": {
        "tags": [
          "Streams"
        ],
        "summary": "Get stream detail",
        "operationId": "Streams_GetStream",
        "parameters": [
          {
            "name": "streamMediaId",
            "in": "path",
            "required": true,
            "description": "Stream media id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetStreamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/teams/{teamId}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get team detail",
        "operationId": "Teams_GetTeamDetail",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTeamDetailResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/teams/{teamId}/vods": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get vods by team",
        "operationId": "Teams_GetVodsByTeam",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetVodsByTeamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/teams/{teamId}/news": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get news by team",
        "operationId": "Teams_GetNewsByTeam",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetArticlesByTeamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/teams/{teamId}/players": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get players by team",
        "operationId": "Teams_GetPlayersByTeam",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetPlayersByTeamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/teams/{teamId}/performance": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get performance by team",
        "operationId": "Teams_GetPerformanceByTeam",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetPerformanceByTeamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/teams/{teamId}/top-achievements": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get top achievements by team",
        "operationId": "Teams_GetTopAchievementsByTeam",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "OfflineCount",
            "in": "query",
            "description": "Offline count",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 10.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "OnlineCount",
            "in": "query",
            "description": "Online count",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 10.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetTopAchievementsByTeamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/teams/{teamId}/histories": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get histories by team",
        "operationId": "Teams_GetHistoriesByTeam",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "description": "Team id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetHistoryByTeamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/teams/{teamId}/grid-stats": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get team historical match statistics by grid",
        "operationId": "Teams_GetTeamHistoricalMatchStats",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "description": "Request",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "GridId",
            "in": "query",
            "required": true,
            "description": "Grid Team Id",
            "schema": {
              "type": "string",
              "maxLength": 12,
              "minLength": 0
            },
            "x-position": 2
          },
          {
            "name": "TimeWindow",
            "in": "query",
            "description": "grid statistics data time window",
            "schema": {
              "$ref": "#/components/schemas/EnumGridTimeWindow"
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetGridTeamStatsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/parents/featured": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get featured parent tournaments",
        "operationId": "Tournaments_GetFeaturedParents",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageNo",
            "in": "query",
            "description": "Page no",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/parents": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournaments by condition",
        "operationId": "Tournaments_GetParents",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PrefixName",
            "in": "query",
            "description": "Prefix name",
            "schema": {
              "type": "string",
              "maxLength": 80,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Game id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "State",
            "in": "query",
            "description": "State\n1: All\n2: Ongoing\n3: Upcoming\n4: Past",
            "schema": {
              "maximum": 4.0,
              "minimum": 1.0,
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/EnumTournamentState"
                }
              ]
            },
            "x-position": 5
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 6
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0
            },
            "x-position": 7
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/parents/{parentId}": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournament detail",
        "operationId": "Tournaments_GetParentDetail",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentDetailResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/parents/{parentId}/stages/{stageId}/children": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child tournaments by stage",
        "operationId": "Tournaments_GetChildrenByStage",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "description": "Stage id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetChildrenByStageResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/parents/{parentId}/news": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournament news",
        "operationId": "Tournaments_GetParentNews",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "Count",
            "in": "query",
            "description": "Count",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentArticlesResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/parents/{parentId}/broadcast-talents": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournament broadcast talents",
        "operationId": "Tournaments_GetParentBroadcastTalents",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentBroadcastTalentsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/parents/{parentId}/venue": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent venue",
        "operationId": "Tournaments_GetParentVenue",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentVenueResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/participants": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent/child participants",
        "operationId": "Tournaments_GetChildParticipants",
        "parameters": [
          {
            "name": "ParentId",
            "in": "query",
            "required": true,
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "ChildId",
            "in": "query",
            "description": "Child tournament id\nNeeded if query by child tournament",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id (Required if SiteSectionName is null or empty)",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name (Required if SiteSectionId is null)",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Count",
            "in": "query",
            "description": "Count",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetChildParticipantsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/parents/{parentId}/vods": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournament vods",
        "operationId": "Tournaments_GetParentVods",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 3
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentVodsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/parents/{parentId}/streams": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournament streams",
        "operationId": "Tournaments_GetParentStreams",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "description": "Parent tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetParentStreamsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/children/{childId}/display": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child tournament display",
        "operationId": "Tournaments_GetChildDisplay",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "description": "Child tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetChildDisplayResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/children/{childId}/embed-group": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child tournament embed-group",
        "operationId": "Tournaments_GetChildEmbedGroup",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "description": "Child tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetEmbedGroupResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/tournaments/children/{childId}/embed-bracket": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child tournament embed-bracket",
        "operationId": "Tournaments_GetChildEmbedBracket",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "description": "Child tournament id",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetEmbedBracketResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/vods": {
      "get": {
        "tags": [
          "Vods"
        ],
        "summary": "Get vods by condition",
        "operationId": "Vods_GetVods",
        "parameters": [
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site section id",
            "schema": {
              "type": "integer",
              "maximum": 32767.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SiteSectionName",
            "in": "query",
            "description": "Site section name",
            "schema": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "OnlyFirstGame",
            "in": "query",
            "description": "Only first game in match",
            "schema": {
              "type": "boolean"
            },
            "x-position": 3
          },
          {
            "name": "PrefixTitle",
            "in": "query",
            "description": "Prefix title",
            "schema": {
              "type": "string",
              "maxLength": 60,
              "minLength": 1,
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "PageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0
            },
            "x-position": 6
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetVodsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v6/vods/{vodId}": {
      "get": {
        "tags": [
          "Vods"
        ],
        "summary": "Get vod detail",
        "operationId": "Vods_GetVod",
        "parameters": [
          {
            "name": "vodId",
            "in": "path",
            "required": true,
            "description": "Vod id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfGetVodResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/rsa-verify": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "summary": "RSA Verify",
        "operationId": "AuthTest_RsaVerify",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBaseOfObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/gosu/login": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "summary": "Gosu auth Login",
        "operationId": "AuthTest_GosuAuthLogin",
        "parameters": [
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/gosu/logout": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "summary": "Gosu Auth Logout",
        "operationId": "AuthTest_GosuAuthLogout",
        "parameters": [
          {
            "name": "Token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/gosu/oauth-callback": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "summary": "Gosu OAuth Callback",
        "operationId": "AuthTest_GosuOAuthCallback",
        "parameters": [
          {
            "name": "Code",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "front-end-hostname",
            "in": "header",
            "description": "For different frontend, for example: front-end-hostname=staging.gosugamers.net front-end-hostname=www.gosugamers.net front-end-hostname=www.gosugamers.vn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiRespBaseOfLogoutResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/LogoutResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "LogoutResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiRespBase": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ret",
          "msg",
          "traceId"
        ],
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "minLength": 1
          },
          "traceId": {
            "type": "string",
            "minLength": 1
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EnumRet": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Success",
          "Unauthorized",
          "PermissionDenied",
          "InvalidAuthorizationToken",
          "AuthorizationTokenExpired",
          "InvalidApiKey",
          "MovedPermanently",
          "InvalidParamsErrorStart",
          "InvalidParams",
          "NameRepeated",
          "Using",
          "InvalidWebhookEvent",
          "FileSizeIsZero",
          "FileSizeTooBig",
          "ExtensionInvalid",
          "DimensionsTooSmall",
          "DimensionsTooBig",
          "NotImage",
          "AspectRatioIsWrong",
          "FileNotExist",
          "UploadTypeNotExist",
          "FolderNotExist",
          "ParentFolderNotExist",
          "ContentTypeInvalid",
          "MissingHeaders",
          "UserIdExist",
          "EmailExist",
          "Exist",
          "StateLimit",
          "MaximumOfTags",
          "StreamIdExist",
          "PlayerIdExit",
          "PersonalStreamIdExit",
          "MediaItemIdExit",
          "FanClubAlreadyMember",
          "OtherPlatformRequiresStreamUrl",
          "TagMaxCharacters",
          "PlatformRequiresStreamId",
          "TournamentsGameAccountInvalidNameFormat",
          "TournamentsGameAccountAlreadyExists",
          "HasForbiddenPermissionParams",
          "InvalidPermissionParams",
          "NoContestant",
          "PrizePoolNotMathStructure",
          "PrizePoolDistributionNotMatchPlacement",
          "PasswordIncorrect",
          "ExceededTeamSize",
          "NotCompleted",
          "UsernameExist",
          "NoCalculation",
          "NoJob",
          "InvalidHost",
          "InvalidParamsErrorEnd",
          "NotFoundErrorsStart",
          "NotExist",
          "UserNotExist",
          "PlayerNotFound",
          "TeamNotFound",
          "ChannelDoesNotExist",
          "NotFoundErrorsEnd",
          "ConflictErrorsStart",
          "UsersUserAlreadyDeleted",
          "ConflictErrorsEnd",
          "ServerErrorsStart",
          "Exception",
          "Fail",
          "DeleteFail",
          "GetJwtKeyFail",
          "InternalServerError",
          "ServerIsBusy",
          "TooManyRequests",
          "ServerErrorsEnd",
          "ForbiddenErrorsStart",
          "Disallow",
          "ForbiddenErrorsEnd"
        ],
        "enum": [
          0,
          10001,
          10002,
          10003,
          10004,
          10005,
          10006,
          20000,
          20001,
          20002,
          20003,
          20004,
          20005,
          20006,
          20007,
          20008,
          20009,
          20010,
          20011,
          20012,
          20013,
          20014,
          20015,
          20016,
          20017,
          20018,
          20019,
          20020,
          20021,
          20022,
          20023,
          20024,
          20025,
          20026,
          20027,
          20028,
          20029,
          20030,
          20031,
          20032,
          20033,
          20034,
          20035,
          20036,
          20037,
          20038,
          20039,
          20040,
          20041,
          20042,
          20043,
          20044,
          29999,
          30000,
          30001,
          30002,
          30003,
          30004,
          30005,
          39999,
          40000,
          40001,
          40999,
          50000,
          50001,
          50002,
          50003,
          50004,
          50005,
          50006,
          50007,
          59999,
          60000,
          60001,
          69999
        ]
      },
      "ApiRespBaseOfGetUserNotificationsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetUserNotificationsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetUserNotificationsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "notifications",
          "paging"
        ],
        "properties": {
          "notifications": {
            "type": "array",
            "description": "User notifications",
            "items": {
              "$ref": "#/components/schemas/UserNotificationListItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "UserNotificationListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "title",
          "body"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Notification id",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "body": {
            "type": "string",
            "description": "Body",
            "minLength": 1
          }
        }
      },
      "PagingRespBase": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pageNo",
          "pageSize",
          "totalPages",
          "totalRows"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalRows": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiRespBaseOfDismissUserNotificationResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DismissUserNotificationResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "DismissUserNotificationResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "userNotificationId"
        ],
        "properties": {
          "userNotificationId": {
            "type": "integer",
            "description": "User Notification Id",
            "format": "int32"
          }
        }
      },
      "ApiRespBaseOfGetUserProfileResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetUserProfileResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetUserProfileResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "email",
          "userName",
          "urlSafeUserName",
          "isRegistrationCompleted",
          "profile",
          "permission"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "User id",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "minLength": 1
          },
          "userName": {
            "type": "string",
            "description": "Username",
            "minLength": 1
          },
          "urlSafeUserName": {
            "type": "string",
            "description": "Url safe username",
            "minLength": 1
          },
          "isRegistrationCompleted": {
            "type": "boolean",
            "description": "Is registration completed"
          },
          "profile": {
            "description": "Profile",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetUserProfile"
              }
            ]
          },
          "permission": {
            "description": "User permission",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserPermission"
              }
            ]
          },
          "pushNotifications": {
            "$ref": "#/components/schemas/PushNotifications"
          }
        }
      },
      "GetUserProfile": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "newsletterOptedIn",
          "promotionsOptedIn",
          "updatesOptedIn",
          "sendPmNotifications",
          "sendCommentNotifications",
          "country",
          "primaryGame"
        ],
        "properties": {
          "aboutMe": {
            "type": "string",
            "description": "About me",
            "nullable": true
          },
          "avatarImagePath": {
            "type": "string",
            "description": "Avatar image path",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of birth",
            "format": "date",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "description": "Gender",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "description": "Signature",
            "nullable": true
          },
          "newsletterOptedIn": {
            "type": "boolean",
            "description": "Newsletter opted in"
          },
          "promotionsOptedIn": {
            "type": "boolean",
            "description": "Promotions opted in"
          },
          "updatesOptedIn": {
            "type": "boolean",
            "description": "Updates opted in"
          },
          "sendPmNotifications": {
            "type": "boolean",
            "description": "Send Pm Notifications"
          },
          "sendCommentNotifications": {
            "type": "boolean",
            "description": "Send Comment Notifications "
          },
          "country": {
            "description": "Country",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetUserCountry"
              }
            ]
          },
          "primaryGame": {
            "description": "Primary game",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetUserPrimaryGame"
              }
            ]
          }
        }
      },
      "GetUserCountry": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Country id"
          },
          "name": {
            "type": "string",
            "description": "Country name",
            "minLength": 1
          }
        }
      },
      "GetUserPrimaryGame": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Game id"
          },
          "name": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          }
        }
      },
      "UserPermission": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "canEditArticle",
          "canEditTournament",
          "canEditMatch"
        ],
        "properties": {
          "canEditArticle": {
            "type": "boolean",
            "description": "Can edit article"
          },
          "canEditTournament": {
            "type": "boolean",
            "description": "Can edit tournament"
          },
          "canEditMatch": {
            "type": "boolean",
            "description": "Can edit match"
          }
        }
      },
      "PushNotifications": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "appId": {
            "type": "string",
            "nullable": true
          },
          "identityVerification": {
            "type": "string",
            "nullable": true
          },
          "safariWebId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfModUserProfileResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ModUserProfileResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "ModUserProfileResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "email",
          "userName",
          "urlSafeUserName",
          "profile"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "User id",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "minLength": 1
          },
          "userName": {
            "type": "string",
            "description": "Username",
            "minLength": 1
          },
          "urlSafeUserName": {
            "type": "string",
            "description": "Url safe name",
            "minLength": 1
          },
          "profile": {
            "description": "User profile",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetUserProfile"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfModPasswordResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ModPasswordResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "ModPasswordResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModPasswordReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "password",
          "passwordVerify"
        ],
        "properties": {
          "password": {
            "type": "string",
            "maxLength": 72,
            "minLength": 1
          },
          "passwordVerify": {
            "type": "string",
            "maxLength": 72,
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfDelUserAccountResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DelUserAccountResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "DelUserAccountResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelUserAccountReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "password"
        ],
        "properties": {
          "password": {
            "type": "string",
            "description": "Password",
            "maxLength": 72,
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfGetFollowResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetFollowResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetFollowResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "playerFanClubs",
          "teamFanClubs"
        ],
        "properties": {
          "playerFanClubs": {
            "type": "array",
            "description": "Player fan clubs",
            "items": {
              "$ref": "#/components/schemas/GetFollowPlayerFanClub"
            }
          },
          "teamFanClubs": {
            "type": "array",
            "description": "Team fan club",
            "items": {
              "$ref": "#/components/schemas/GetFollowTeamFanClub"
            }
          }
        }
      },
      "GetFollowPlayerFanClub": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fansId",
          "fanClubId",
          "activeSubscriberSettings",
          "player"
        ],
        "properties": {
          "fansId": {
            "type": "integer",
            "description": "Fans id",
            "format": "int32"
          },
          "fanClubId": {
            "type": "integer",
            "description": "Fan club id",
            "format": "int32"
          },
          "activeSubscriberSettings": {
            "description": "Active subscriber settings",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ActiveSubscriberSettings"
              }
            ]
          },
          "player": {
            "description": "Player",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetFollowPlayer"
              }
            ]
          }
        }
      },
      "ActiveSubscriberSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sendMail",
          "showMatchNotifications"
        ],
        "properties": {
          "sendMail": {
            "type": "boolean",
            "description": "Send mail"
          },
          "showMatchNotifications": {
            "type": "boolean",
            "description": "Show match notifications"
          }
        }
      },
      "GetFollowPlayer": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName",
          "imageFileName",
          "primaryGame"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Player id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Player name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Player url safe name",
            "minLength": 1
          },
          "imageFileName": {
            "type": "string",
            "description": "Image file name",
            "minLength": 1
          },
          "primaryGame": {
            "description": "Primary game",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetFollowGame"
              }
            ]
          }
        }
      },
      "GetFollowGame": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Game id"
          },
          "name": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          }
        }
      },
      "GetFollowTeamFanClub": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fansId",
          "fanClubId",
          "activeSubscriberSettings",
          "team"
        ],
        "properties": {
          "fansId": {
            "type": "integer",
            "description": "Fans id",
            "format": "int32"
          },
          "fanClubId": {
            "type": "integer",
            "description": "Fan club id",
            "format": "int32"
          },
          "activeSubscriberSettings": {
            "description": "Active subscriber settings",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ActiveSubscriberSettings"
              }
            ]
          },
          "team": {
            "description": "Team",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetFollowTeam"
              }
            ]
          }
        }
      },
      "GetFollowTeam": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName",
          "imageFileName",
          "game"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Team url safe name",
            "minLength": 1
          },
          "imageFileName": {
            "type": "string",
            "description": "Image file name",
            "minLength": 1
          },
          "game": {
            "description": "Game",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetFollowGame"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfModFollowReq": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ModFollowReq"
                  }
                ]
              }
            }
          }
        ]
      },
      "ModFollowReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fansId",
          "sendMail",
          "showMatchNotifications"
        ],
        "properties": {
          "fansId": {
            "type": "integer",
            "description": "Fans Id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "sendMail": {
            "type": "boolean",
            "description": "SendMail"
          },
          "showMatchNotifications": {
            "type": "boolean",
            "description": "ShowMatchNotifications"
          }
        }
      },
      "ApiRespBaseOfDelFollowResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DelFollowResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "DelFollowResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiRespBaseOfListOfGetUserStreamOptionsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/GetUserStreamOptionsResp"
                }
              }
            }
          }
        ]
      },
      "GetUserStreamOptionsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "streams"
        ],
        "properties": {
          "streams": {
            "type": "array",
            "description": "Streams ",
            "items": {
              "$ref": "#/components/schemas/ItemOfInteger"
            }
          }
        }
      },
      "ItemOfInteger": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfListOfGetUserStreamsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/GetUserStreamsResp"
                }
              }
            }
          }
        ]
      },
      "GetUserStreamsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "streams",
          "paging"
        ],
        "properties": {
          "streams": {
            "type": "array",
            "description": "Streams",
            "items": {
              "$ref": "#/components/schemas/GetUserStream"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "GetUserStream": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "isLive",
          "platform",
          "streamId",
          "viewerCount",
          "title",
          "type",
          "streamUrlSafeName",
          "viewCount",
          "userId",
          "gameId",
          "gameName",
          "gameUrlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "media streams id",
            "format": "int32"
          },
          "isLive": {
            "type": "boolean",
            "description": "Is live"
          },
          "platform": {
            "type": "integer",
            "description": "Platform"
          },
          "screenCapUrl": {
            "type": "string",
            "description": "screen cap url",
            "nullable": true
          },
          "streamId": {
            "type": "string",
            "description": "Stream id",
            "minLength": 1
          },
          "viewerCount": {
            "type": "integer",
            "description": "Viewer count",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "description": "Type",
            "minLength": 1
          },
          "streamUrlSafeName": {
            "type": "string",
            "description": "Stream url safe name",
            "minLength": 1
          },
          "viewCount": {
            "type": "integer",
            "description": "View count",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "description": "User id",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfGetUserStreamDetailResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetUserStreamDetailResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetUserStreamDetailResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "title",
          "type",
          "platform",
          "streamId",
          "game",
          "language",
          "tags"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Stream media id",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "description": "Type",
            "minLength": 1
          },
          "platform": {
            "type": "integer",
            "description": "Platform"
          },
          "streamId": {
            "type": "string",
            "description": "Stream id",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "game": {
            "description": "Game",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetStreamDetailGame"
              }
            ]
          },
          "language": {
            "description": "Language",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetStreamDetailLanguage"
              }
            ]
          },
          "tags": {
            "type": "array",
            "description": "Tag",
            "items": {
              "$ref": "#/components/schemas/GetStreamDetailTag"
            }
          }
        }
      },
      "GetStreamDetailGame": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Game id"
          },
          "name": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          }
        }
      },
      "GetStreamDetailLanguage": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "code"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Language id"
          },
          "name": {
            "type": "string",
            "description": "Language name",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "description": "Language code",
            "minLength": 1
          }
        }
      },
      "GetStreamDetailTag": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Stream tag id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfModStreamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ModStreamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "ModStreamResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModStreamReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "gameId",
          "languageId",
          "title",
          "platform",
          "streamId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Media stream Id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "gameId": {
            "type": "integer",
            "description": "Game Id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "languageId": {
            "type": "integer",
            "description": "Language Id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "title": {
            "type": "string",
            "description": "Title",
            "maxLength": 60,
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "Description",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true
          },
          "platform": {
            "type": "integer",
            "description": "Platform Id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "streamId": {
            "type": "string",
            "description": "StreamId",
            "maxLength": 25,
            "minLength": 1
          },
          "tags": {
            "type": "array",
            "description": "Tags",
            "items": {
              "$ref": "#/components/schemas/ModStreamTag"
            }
          }
        }
      },
      "ModStreamTag": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tagId": {
            "type": "integer",
            "description": "media_media_item_tags id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "nullable": true
          },
          "tagName": {
            "type": "string",
            "description": "Tag name",
            "maxLength": 25,
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfAddStreamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AddStreamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "AddStreamResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddStreamReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "gameId",
          "languageId",
          "platform",
          "streamId"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "maxLength": 60,
            "minLength": 1
          },
          "gameId": {
            "type": "integer",
            "description": "Game Id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "languageId": {
            "type": "integer",
            "description": "Language Id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "description": {
            "type": "string",
            "description": "Description",
            "maxLength": 255,
            "minLength": 1,
            "nullable": true
          },
          "platform": {
            "type": "integer",
            "description": "Platform Id : TWITCHTV = 1, YOUTUBE_CHANNEL = 10",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "streamId": {
            "type": "string",
            "description": "StreamId",
            "maxLength": 25,
            "minLength": 1
          },
          "tagNames": {
            "type": "array",
            "description": "Tags Names",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiRespBaseOfDelStreamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DelStreamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "DelStreamResp": {
        "type": "object",
        "additionalProperties": false
      },
      "SetFollowReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "identityType",
          "id"
        ],
        "properties": {
          "identityType": {
            "description": "Identity type",
            "maximum": 2.0,
            "minimum": 1.0,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumIdentityType"
              }
            ]
          },
          "id": {
            "type": "integer",
            "description": "Identity type id (player id or team id)",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          }
        }
      },
      "EnumIdentityType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Player",
          "Team"
        ],
        "enum": [
          1,
          2
        ]
      },
      "CompleteRegistrationReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "username",
          "countryId"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-._]{1,20}$"
          },
          "countryId": {
            "type": "integer",
            "description": "Country id",
            "maximum": 32767.0,
            "minimum": 1.0
          }
        }
      },
      "ApiRespBaseOfGetArticlesV6Resp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetArticlesV6Resp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetArticlesV6Resp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "articles",
          "paging"
        ],
        "properties": {
          "articles": {
            "type": "array",
            "description": "Articles",
            "items": {
              "$ref": "#/components/schemas/ArticleListItemV6"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ArticleListItemV6": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "type",
          "typeName",
          "urlSafeType",
          "title",
          "urlSafeTitle",
          "sectionIds",
          "displaySectionId",
          "displaySectionUrlSafeName",
          "publishedAt",
          "headlineImagePath",
          "headlineImageText",
          "teaser",
          "url",
          "comments",
          "authorUserName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Article id",
            "format": "int32"
          },
          "frontendId": {
            "type": "integer",
            "description": "Frontend Id",
            "nullable": true
          },
          "type": {
            "description": "Article subtype id",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumArticleType"
              }
            ]
          },
          "typeName": {
            "type": "string",
            "description": "Type Name",
            "minLength": 1
          },
          "urlSafeType": {
            "type": "string",
            "description": "Url Safe Type",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "description": "Article title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe title",
            "minLength": 1
          },
          "sectionIds": {
            "type": "array",
            "description": "Section Ids",
            "items": {
              "type": "integer"
            }
          },
          "displaySectionId": {
            "type": "integer",
            "description": "Display Section Id"
          },
          "displaySectionUrlSafeName": {
            "type": "string",
            "description": "Display section url safe name",
            "minLength": 1
          },
          "publishedAt": {
            "type": "integer",
            "description": "Published At",
            "format": "int64"
          },
          "headlineImagePath": {
            "type": "string",
            "description": "Headline image path for web",
            "minLength": 1
          },
          "headlineImageText": {
            "type": "string",
            "description": "Headline image path for web",
            "minLength": 1
          },
          "squareHeadlineImageUrl": {
            "type": "string",
            "description": "Headline image path for mobile app",
            "nullable": true
          },
          "teaser": {
            "type": "string",
            "description": "Article teaser for short content",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "comments": {
            "type": "integer",
            "description": "Comments",
            "format": "int32"
          },
          "authorUserName": {
            "type": "string",
            "description": "Author username",
            "minLength": 1
          },
          "authorFirstName": {
            "type": "string",
            "description": "Author first name",
            "nullable": true
          },
          "authorLastName": {
            "type": "string",
            "description": "Author last name",
            "nullable": true
          },
          "isMultipleAuthors": {
            "type": "boolean"
          }
        }
      },
      "EnumArticleType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "News",
          "Features",
          "Guides"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "ApiRespBaseOfGetArticlesResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetArticlesResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetArticlesResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "articles",
          "paging"
        ],
        "properties": {
          "articles": {
            "type": "array",
            "description": "Articles",
            "items": {
              "$ref": "#/components/schemas/ArticleListItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ArticleListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "type",
          "typeName",
          "urlSafeType",
          "title",
          "urlSafeTitle",
          "sectionIds",
          "displaySectionId",
          "displaySectionUrlSafeName",
          "publishedAt",
          "headlineImagePath",
          "headlineImageText",
          "teaser",
          "url",
          "comments",
          "authorUserName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Article id",
            "format": "int32"
          },
          "frontendId": {
            "type": "integer",
            "description": "Frontend Id",
            "nullable": true
          },
          "type": {
            "description": "Article subtype id",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumArticleType"
              }
            ]
          },
          "typeName": {
            "type": "string",
            "description": "Type Name",
            "minLength": 1
          },
          "urlSafeType": {
            "type": "string",
            "description": "Url Safe Type",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "description": "Article title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe title",
            "minLength": 1
          },
          "sectionIds": {
            "type": "array",
            "description": "Section Ids",
            "items": {
              "type": "integer"
            }
          },
          "displaySectionId": {
            "type": "integer",
            "description": "Display Section Id"
          },
          "displaySectionUrlSafeName": {
            "type": "string",
            "description": "Display section url safe name",
            "minLength": 1
          },
          "publishedAt": {
            "type": "integer",
            "description": "Published At",
            "format": "int64"
          },
          "headlineImagePath": {
            "type": "string",
            "description": "Headline image path for web",
            "minLength": 1
          },
          "headlineImageText": {
            "type": "string",
            "description": "Headline image path for web",
            "minLength": 1
          },
          "squareHeadlineImageUrl": {
            "type": "string",
            "description": "Headline image path for mobile app",
            "nullable": true
          },
          "teaser": {
            "type": "string",
            "description": "Article teaser for short content",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "comments": {
            "type": "integer",
            "description": "Comments",
            "format": "int32"
          },
          "authorUserName": {
            "type": "string",
            "description": "Author username",
            "minLength": 1
          },
          "authorFirstName": {
            "type": "string",
            "description": "Author first name",
            "nullable": true
          },
          "authorLastName": {
            "type": "string",
            "description": "Author last name",
            "nullable": true
          },
          "authors": {
            "type": "integer",
            "description": "author count",
            "format": "int32"
          }
        }
      },
      "ApiRespBaseOfGetArticleDetailV6Resp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetArticleDetailV6Resp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetArticleDetailV6Resp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "articleDetail",
          "canEditArticles",
          "metaTags",
          "seoMetaData"
        ],
        "properties": {
          "articleDetail": {
            "description": "Article",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ArticleDetailV6"
              }
            ]
          },
          "canEditArticles": {
            "type": "boolean",
            "description": "Can edit articles"
          },
          "metaTags": {
            "type": "object",
            "description": "MetaTags",
            "additionalProperties": {
              "type": "string"
            }
          },
          "seoMetaData": {
            "type": "object",
            "description": "Seo meta data",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ArticleDetailV6": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "type",
          "typeName",
          "typeNameForUrl",
          "subType",
          "subTypeName",
          "title",
          "urlSafeTitle",
          "headlineImagePath",
          "headlineImageText",
          "teaser",
          "contentProcessed",
          "publishedAt",
          "updatedAt",
          "displaySectionId",
          "displaySectionUrlSafeName",
          "sectionIds",
          "authors",
          "relatedArticles",
          "teams",
          "tournaments",
          "url",
          "isPublished"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Article id",
            "format": "int32"
          },
          "frontendId": {
            "type": "integer",
            "description": "Front end id",
            "nullable": true
          },
          "type": {
            "description": "Article Type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumArticleType"
              }
            ]
          },
          "typeName": {
            "type": "string",
            "description": "Article type name",
            "minLength": 1
          },
          "typeNameForUrl": {
            "type": "string",
            "description": "Type name for url",
            "minLength": 1
          },
          "subType": {
            "type": "integer",
            "description": "Article SubType Id"
          },
          "subTypeName": {
            "type": "string",
            "description": "Article SubType Name",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "description": "Article title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe title",
            "minLength": 1
          },
          "headlineImagePath": {
            "type": "string",
            "description": "Headline image path for web",
            "minLength": 1
          },
          "headlineImageText": {
            "type": "string",
            "description": "Headline image path for web",
            "minLength": 1
          },
          "squareHeadlineImageUrl": {
            "type": "string",
            "description": "Headline image path for mobile app",
            "nullable": true
          },
          "teaser": {
            "type": "string",
            "description": "Article teaser for short content",
            "minLength": 1
          },
          "contentProcessed": {
            "type": "string",
            "description": "Processed article content",
            "minLength": 1
          },
          "redirectUrl": {
            "type": "string",
            "description": "Redirect to external article url",
            "nullable": true
          },
          "publishedAt": {
            "type": "integer",
            "description": "Published at",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "description": "Updated at",
            "format": "int64"
          },
          "displaySectionId": {
            "type": "integer",
            "description": "Display Section Id"
          },
          "displaySectionUrlSafeName": {
            "type": "string",
            "description": "Display section url safe name",
            "minLength": 1
          },
          "siteSectionIds": {
            "type": "string"
          },
          "sectionIds": {
            "type": "array",
            "description": "Section Ids",
            "items": {
              "type": "integer"
            }
          },
          "authors": {
            "type": "array",
            "description": "Authors",
            "items": {
              "$ref": "#/components/schemas/UserDetail"
            }
          },
          "relatedArticles": {
            "type": "array",
            "description": "Related Teams",
            "items": {
              "$ref": "#/components/schemas/RelatedArticle"
            }
          },
          "teams": {
            "type": "array",
            "description": "Related Teams",
            "items": {
              "$ref": "#/components/schemas/Team"
            }
          },
          "tournaments": {
            "type": "array",
            "description": "Related Tournaments",
            "items": {
              "$ref": "#/components/schemas/Tournament"
            }
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "seoMetaData": {
            "type": "string",
            "description": "Seo meta data",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean",
            "description": "Is published"
          },
          "ratings": {
            "type": "number",
            "description": "Ratings",
            "format": "float",
            "nullable": true
          },
          "recommendation": {
            "type": "string",
            "description": "Ratings recommendation",
            "nullable": true
          }
        }
      },
      "UserDetail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "User Id",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "description": "User url safe name\n/// "
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true
          },
          "aboutMe": {
            "type": "string",
            "description": "About me",
            "nullable": true
          },
          "avatarImagePath": {
            "type": "string",
            "description": "Avatar image path",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true
          }
        }
      },
      "RelatedArticle": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "type",
          "urlSafeType",
          "title",
          "urlSafeTitle",
          "publishedAt",
          "headlineImagePath",
          "url",
          "siteSectionUrlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Article id",
            "format": "int32"
          },
          "type": {
            "description": "Article subtype id",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumArticleType"
              }
            ]
          },
          "urlSafeType": {
            "type": "string",
            "description": "Url Safe Type",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "description": "Article title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe title",
            "minLength": 1
          },
          "publishedAt": {
            "type": "integer",
            "description": "Published At",
            "format": "int64"
          },
          "headlineImagePath": {
            "type": "string",
            "description": "Headline image path for web",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "sectionCount": {
            "type": "integer",
            "format": "int32"
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "Team": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Team name"
          },
          "urlSafeName": {
            "type": "string",
            "description": "Player Url Safe Name"
          },
          "imageUrl": {
            "type": "string",
            "description": "Image file name",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "game": {
            "description": "Game",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          }
        }
      },
      "Country": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "code",
          "flagImageUrl"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Country Id"
          },
          "name": {
            "type": "string",
            "description": "Country Name",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "description": "Country Code",
            "minLength": 1
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Country Flag Image Url",
            "minLength": 1
          }
        }
      },
      "GameBasicInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Game Id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "name": {
            "type": "string",
            "description": "Game Name",
            "maxLength": 20,
            "minLength": 0
          },
          "urlSafeName": {
            "type": "string",
            "description": "Game UrlSafeName",
            "maxLength": 20,
            "minLength": 0
          }
        }
      },
      "Tournament": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Team Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Player Name"
          },
          "urlSafeName": {
            "type": "string",
            "description": "Player Url Safe Name"
          },
          "imageFileName": {
            "type": "string",
            "description": "Image file name",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true
          },
          "game": {
            "description": "Game",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfGetArticleDetailMetaTagsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetArticleDetailMetaTagsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetArticleDetailMetaTagsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "detail",
          "metaTags",
          "seoMetaData"
        ],
        "properties": {
          "detail": {
            "description": "Article detail",
            "oneOf": [
              {
                "$ref": "#/components/schemas/SimpleArticleDetail"
              }
            ]
          },
          "metaTags": {
            "type": "object",
            "description": "MetaTags",
            "additionalProperties": {
              "type": "string"
            }
          },
          "seoMetaData": {
            "type": "object",
            "description": "Seo meta data",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SimpleArticleDetail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "type",
          "typeName",
          "typeNameForUrl",
          "subType",
          "subTypeName",
          "publishedAt"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Article id",
            "format": "int32"
          },
          "type": {
            "description": "Article Type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumArticleType"
              }
            ]
          },
          "typeName": {
            "type": "string",
            "description": "Article type name",
            "minLength": 1
          },
          "typeNameForUrl": {
            "type": "string",
            "description": "Type name for url",
            "minLength": 1
          },
          "subType": {
            "type": "integer",
            "description": "Article SubType Id"
          },
          "subTypeName": {
            "type": "string",
            "description": "Article SubType Name",
            "minLength": 1
          },
          "publishedAt": {
            "type": "integer",
            "description": "Published at",
            "format": "int64"
          }
        }
      },
      "ApiRespBaseOfGetArticleJsonLDResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetArticleJsonLDResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetArticleJsonLDResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "frontendUrl",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "title",
          "teaser",
          "type",
          "url",
          "imageUrl",
          "authorName",
          "authorsName",
          "authorUrlSafeName",
          "authorUrl",
          "frontendName",
          "publishedAt",
          "updatedAt",
          "seoMetaData",
          "authors"
        ],
        "properties": {
          "frontendUrl": {
            "type": "string",
            "description": "Frontend url",
            "minLength": 1
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "teaser": {
            "type": "string",
            "description": "Teaser",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "description": "Article type",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Article url",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Image",
            "minLength": 1
          },
          "authorName": {
            "type": "string",
            "description": "Author",
            "minLength": 1
          },
          "authorsName": {
            "type": "string",
            "description": "Author",
            "minLength": 1
          },
          "authorUrlSafeName": {
            "type": "string",
            "description": "Author url safe name",
            "minLength": 1
          },
          "authorUrl": {
            "type": "string",
            "description": "Author url",
            "minLength": 1
          },
          "frontendName": {
            "type": "string",
            "description": "Frontend name",
            "minLength": 1
          },
          "publishedAt": {
            "type": "string",
            "description": "Publish at",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at",
            "minLength": 1
          },
          "seoMetaData": {
            "type": "object",
            "description": "Seo meta data",
            "additionalProperties": {
              "type": "string"
            }
          },
          "authors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleJsonLDAuthor"
            }
          },
          "ratingValue": {
            "type": "number",
            "description": "Ratings",
            "format": "float",
            "nullable": true
          }
        }
      },
      "ArticleJsonLDAuthor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authorName": {
            "type": "string",
            "description": "Author name"
          },
          "authorUrlSafeName": {
            "type": "string",
            "description": "Author url safe name"
          },
          "authorUrl": {
            "type": "string",
            "description": "Author url"
          }
        }
      },
      "ApiRespBaseOfGetQuickPollResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetQuickPollResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetQuickPollResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "question",
          "options"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Quick Poll Id",
            "format": "int32"
          },
          "question": {
            "type": "string",
            "description": "Question",
            "minLength": 1
          },
          "options": {
            "type": "array",
            "description": "Options",
            "items": {
              "$ref": "#/components/schemas/QuickPollOption"
            }
          },
          "userVoteOptionId": {
            "type": "integer",
            "description": "User vote option id",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "QuickPollOption": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemOfInteger"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "votes"
            ],
            "properties": {
              "votes": {
                "type": "integer",
                "description": "Votes",
                "format": "int32",
                "maximum": 2147483647.0,
                "minimum": 1.0
              },
              "votePercentage": {
                "type": "integer",
                "description": "Vote percentage",
                "format": "int32",
                "maximum": 100.0,
                "minimum": 1.0,
                "nullable": true
              }
            }
          }
        ]
      },
      "ApiRespBaseOfGetArticleRelatedDataV6Resp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetArticleRelatedDataV6Resp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetArticleRelatedDataV6Resp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "relatedArticles",
          "teams",
          "tournaments"
        ],
        "properties": {
          "relatedArticles": {
            "type": "array",
            "description": "Related Players",
            "items": {
              "$ref": "#/components/schemas/RelatedArticle"
            }
          },
          "teams": {
            "type": "array",
            "description": "Related Teams",
            "items": {
              "$ref": "#/components/schemas/Team"
            }
          },
          "tournaments": {
            "type": "array",
            "description": "Related Tournaments",
            "items": {
              "$ref": "#/components/schemas/Tournament"
            }
          }
        }
      },
      "ApiRespBaseOfGetTopArticlesResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTopArticlesResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTopArticlesResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "articles"
        ],
        "properties": {
          "articles": {
            "type": "array",
            "description": "Articles",
            "items": {
              "$ref": "#/components/schemas/TopArticleItem"
            }
          }
        }
      },
      "TopArticleItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "type",
          "urlSafeType",
          "title",
          "urlSafeTitle",
          "publishedAt",
          "headlineImagePath",
          "url",
          "siteSectionUrlSafeName",
          "siteSectionName",
          "order",
          "authorUserName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Article id",
            "format": "int32"
          },
          "type": {
            "description": "Article subtype id",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumArticleType"
              }
            ]
          },
          "urlSafeType": {
            "type": "string",
            "description": "Url Safe Type",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "description": "Article title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe title",
            "minLength": 1
          },
          "publishedAt": {
            "type": "integer",
            "description": "Published At",
            "format": "int64"
          },
          "headlineImagePath": {
            "type": "string",
            "description": "Headline image path for web",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "sectionCount": {
            "type": "integer",
            "format": "int32"
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "siteSectionName": {
            "type": "string",
            "minLength": 1
          },
          "order": {
            "type": "integer",
            "description": "Top article order"
          },
          "authorUserName": {
            "type": "string",
            "minLength": 1
          },
          "authorFirstName": {
            "type": "string",
            "nullable": true
          },
          "authorLastName": {
            "type": "string",
            "nullable": true
          },
          "authors": {
            "type": "integer"
          },
          "isMultipleAuthors": {
            "type": "boolean"
          }
        }
      },
      "ApiRespBaseOfGetBroadcastTalentsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetBroadcastTalentsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetBroadcastTalentsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "broadcastTalents",
          "paging"
        ],
        "properties": {
          "broadcastTalents": {
            "type": "array",
            "description": "Broadcast talents",
            "items": {
              "$ref": "#/components/schemas/BroadcastTalentListItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "BroadcastTalentListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "gameId",
          "gameName",
          "gameUrlSafeName",
          "game",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "name",
          "urlSafeName",
          "languageId",
          "languageCode",
          "countryId",
          "countryName",
          "countryCode",
          "country",
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Broadcast talent id",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "game": {
            "description": "Game",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "Broadcast talent name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Broadcast talent url safe name",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Broadcast talent image url",
            "nullable": true
          },
          "roleIds": {
            "type": "string",
            "description": "Role ids",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "description": "Roles",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "languageId": {
            "type": "integer",
            "description": "Language id"
          },
          "languageCode": {
            "type": "string",
            "description": "Language code",
            "minLength": 1
          },
          "countryId": {
            "type": "integer",
            "description": "Country id"
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "minLength": 1
          },
          "countryCode": {
            "type": "string",
            "minLength": 1
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          }
        }
      },
      "EnumBroadcastTalentType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Host",
          "Commentator",
          "Analyst",
          "Observer",
          "Interviewer",
          "Other"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          99
        ]
      },
      "EnumBroadcastTalentStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Retired",
          "Active"
        ],
        "enum": [
          1,
          2
        ]
      },
      "ApiRespBaseOfGetBroadcastTalentDetailResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetBroadcastTalentDetailResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetBroadcastTalentDetailResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "broadcastTalent"
        ],
        "properties": {
          "broadcastTalent": {
            "description": "Broadcast talent detail",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BroadcastTalentDetail"
              }
            ]
          }
        }
      },
      "BroadcastTalentDetail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "gameId",
          "gameName",
          "gameUrlSafeName",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "isActive",
          "status",
          "statusName",
          "languageId",
          "language",
          "languageCode",
          "countryId",
          "countryName",
          "countryCode",
          "hasParentTournaments",
          "hasPersonalSteam",
          "hasVods"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Broadcast talent",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name (Nickname)",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "roleIds": {
            "type": "string",
            "description": "Role ids ",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "description": "Roles",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "Is active"
          },
          "status": {
            "description": "Status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumBroadcastTalentStatus"
              }
            ]
          },
          "statusName": {
            "type": "string",
            "description": "Status name",
            "minLength": 1
          },
          "webSite": {
            "type": "string",
            "description": "WebSite",
            "nullable": true
          },
          "facebook": {
            "type": "string",
            "description": "Facebook",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "description": "Twitter",
            "nullable": true
          },
          "youtube": {
            "type": "string",
            "description": "Youtube",
            "nullable": true
          },
          "about": {
            "type": "string",
            "description": "About",
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "description": "Language id"
          },
          "language": {
            "type": "string",
            "description": "Language",
            "minLength": 1
          },
          "languageCode": {
            "type": "string",
            "description": "Language code",
            "minLength": 1
          },
          "countryId": {
            "type": "integer",
            "description": "Country id"
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "minLength": 1
          },
          "countryCode": {
            "type": "string",
            "description": "Country code",
            "minLength": 1
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url"
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "hasParentTournaments": {
            "type": "boolean",
            "description": "Has parent tournament"
          },
          "personalStreamId": {
            "type": "integer",
            "description": "Personal stream id",
            "format": "int32",
            "nullable": true
          },
          "hasPersonalSteam": {
            "type": "boolean",
            "description": "Has personal stream"
          },
          "hasVods": {
            "type": "boolean",
            "description": "Has vods (Videos)"
          }
        }
      },
      "ApiRespBaseOfGetParentsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetParentsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetParentsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parents",
          "paging"
        ],
        "properties": {
          "parents": {
            "type": "array",
            "description": "Parent tournaments",
            "items": {
              "$ref": "#/components/schemas/ParentListItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ParentListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "name",
          "urlSafeName",
          "gameId",
          "gameName",
          "gameUrlSafeName",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "status",
          "statusName",
          "isFeatured",
          "url",
          "participantCount"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          },
          "frontendId": {
            "type": "integer",
            "description": "Frontend id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Parent name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Parent url safe name",
            "minLength": 1
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "gameIconUrl": {
            "type": "string",
            "description": "Game icon url",
            "nullable": true
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "imagePath": {
            "type": "string",
            "description": "Image path",
            "nullable": true
          },
          "prizePoolCurrency": {
            "description": "Prize pool currency",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrency"
              }
            ]
          },
          "prizePoolCurrencyName": {
            "type": "string",
            "description": "Prize pool currency name",
            "nullable": true
          },
          "prizePoolCurrencyCode": {
            "type": "string",
            "description": "Prize pool currency code",
            "nullable": true
          },
          "prizePool": {
            "type": "number",
            "description": "Prize pool (locale currency)",
            "format": "decimal",
            "nullable": true
          },
          "prizePoolUsd": {
            "type": "number",
            "description": "Prize pool (USD)",
            "format": "decimal",
            "nullable": true
          },
          "status": {
            "description": "Status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumTournamentStatus"
              }
            ]
          },
          "statusName": {
            "type": "string",
            "description": "Status name",
            "minLength": 1
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Is featured"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "startingAt": {
            "type": "integer",
            "description": "Starting at",
            "format": "int64",
            "nullable": true
          },
          "sponsors": {
            "type": "array",
            "description": "Sponsors",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ItemOfShort"
            }
          },
          "participantCount": {
            "type": "integer",
            "description": "Participant count",
            "format": "int32"
          },
          "participants": {
            "type": "array",
            "description": "Participants",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          }
        }
      },
      "EnumCurrency": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "USD",
          "EUR",
          "CNY",
          "RUB",
          "GBP",
          "PHP",
          "AUD",
          "BGN",
          "BRL",
          "CAD",
          "CZK",
          "DKK",
          "HKD",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "KRW",
          "MXN",
          "MYR",
          "NZD",
          "PLN",
          "RON",
          "SEK",
          "SGD",
          "THB",
          "TRY",
          "ZAR",
          "JPY"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29
        ]
      },
      "EnumTournamentStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Upcoming",
          "Live",
          "Canceled",
          "Completed"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "ItemOfShort": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "Participant": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Player or team id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Player or team name",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetStreamByBroadcastTalentResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetStreamByBroadcastTalentResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetStreamByBroadcastTalentResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "personalStream"
        ],
        "properties": {
          "personalStream": {
            "description": "Personal stream",
            "oneOf": [
              {
                "$ref": "#/components/schemas/StreamListItem"
              }
            ]
          }
        }
      },
      "StreamListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "streamId",
          "platform",
          "platformName",
          "isLive",
          "title",
          "urlSafeTitle",
          "viewerCount",
          "viewCount",
          "gameId",
          "gameName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Stream media id",
            "format": "int32"
          },
          "streamId": {
            "type": "string",
            "description": "Stream id",
            "minLength": 1
          },
          "platform": {
            "description": "Platform",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPlatform"
              }
            ]
          },
          "platformName": {
            "type": "string",
            "description": "Platform name",
            "minLength": 1
          },
          "isLive": {
            "type": "boolean",
            "description": "Is live"
          },
          "screenCapUrl": {
            "type": "string",
            "description": "Screen cap url",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe name",
            "minLength": 1
          },
          "viewerCount": {
            "type": "integer",
            "description": "Viewer count",
            "format": "int32"
          },
          "viewCount": {
            "type": "integer",
            "description": "View count",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "streamUrl": {
            "type": "string",
            "description": "Stream url",
            "nullable": true
          }
        }
      },
      "EnumPlatform": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "PLATFORM_TWITCHTV",
          "PLATFORM_YOUTUBE_CHANNEL",
          "PLATFORM_YOUTUBE_STREAM",
          "PLATFORM_FACEBOOK",
          "PLATFORM_OTHER"
        ],
        "enum": [
          1,
          10,
          11,
          12,
          99
        ]
      },
      "ApiRespBaseOfGetVodsByBroadcastTalentResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetVodsByBroadcastTalentResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetVodsByBroadcastTalentResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vods",
          "paging"
        ],
        "properties": {
          "vods": {
            "type": "array",
            "description": "Vods",
            "items": {
              "$ref": "#/components/schemas/VodItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "VodItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "title",
          "urlSafeTitle",
          "description",
          "host",
          "hostName",
          "hostVideoId",
          "createdAt",
          "displaySectionId",
          "siteSectionUrlSafeName",
          "sectionIds",
          "startTime",
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Vod id (Media item id)",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Vod title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Vod title url safe name",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "Description",
            "minLength": 1
          },
          "screenCapUrl": {
            "type": "string",
            "description": "Vod screen cap url",
            "nullable": true
          },
          "host": {
            "description": "Host",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumVideoHost"
              }
            ]
          },
          "hostName": {
            "type": "string",
            "description": "Host name",
            "minLength": 1
          },
          "hostVideoId": {
            "type": "string",
            "description": "Host video id",
            "minLength": 1
          },
          "channelName": {
            "type": "string",
            "description": "Channel name",
            "nullable": true
          },
          "matchId": {
            "type": "integer",
            "description": "Match id",
            "format": "int32",
            "nullable": true
          },
          "matchNumber": {
            "type": "integer",
            "description": "Match number"
          },
          "roundNumber": {
            "type": "integer",
            "description": "Round number"
          },
          "roundName": {
            "type": "string",
            "description": "Round name"
          },
          "matchGameId": {
            "type": "integer",
            "description": "Match Game Id",
            "format": "int32",
            "nullable": true
          },
          "gameNumber": {
            "type": "integer",
            "description": "Match game number",
            "format": "int32",
            "nullable": true
          },
          "parentGameId": {
            "type": "integer",
            "description": "Parent game id",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "createdAt": {
            "type": "integer",
            "description": "Created at",
            "format": "int64"
          },
          "displaySectionId": {
            "type": "integer",
            "description": "Display Section Id"
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "sectionIds": {
            "type": "array",
            "description": "Section Ids",
            "items": {
              "type": "integer"
            }
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "stageName": {
            "type": "string",
            "description": "Stage name"
          },
          "childName": {
            "type": "string",
            "description": "Child name"
          },
          "childType": {
            "description": "Child type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumChildTournament"
              }
            ]
          },
          "match": {
            "description": "Vod match",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VodMatch"
              }
            ]
          }
        }
      },
      "EnumVideoHost": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Youtube",
          "Dailymotion",
          "Vimeo",
          "TwitchTv",
          "Facebook"
        ],
        "enum": [
          0,
          2,
          3,
          4,
          7
        ]
      },
      "EnumChildTournament": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Group",
          "Knockout",
          "BattleRoyale"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "VodMatch": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "stageName",
          "childName",
          "childType",
          "childTypeName",
          "matchId",
          "matchUrlSafeName",
          "matchNumber",
          "roundNumber",
          "roundName",
          "matchGameId",
          "gameNumber"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent name"
          },
          "parentUrlSafeName": {
            "type": "string",
            "description": "Parent url safe name"
          },
          "parentGameId": {
            "type": "integer",
            "description": "Parent game id"
          },
          "stageName": {
            "type": "string",
            "description": "Stage name",
            "minLength": 1
          },
          "childName": {
            "type": "string",
            "description": "Child name",
            "minLength": 1
          },
          "childType": {
            "description": "Child type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumChildTournament"
              }
            ]
          },
          "childTypeName": {
            "type": "string",
            "description": "Child type name",
            "minLength": 1
          },
          "matchId": {
            "type": "integer",
            "description": "Match id",
            "format": "int32"
          },
          "matchUrlSafeName": {
            "type": "string",
            "description": "Match url safe name",
            "minLength": 1
          },
          "matchNumber": {
            "type": "integer",
            "description": "Match number"
          },
          "roundNumber": {
            "type": "integer",
            "description": "Round number"
          },
          "roundName": {
            "type": "string",
            "description": "Round name",
            "minLength": 1
          },
          "matchGameId": {
            "type": "integer",
            "description": "Match Game Id",
            "format": "int32"
          },
          "gameNumber": {
            "type": "integer",
            "description": "Match game number",
            "format": "int32"
          },
          "result": {
            "description": "Match result",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumMatchResult"
              }
            ]
          },
          "opponents": {
            "type": "array",
            "description": "Opponents",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VodMatchOpponent"
            }
          }
        }
      },
      "EnumMatchResult": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Win",
          "Draw",
          "Forfeit",
          "Disq",
          "Qualif"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "VodMatchOpponent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent name"
          },
          "parentUrlSafeName": {
            "type": "string",
            "description": "Parent url safe name"
          },
          "parentGameId": {
            "type": "integer",
            "description": "Parent game id"
          },
          "stageName": {
            "type": "string",
            "description": "Stage name"
          },
          "childName": {
            "type": "string",
            "description": "Child name"
          },
          "matchId": {
            "type": "integer",
            "description": "Match id",
            "format": "int32"
          },
          "matchUrlSafeName": {
            "type": "string",
            "description": "Match url safe name"
          },
          "result": {
            "description": "Match result",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumMatchResult"
              }
            ]
          },
          "sourceId": {
            "type": "integer",
            "description": "Team or Player id",
            "format": "int32"
          },
          "registeredId": {
            "type": "integer",
            "description": "Registered id",
            "format": "int32"
          },
          "opponentPlacement": {
            "type": "integer",
            "description": "Opponent placement\n1: Team 1 or Player 1\n2: Team 2 or Player 2"
          },
          "opponentType": {
            "description": "Opponent type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumOpponentType"
              }
            ]
          },
          "opponentTypeName": {
            "type": "string",
            "description": "Opponent type name"
          },
          "opponentName": {
            "type": "string",
            "description": "Opponent name"
          },
          "opponentFullName": {
            "type": "string",
            "description": "Opponent full name"
          },
          "opponentUrlSafeName": {
            "type": "string",
            "description": "Opponent url safe name"
          },
          "opponentTage": {
            "type": "string",
            "description": "Opponent tag"
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "description": "Score",
            "nullable": true
          }
        }
      },
      "EnumOpponentType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Team",
          "Player"
        ],
        "enum": [
          1,
          2
        ]
      },
      "ApiRespBaseOfGetEventPageResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetEventPageResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetEventPageResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "activePageId",
          "event",
          "page",
          "boxes"
        ],
        "properties": {
          "activePageId": {
            "type": "integer",
            "description": "Active page id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "event": {
            "description": "Event",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Event"
              }
            ]
          },
          "page": {
            "description": "Pages",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventPage"
              }
            ]
          },
          "boxes": {
            "type": "array",
            "description": "Page boxes",
            "items": {}
          }
        }
      },
      "Event": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName",
          "description",
          "isHidden",
          "isLan",
          "country",
          "city",
          "startAt",
          "endAt",
          "games",
          "organizers"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Event id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Event name",
            "maxLength": 80,
            "minLength": 0
          },
          "urlSafeName": {
            "type": "string",
            "description": "Url safe name",
            "maxLength": 80,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "description": "Description",
            "minLength": 1
          },
          "isHidden": {
            "type": "boolean",
            "description": "Is hidden"
          },
          "isLan": {
            "type": "boolean",
            "description": "Is lan"
          },
          "country": {
            "type": "string",
            "description": "Country",
            "minLength": 1
          },
          "city": {
            "type": "string",
            "description": "City",
            "minLength": 1
          },
          "startAt": {
            "type": "integer",
            "description": "Start at",
            "format": "int64"
          },
          "endAt": {
            "type": "integer",
            "description": "End at",
            "format": "int64"
          },
          "games": {
            "type": "array",
            "description": "Games",
            "items": {
              "$ref": "#/components/schemas/GameBasicInfo"
            }
          },
          "organizers": {
            "type": "array",
            "description": "Organizers",
            "items": {
              "$ref": "#/components/schemas/Organizer"
            }
          }
        }
      },
      "Organizer": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "logoImage",
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Organizer id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "name": {
            "type": "string",
            "description": "Name",
            "maxLength": 30,
            "minLength": 0
          },
          "logoImage": {
            "type": "string",
            "description": "Logo image (Small logo image)",
            "maxLength": 255,
            "minLength": 0
          },
          "url": {
            "type": "string",
            "description": "Url",
            "maxLength": 60,
            "minLength": 0
          }
        }
      },
      "EventPage": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName",
          "number"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Page id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "name": {
            "type": "string",
            "description": "Page name",
            "maxLength": 60,
            "minLength": 0
          },
          "urlSafeName": {
            "type": "string",
            "description": "Page url safe name",
            "maxLength": 60,
            "minLength": 0
          },
          "number": {
            "type": "integer",
            "description": "Page number",
            "maximum": 32767.0,
            "minimum": 1.0
          }
        }
      },
      "ApiRespBaseOfGetEventBoxParticipantsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetEventBoxParticipantsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetEventBoxParticipantsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "participants"
        ],
        "properties": {
          "participants": {
            "type": "array",
            "description": "Participants",
            "items": {
              "$ref": "#/components/schemas/GetParticipantItem"
            }
          }
        }
      },
      "GetParticipantItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "opponentType",
          "opponentTypeName",
          "id",
          "name",
          "tag",
          "urlSafeName",
          "url"
        ],
        "properties": {
          "opponentType": {
            "description": "Opponent type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumOpponentType"
              }
            ]
          },
          "opponentTypeName": {
            "type": "string",
            "description": "Opponent type name",
            "minLength": 1
          },
          "id": {
            "type": "integer",
            "description": "Player or team id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "name": {
            "type": "string",
            "description": "Player or team name",
            "maxLength": 50,
            "minLength": 0
          },
          "tag": {
            "type": "string",
            "description": "Player or team tag",
            "maxLength": 20,
            "minLength": 0
          },
          "urlSafeName": {
            "type": "string",
            "description": "Player or team url safe name",
            "maxLength": 50,
            "minLength": 0
          },
          "imageUrl": {
            "type": "string",
            "description": "Logo image url",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "ranking": {
            "type": "integer",
            "description": "Ranking for team",
            "format": "int32",
            "nullable": true
          },
          "game": {
            "description": "Game",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "country": {
            "description": "Country",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetEventBoxParentsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetEventBoxParentsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetEventBoxParentsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parents",
          "paging"
        ],
        "properties": {
          "parents": {
            "type": "array",
            "description": "Parent tournaments",
            "items": {
              "$ref": "#/components/schemas/ParentListItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetEventBoxCountriesResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetEventBoxCountriesResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetEventBoxCountriesResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "countries"
        ],
        "properties": {
          "countries": {
            "type": "array",
            "description": "Countries",
            "items": {
              "$ref": "#/components/schemas/ItemOfShort"
            }
          }
        }
      },
      "ApiRespBaseOfGetLiveStreamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetLiveStreamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetLiveStreamResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "teamBanner",
          "liveStreamDefaultImage"
        ],
        "properties": {
          "stream": {
            "description": "Stream",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionAllStream"
              }
            ]
          },
          "teamBanner": {
            "type": "string",
            "minLength": 1
          },
          "liveStreamDefaultImage": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "SiteSectionAllStream": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "title",
          "urlSafeTitle",
          "platform",
          "platformName",
          "streamId",
          "isLive",
          "viewerCount",
          "matchId",
          "matchUrlSafeName",
          "matchUrl",
          "opponentCount",
          "childType",
          "parentId",
          "parentName",
          "parentUrlSafeName",
          "parentGameId",
          "parentGameName",
          "parentGameUrlSafeName",
          "parentUrl",
          "match",
          "matchOpponents"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Stream media id",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe title",
            "minLength": 1
          },
          "platform": {
            "description": "Platform",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPlatform"
              }
            ]
          },
          "platformName": {
            "type": "string",
            "description": "Platform name",
            "minLength": 1
          },
          "streamId": {
            "type": "string",
            "description": "Stream id",
            "minLength": 1
          },
          "isLive": {
            "type": "boolean",
            "description": "Is live"
          },
          "viewerCount": {
            "type": "integer",
            "description": "Viewer count",
            "format": "int32"
          },
          "screenCapUrl": {
            "type": "string",
            "description": "Screen cap url",
            "nullable": true
          },
          "screenCapCdnUrl": {
            "type": "string",
            "description": "Screen cap cdn url",
            "nullable": true
          },
          "streamUrl": {
            "type": "string",
            "description": "Stream url",
            "nullable": true
          },
          "matchId": {
            "type": "integer",
            "description": "Match id",
            "format": "int32"
          },
          "matchUrlSafeName": {
            "type": "string",
            "description": "Match url safe name",
            "minLength": 1
          },
          "matchUrl": {
            "type": "string",
            "description": "Match url",
            "minLength": 1
          },
          "opponentCount": {
            "type": "integer",
            "description": "Opponent count"
          },
          "childType": {
            "description": "Child type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumChildTournament"
              }
            ]
          },
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent name",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "description": "Parent url safe name",
            "minLength": 1
          },
          "parentGameId": {
            "type": "integer",
            "description": "Game id"
          },
          "parentGameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "parentGameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "parentUrl": {
            "type": "string",
            "description": "Parent tournament url",
            "minLength": 1
          },
          "match": {
            "description": "Match",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaMatch"
              }
            ]
          },
          "matchOpponents": {
            "type": "array",
            "description": "Match opponent",
            "items": {
              "$ref": "#/components/schemas/MediaMatchOpponent"
            }
          }
        }
      },
      "MediaMatch": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "roundId",
          "roundName",
          "matchId",
          "matchNumber",
          "matchName"
        ],
        "properties": {
          "roundId": {
            "type": "integer",
            "description": "Round id",
            "format": "int32"
          },
          "roundName": {
            "type": "string",
            "description": "Round name",
            "minLength": 1
          },
          "matchId": {
            "type": "integer",
            "description": "Match id",
            "format": "int32"
          },
          "matchNumber": {
            "type": "integer",
            "description": "Match number"
          },
          "matchName": {
            "type": "string",
            "description": "Match name",
            "minLength": 1
          }
        }
      },
      "MediaMatchOpponent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "registeredId",
          "sourceId",
          "placement",
          "type",
          "tag"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "description": "Match id",
            "format": "int32"
          },
          "registeredId": {
            "type": "integer",
            "description": "Registered id",
            "format": "int32"
          },
          "sourceId": {
            "type": "integer",
            "description": "Source id (team or player id)",
            "format": "int32"
          },
          "placement": {
            "type": "integer",
            "description": "Opponent placement"
          },
          "type": {
            "description": "Opponent type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumOpponentType"
              }
            ]
          },
          "score": {
            "type": "integer",
            "description": "Score",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "description": "Tag",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "Country id",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "ranking": {
            "type": "integer",
            "description": "Ranking\nIf null: not show ranking",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetSiteSectionBannersResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetSiteSectionBannersResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetSiteSectionBannersResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "banners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteSectionBanner"
            }
          }
        }
      },
      "SiteSectionBanner": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "siteSectionId",
          "siteSectionUrlSafeName",
          "enableHyperlink",
          "updateAt",
          "feShortName"
        ],
        "properties": {
          "siteSectionId": {
            "type": "integer"
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "altText": {
            "type": "string",
            "nullable": true
          },
          "enableHyperlink": {
            "type": "boolean"
          },
          "openType": {
            "description": "1 : \"Open in new tab\" 2: \"Open in existing page\"",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumBannerOpenType"
              }
            ]
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "updateAt": {
            "type": "integer",
            "format": "int64"
          },
          "feShortName": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "EnumBannerOpenType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "NewTab",
          "ExistingPage"
        ],
        "enum": [
          1,
          2
        ]
      },
      "ApiRespBaseOfVerifyUrlResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/VerifyUrlResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "VerifyUrlResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "redirectUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfAddLogResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AddLogResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "AddLogResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddLogReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "traceId",
          "prefix",
          "logLevel",
          "message",
          "messagePayload",
          "className",
          "methodName"
        ],
        "properties": {
          "traceId": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "prefix": {
            "type": "string",
            "description": "Ex: GG.Frontend.Portal/GB.Frontend.Portal",
            "maxLength": 128,
            "minLength": 0
          },
          "logLevel": {
            "description": "Trace=0, Debug=1, Information=2, Warning=3, Error=4, Critical=5, None=6",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LogLevel"
              }
            ]
          },
          "message": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          },
          "messagePayload": {
            "type": "string",
            "maxLength": 4000,
            "minLength": 0
          },
          "className": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "methodName": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          }
        }
      },
      "LogLevel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Trace",
          "Debug",
          "Information",
          "Warning",
          "Error",
          "Critical",
          "None"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "ApiRespBaseOfGetMatchDetailResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetMatchDetailResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetMatchDetailResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "parentTournamentId",
          "parentTournamentName",
          "parentUrlSafeName",
          "siteSectionUrlSafeName",
          "isPlayerBased",
          "childId",
          "childTournamentName",
          "childTournamentType",
          "roundId",
          "roundName",
          "matchNumber",
          "gameId",
          "gameName",
          "startTournament",
          "gamesPerMatch",
          "winnerRegistrationId",
          "matchResult",
          "gridId",
          "matchStatus",
          "matchGames",
          "canEditMatches"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "parentTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentTournamentName": {
            "type": "string",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "parentImage": {
            "type": "string",
            "description": "Parent tournament Image path",
            "nullable": true
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "isPlayerBased": {
            "type": "boolean"
          },
          "childId": {
            "type": "integer",
            "format": "int32"
          },
          "childTournamentName": {
            "type": "string",
            "minLength": 1
          },
          "childTournamentType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "roundId": {
            "type": "integer",
            "format": "int32"
          },
          "roundName": {
            "type": "string",
            "minLength": 1
          },
          "matchNumber": {
            "type": "integer"
          },
          "gameId": {
            "type": "integer"
          },
          "gameName": {
            "type": "string",
            "minLength": 1
          },
          "startTournament": {
            "type": "boolean"
          },
          "startingAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "gamesPerMatch": {
            "type": "integer"
          },
          "winnerRegistrationId": {
            "type": "integer",
            "format": "int32"
          },
          "matchResult": {
            "$ref": "#/components/schemas/EnumMatchResult"
          },
          "gridId": {
            "type": "integer",
            "format": "int32"
          },
          "matchStatus": {
            "$ref": "#/components/schemas/EnumMatchStatus"
          },
          "gameMode": {
            "type": "string",
            "nullable": true
          },
          "team1RegistrationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "team2RegistrationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchGames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchGameItem"
            }
          },
          "opponents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MatchDetailOpponent"
            }
          },
          "streams": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MatchDetailStream"
            }
          },
          "canEditMatches": {
            "type": "boolean",
            "description": "Can edit matches"
          }
        }
      },
      "EnumMatchStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "NotCompleted",
          "Completed",
          "Canceled"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "MatchGameItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "gameId",
          "gameNumber"
        ],
        "properties": {
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "gameNumber": {
            "type": "integer"
          },
          "gameResult": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumGameResult"
              }
            ]
          },
          "mtBattleId": {
            "type": "string",
            "description": "MLBB Battle Id",
            "nullable": true
          }
        }
      },
      "EnumGameResult": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Win",
          "Draw",
          "Forfeit",
          "Disq"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "MatchDetailOpponent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "registrationId",
          "placement",
          "opponentType",
          "opponentId",
          "urlSafeName",
          "tag",
          "worldRanking",
          "name"
        ],
        "properties": {
          "registrationId": {
            "type": "integer",
            "format": "int32"
          },
          "placement": {
            "type": "integer"
          },
          "score": {
            "type": "integer",
            "nullable": true
          },
          "placementPoints": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "killPoints": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsAddition": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsDeduction": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "opponentType": {
            "$ref": "#/components/schemas/EnumOpponentType"
          },
          "opponentId": {
            "type": "integer",
            "format": "int32"
          },
          "urlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "tag": {
            "type": "string",
            "minLength": 1
          },
          "worldRanking": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "opponentImage": {
            "type": "string",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "MatchDetailStream": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "mediaItemId",
          "streamId",
          "title",
          "urlSafeTitle",
          "languageCode",
          "platform",
          "viewerCount",
          "type"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "mediaItemId": {
            "type": "integer",
            "format": "int32"
          },
          "streamId": {
            "type": "string",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "minLength": 1
          },
          "screenCapUrl": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "minLength": 1
          },
          "platform": {
            "$ref": "#/components/schemas/EnumPlatform"
          },
          "viewerCount": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "streamUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetMatchGameDetailResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetMatchGameDetailResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetMatchGameDetailResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchGameId",
          "gameNumber",
          "isPlayerBased",
          "childTournamentType",
          "roundName",
          "matchNumber",
          "gameId",
          "siteSectionUrlSafeName",
          "gamesPerMatch"
        ],
        "properties": {
          "matchGameId": {
            "type": "integer",
            "format": "int32"
          },
          "gameNumber": {
            "type": "integer"
          },
          "mapId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "winnerRegistrationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "result": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumGameResult"
              }
            ]
          },
          "isPlayerBased": {
            "type": "boolean"
          },
          "childTournamentType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "roundName": {
            "type": "string",
            "minLength": 1
          },
          "matchNumber": {
            "type": "integer"
          },
          "gameId": {
            "type": "integer"
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "startingAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "gamesPerMatch": {
            "type": "integer"
          },
          "mapName": {
            "type": "string",
            "nullable": true
          },
          "mapImage": {
            "type": "string",
            "nullable": true
          },
          "vods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MatchGameDetailVodItem"
            }
          },
          "matchGameOpponents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MatchGameOpponent"
            }
          },
          "roundSetItems": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MatchGameRoundSetItem"
            }
          },
          "pubgOpponents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MatchGamePubgOpponent"
            }
          }
        }
      },
      "MatchGameDetailVodItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchGameId",
          "mediaItemId",
          "title",
          "host",
          "hostVideoId",
          "startTime"
        ],
        "properties": {
          "matchGameId": {
            "type": "integer",
            "format": "int32"
          },
          "mediaItemId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "host": {
            "type": "integer"
          },
          "hostVideoId": {
            "type": "string",
            "minLength": 1
          },
          "channelName": {
            "type": "string",
            "nullable": true
          },
          "screenCapUrl": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MatchGameOpponent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "placement",
          "opponentType",
          "id",
          "registrationId",
          "teamName",
          "isFirstPick",
          "urlSafeName"
        ],
        "properties": {
          "placement": {
            "type": "integer"
          },
          "opponentType": {
            "$ref": "#/components/schemas/EnumOpponentType"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "registrationId": {
            "type": "integer",
            "format": "int32"
          },
          "teamName": {
            "type": "string",
            "minLength": 1
          },
          "teamImage": {
            "type": "string",
            "nullable": true
          },
          "teamGameSide": {
            "type": "string",
            "nullable": true
          },
          "teamGameSideCode": {
            "type": "string",
            "nullable": true
          },
          "socre": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFirstPick": {
            "type": "boolean"
          },
          "urlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "draftItems": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MatchGameDraftItem"
            }
          },
          "lineups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MatchGameLineup"
            }
          }
        }
      },
      "MatchGameDraftItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "number",
          "type",
          "heroName"
        ],
        "properties": {
          "number": {
            "type": "integer",
            "description": "sorting no"
          },
          "type": {
            "description": "0:Ban 1: Pick",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumGameDraftType"
              }
            ]
          },
          "heroName": {
            "type": "string",
            "minLength": 1
          },
          "heroImage": {
            "type": "string",
            "nullable": true
          },
          "playerName": {
            "type": "string",
            "nullable": true
          },
          "playerImage": {
            "type": "string",
            "nullable": true
          },
          "playerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "playerUrlSafeName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EnumGameDraftType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Ban",
          "Pick"
        ],
        "enum": [
          0,
          1
        ]
      },
      "MatchGameLineup": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName",
          "image"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Url safe name",
            "minLength": 1
          },
          "image": {
            "type": "string",
            "description": "Image url",
            "minLength": 1
          }
        }
      },
      "MatchGameRoundSetItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "number",
          "isOverTime",
          "sides",
          "team1Score",
          "team2Score"
        ],
        "properties": {
          "number": {
            "type": "integer",
            "description": "sorting no"
          },
          "isOverTime": {
            "type": "boolean",
            "description": "Is over time"
          },
          "sides": {
            "type": "integer",
            "description": "Sides [CS:GO 0:Team1->CT/Team2->T, 1: Team2->CT/Team1->T], [Valorant 0:Team1->A/Team2->D, 1:Team2->A/Team1->D]"
          },
          "team1Score": {
            "type": "integer",
            "description": "Team 1 score",
            "format": "int32"
          },
          "team2Score": {
            "type": "integer",
            "description": "Team 2 score",
            "format": "int32"
          }
        }
      },
      "MatchGamePubgOpponent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "placement",
          "teamName",
          "opponentType",
          "opponentId",
          "urlSafeName"
        ],
        "properties": {
          "placement": {
            "type": "integer"
          },
          "teamName": {
            "type": "string",
            "minLength": 1
          },
          "teamImage": {
            "type": "string",
            "nullable": true
          },
          "opponentType": {
            "$ref": "#/components/schemas/EnumOpponentType"
          },
          "opponentId": {
            "type": "integer",
            "format": "int32"
          },
          "urlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "points": {
            "type": "integer",
            "description": "Placement points",
            "format": "int32",
            "nullable": true
          },
          "kills": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "killPoints": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsAddition": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsDeduction": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "players": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MatchGamePlayer"
            }
          }
        }
      },
      "MatchGamePlayer": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "playerName",
          "urlSafeName",
          "playerId"
        ],
        "properties": {
          "playerName": {
            "type": "string",
            "minLength": 1
          },
          "playerImage": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "urlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "playerId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiRespBaseOfGetMatchesUpcomingResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetMatchesUpcomingResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetMatchesUpcomingResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matches",
          "paging"
        ],
        "properties": {
          "matches": {
            "type": "array",
            "description": "Matches",
            "items": {
              "$ref": "#/components/schemas/GetMatchesUpcoming"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "GetMatchesUpcoming": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "startingAt",
          "matchNumber",
          "parentUrlSafeName",
          "matchUrlSafeName",
          "roundName",
          "stageName",
          "childName",
          "childType",
          "parentId",
          "parentName",
          "gameUrlSafeName",
          "isPlayerBase",
          "streamPlatforms"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "startingAt": {
            "type": "integer",
            "format": "int64"
          },
          "matchNumber": {
            "type": "integer"
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "matchUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "matchGridId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roundName": {
            "type": "string",
            "minLength": 1
          },
          "stageName": {
            "type": "string",
            "minLength": 1
          },
          "childName": {
            "type": "string",
            "minLength": 1
          },
          "childType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "isPlayerBase": {
            "type": "boolean"
          },
          "team1Tag": {
            "type": "string",
            "nullable": true
          },
          "team1Name": {
            "type": "string",
            "nullable": true
          },
          "team1Image": {
            "type": "string",
            "nullable": true
          },
          "team2Tag": {
            "type": "string",
            "nullable": true
          },
          "team2Name": {
            "type": "string",
            "nullable": true
          },
          "team2Image": {
            "type": "string",
            "nullable": true
          },
          "streamPlatforms": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "ApiRespBaseOfGetMatchesResultResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetMatchesResultResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetMatchesResultResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matches",
          "paging"
        ],
        "properties": {
          "matches": {
            "type": "array",
            "description": "Matches",
            "items": {
              "$ref": "#/components/schemas/GetMatchesResult"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "GetMatchesResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "startingAt",
          "matchNumber",
          "parentUrlSafeName",
          "matchUrlSafeName",
          "roundName",
          "stageName",
          "childName",
          "childType",
          "parentId",
          "parentName",
          "gameUrlSafeName",
          "isPlayerBase",
          "streamPlatforms"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "startingAt": {
            "type": "integer",
            "format": "int64"
          },
          "matchNumber": {
            "type": "integer"
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "matchUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "roundName": {
            "type": "string",
            "minLength": 1
          },
          "stageName": {
            "type": "string",
            "minLength": 1
          },
          "childName": {
            "type": "string",
            "minLength": 1
          },
          "childType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "isPlayerBase": {
            "type": "boolean"
          },
          "result": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumMatchResult"
              }
            ]
          },
          "team1Tag": {
            "type": "string",
            "nullable": true
          },
          "team1Name": {
            "type": "string",
            "nullable": true
          },
          "team1Image": {
            "type": "string",
            "nullable": true
          },
          "team1Score": {
            "type": "integer",
            "nullable": true
          },
          "team2Tag": {
            "type": "string",
            "nullable": true
          },
          "team2Name": {
            "type": "string",
            "nullable": true
          },
          "team2Image": {
            "type": "string",
            "nullable": true
          },
          "team2Score": {
            "type": "integer",
            "nullable": true
          },
          "streamPlatforms": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "ApiRespBaseOfListOfGetUpcomingResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/GetUpcomingResp"
                }
              }
            }
          }
        ]
      },
      "GetUpcomingResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "startingAt",
          "matchNumber",
          "parentUrlSafeName",
          "matchUrlSafeName",
          "roundName",
          "stageName",
          "childName",
          "childType",
          "parentId",
          "parentName",
          "gameUrlSafeName",
          "isPlayerBase"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "startingAt": {
            "type": "integer",
            "format": "int64"
          },
          "matchNumber": {
            "type": "integer"
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "matchUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "matchGridId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roundName": {
            "type": "string",
            "minLength": 1
          },
          "stageName": {
            "type": "string",
            "minLength": 1
          },
          "childName": {
            "type": "string",
            "minLength": 1
          },
          "childType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "isPlayerBase": {
            "type": "boolean"
          },
          "team1Tag": {
            "type": "string",
            "nullable": true
          },
          "team1Name": {
            "type": "string",
            "nullable": true
          },
          "team1Image": {
            "type": "string",
            "nullable": true
          },
          "team2Tag": {
            "type": "string",
            "nullable": true
          },
          "team2Name": {
            "type": "string",
            "nullable": true
          },
          "team2Image": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfListOfGetResultsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/GetResultsResp"
                }
              }
            }
          }
        ]
      },
      "GetResultsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "startingAt",
          "matchNumber",
          "parentUrlSafeName",
          "matchUrlSafeName",
          "roundName",
          "stageName",
          "childName",
          "childType",
          "parentId",
          "parentName",
          "gameUrlSafeName",
          "isPlayerBase"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "startingAt": {
            "type": "integer",
            "format": "int64"
          },
          "matchNumber": {
            "type": "integer"
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "matchUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "roundName": {
            "type": "string",
            "minLength": 1
          },
          "stageName": {
            "type": "string",
            "minLength": 1
          },
          "childName": {
            "type": "string",
            "minLength": 1
          },
          "childType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "isPlayerBase": {
            "type": "boolean"
          },
          "result": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumMatchResult"
              }
            ]
          },
          "team1Tag": {
            "type": "string",
            "nullable": true
          },
          "team1Name": {
            "type": "string",
            "nullable": true
          },
          "team1Image": {
            "type": "string",
            "nullable": true
          },
          "team1Score": {
            "type": "integer",
            "nullable": true
          },
          "team2Tag": {
            "type": "string",
            "nullable": true
          },
          "team2Name": {
            "type": "string",
            "nullable": true
          },
          "team2Image": {
            "type": "string",
            "nullable": true
          },
          "team2Score": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetTeamMatchResultResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTeamMatchResultResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTeamMatchResultResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "results",
          "paging"
        ],
        "properties": {
          "results": {
            "type": "array",
            "description": "ESport team match results",
            "items": {
              "$ref": "#/components/schemas/GetTeamResult"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "GetTeamResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentTournamentId",
          "matchId",
          "parentTournamentName",
          "parentUrlSafeName",
          "matchUrlSafeName",
          "siteSectionUrlSafeName"
        ],
        "properties": {
          "parentTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "startingAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parentTournamentName": {
            "type": "string",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "matchUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "team1Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "team1Name": {
            "type": "string",
            "nullable": true
          },
          "team1UrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "team1Image": {
            "type": "string",
            "nullable": true
          },
          "team1Score": {
            "type": "integer",
            "nullable": true
          },
          "team2Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "team2Name": {
            "type": "string",
            "nullable": true
          },
          "team2UrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "team2Image": {
            "type": "string",
            "nullable": true
          },
          "team2Score": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetPlayerMatchResultResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetPlayerMatchResultResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetPlayerMatchResultResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "results",
          "paging"
        ],
        "properties": {
          "results": {
            "type": "array",
            "description": "ESport team match results",
            "items": {
              "$ref": "#/components/schemas/GetPlayerResult"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "GetPlayerResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "parentId",
          "parentTournamentName",
          "parentUrlSafeName",
          "matchUrlSafeName",
          "siteSectionUrlSafeName"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "startingAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentTournamentName": {
            "type": "string",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "matchUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "team1Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "team1Name": {
            "type": "string",
            "nullable": true
          },
          "team1UrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "team1Image": {
            "type": "string",
            "nullable": true
          },
          "team1Score": {
            "type": "integer",
            "nullable": true
          },
          "team2Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "team2Name": {
            "type": "string",
            "nullable": true
          },
          "team2UrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "team2Image": {
            "type": "string",
            "nullable": true
          },
          "team2Score": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "AddStreamToMatchReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "id"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "description": "Child tournament Match Id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "id": {
            "type": "integer",
            "description": "Media stream id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          }
        }
      },
      "ApiRespBaseOfListOfGetMatchStreamsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/GetMatchStreamsResp"
                }
              }
            }
          }
        ]
      },
      "GetMatchStreamsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "mediaItemId",
          "streamId",
          "title",
          "urlSafeTitle",
          "languageCode",
          "platform",
          "viewerCount",
          "type"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "mediaItemId": {
            "type": "integer",
            "format": "int32"
          },
          "streamId": {
            "type": "string",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "minLength": 1
          },
          "screenCapUrl": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "minLength": 1
          },
          "platform": {
            "$ref": "#/components/schemas/EnumPlatform"
          },
          "viewerCount": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "streamUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetTeamMatchEncountersResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTeamMatchEncountersResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTeamMatchEncountersResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "encounters"
        ],
        "properties": {
          "encounters": {
            "type": "array",
            "description": "Encounters",
            "items": {
              "$ref": "#/components/schemas/TeamMatchEncounterInfo"
            }
          }
        }
      },
      "TeamMatchEncounterInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "parentName",
          "parentUrlSafeName",
          "matchId",
          "matchUrlSafeName",
          "startingAt",
          "op1Type",
          "op1RegistrationId",
          "op1Id",
          "op1Name",
          "op1UrlSafeName",
          "op1Score",
          "op2Type",
          "op2RegistrationId",
          "op2Id",
          "op2Name",
          "op2UrlSafeName",
          "op2Score",
          "url"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent tournament name",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "description": "Parent tournament url safe name",
            "minLength": 1
          },
          "matchId": {
            "type": "integer",
            "description": "Match id",
            "format": "int32"
          },
          "matchUrlSafeName": {
            "type": "string",
            "description": "Match url safe name",
            "minLength": 1
          },
          "startingAt": {
            "type": "integer",
            "description": "Match starting at",
            "format": "int64"
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "op1Type": {
            "description": "Op1 type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumOpponentType"
              }
            ]
          },
          "op1RegistrationId": {
            "type": "integer",
            "description": "Op1 registration id",
            "format": "int32"
          },
          "op1Id": {
            "type": "integer",
            "description": "Op1 id",
            "format": "int32"
          },
          "op1Name": {
            "type": "string",
            "description": "Op1 name",
            "minLength": 1
          },
          "op1Tag": {
            "type": "string",
            "description": "Op1 tag",
            "nullable": true
          },
          "op1ImageUrl": {
            "type": "string",
            "description": "Op1 image url",
            "nullable": true
          },
          "op1UrlSafeName": {
            "type": "string",
            "description": "Op1 url safe name",
            "minLength": 1
          },
          "op1Score": {
            "type": "integer",
            "description": "Op1 score"
          },
          "op2Type": {
            "description": "Op2 type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumOpponentType"
              }
            ]
          },
          "op2RegistrationId": {
            "type": "integer",
            "description": "Op2 registration id",
            "format": "int32"
          },
          "op2Id": {
            "type": "integer",
            "description": "Op2 id",
            "format": "int32"
          },
          "op2Name": {
            "type": "string",
            "description": "Op2 name",
            "minLength": 1
          },
          "op2Tag": {
            "type": "string",
            "description": "Op1 tag",
            "nullable": true
          },
          "op2ImageUrl": {
            "type": "string",
            "description": "Op2 image url",
            "nullable": true
          },
          "op2UrlSafeName": {
            "type": "string",
            "description": "Op2 url safe name",
            "minLength": 1
          },
          "op2Score": {
            "type": "integer",
            "description": "Op2 score"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfListOfGetMatchesExternalResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/GetMatchesExternalResp"
                }
              }
            }
          }
        ]
      },
      "GetMatchesExternalResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          },
          "isLive": {
            "type": "boolean"
          },
          "datetime": {
            "type": "string"
          },
          "game": {
            "$ref": "#/components/schemas/Game"
          },
          "pageUrl": {
            "type": "string"
          },
          "tournament": {
            "$ref": "#/components/schemas/Tournament2"
          },
          "description": {
            "type": "string"
          },
          "streams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchStream"
            }
          },
          "firstOpponent": {
            "$ref": "#/components/schemas/Opponent"
          },
          "secondOpponent": {
            "$ref": "#/components/schemas/Opponent"
          }
        }
      },
      "Game": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "Tournament2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "pageUrl": {
            "type": "string"
          },
          "stage": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "MatchStream": {
        "type": "object",
        "additionalProperties": false
      },
      "Opponent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/Country2"
          },
          "pageUrl": {
            "type": "string"
          }
        }
      },
      "Country2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "countryCode": {
            "type": "string"
          }
        }
      },
      "ApiRespBaseOfGetEventMatchUpcomingResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetEventMatchUpcomingResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetEventMatchUpcomingResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matches",
          "paging"
        ],
        "properties": {
          "matches": {
            "type": "array",
            "description": "Matches",
            "items": {
              "$ref": "#/components/schemas/GetMatchesUpcoming"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetEventMatchResultResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetEventMatchResultResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetEventMatchResultResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matches",
          "paging"
        ],
        "properties": {
          "matches": {
            "type": "array",
            "description": "Matches",
            "items": {
              "$ref": "#/components/schemas/GetMatchesResult"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetMLBBBattleDataResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetMLBBBattleDataResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetMLBBBattleDataResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "battleData": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetMLBBLiveStatsResp"
              }
            ]
          },
          "postData": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GetMLBBPostStatsResp"
              }
            ]
          }
        }
      },
      "GetMLBBLiveStatsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "state",
          "stateDescription",
          "gameTime",
          "teamStats",
          "matchEvents"
        ],
        "properties": {
          "state": {
            "type": "string",
            "minLength": 1
          },
          "stateDescription": {
            "type": "string",
            "minLength": 1
          },
          "gameTime": {
            "type": "integer",
            "format": "int32"
          },
          "teamStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBLiveStats"
            }
          },
          "matchEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBMatchEvent"
            }
          }
        }
      },
      "MLBBLiveStats": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "campId",
          "teamName",
          "score",
          "totalGold",
          "totalDamage",
          "lordKills",
          "turtleKills",
          "turretsDestroyed",
          "players",
          "banHeroes"
        ],
        "properties": {
          "campId": {
            "type": "integer",
            "format": "int32"
          },
          "teamName": {
            "type": "string",
            "minLength": 1
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "totalGold": {
            "type": "integer",
            "format": "int32"
          },
          "totalDamage": {
            "type": "integer",
            "format": "int32"
          },
          "lordKills": {
            "type": "integer",
            "format": "int32"
          },
          "turtleKills": {
            "type": "integer",
            "format": "int32"
          },
          "turretsDestroyed": {
            "type": "integer",
            "format": "int32"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBLiveStatsPlayer"
            }
          },
          "banHeroes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBBanHero"
            }
          }
        }
      },
      "MLBBLiveStatsPlayer": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "playerName",
          "heroId",
          "heroName",
          "heroImage",
          "level",
          "kills",
          "deaths",
          "assists",
          "kda",
          "gold",
          "damage",
          "damageToTurrets",
          "damageTaken",
          "damageEffect",
          "offeredRate",
          "totalHeal",
          "emblem",
          "skill",
          "equipments",
          "runeMap"
        ],
        "properties": {
          "playerName": {
            "type": "string",
            "minLength": 1
          },
          "heroId": {
            "type": "integer",
            "format": "int32"
          },
          "heroName": {
            "type": "string",
            "minLength": 1
          },
          "heroImage": {
            "type": "string",
            "minLength": 1
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "kills": {
            "type": "integer",
            "format": "int32"
          },
          "deaths": {
            "type": "integer",
            "format": "int32"
          },
          "assists": {
            "type": "integer",
            "format": "int32"
          },
          "kda": {
            "type": "number",
            "format": "decimal"
          },
          "gold": {
            "type": "integer",
            "format": "int32"
          },
          "damage": {
            "type": "integer",
            "format": "int32"
          },
          "damageToTurrets": {
            "type": "number",
            "format": "decimal"
          },
          "damageTaken": {
            "type": "integer",
            "format": "int32"
          },
          "damageEffect": {
            "type": "integer",
            "format": "int32"
          },
          "offeredRate": {
            "type": "integer",
            "format": "int32"
          },
          "totalHeal": {
            "type": "number",
            "format": "decimal"
          },
          "emblem": {
            "$ref": "#/components/schemas/ItemOfInteger"
          },
          "skill": {
            "description": "Battle Spells",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ItemOfInteger"
              }
            ]
          },
          "equipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBEquipment"
            }
          },
          "runeMap": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemOfInteger"
            }
          }
        }
      },
      "MLBBEquipment": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "equipmentName",
          "imagePath"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Equipment Id",
            "format": "int32"
          },
          "equipmentName": {
            "type": "string",
            "description": "Equipment Name",
            "minLength": 1
          },
          "imagePath": {
            "type": "string",
            "description": "Equipment Image Path",
            "minLength": 1
          }
        }
      },
      "MLBBBanHero": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "heroId": {
            "type": "integer",
            "format": "int32"
          },
          "heroName": {
            "type": "string"
          },
          "heroImage": {
            "type": "string"
          }
        }
      },
      "MLBBMatchEvent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "eventType",
          "time"
        ],
        "properties": {
          "eventType": {
            "type": "string",
            "minLength": 1
          },
          "killedName": {
            "type": "string",
            "description": "PlayerName、BossName、TowerName",
            "nullable": true
          },
          "killerName": {
            "type": "string",
            "nullable": true
          },
          "heroName": {
            "type": "string",
            "nullable": true
          },
          "teamName": {
            "type": "string",
            "nullable": true
          },
          "extraParam": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "time": {
            "type": "integer",
            "description": "Game time when the event happens Unit: second",
            "format": "int32"
          }
        }
      },
      "GetMLBBPostStatsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "teamStats",
          "matchEvents"
        ],
        "properties": {
          "teamStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBPostStats"
            }
          },
          "matchEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBMatchEvent"
            }
          }
        }
      },
      "MLBBPostStats": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "campId",
          "teamName",
          "totalGold",
          "totalDamage",
          "lordKills",
          "turtleKills",
          "crabKills",
          "turretsDestroyed",
          "orangeBuffs",
          "purpleBuffs",
          "lordKillsAt",
          "turtleKillsAt",
          "crabKillsAt",
          "turretsDestroyedAt",
          "orangeBuffsAt",
          "purpleBuffsAt",
          "players",
          "banHeroes"
        ],
        "properties": {
          "campId": {
            "type": "integer",
            "format": "int32"
          },
          "teamName": {
            "type": "string",
            "minLength": 1
          },
          "totalGold": {
            "type": "integer",
            "format": "int32"
          },
          "totalDamage": {
            "type": "integer",
            "format": "int32"
          },
          "lordKills": {
            "type": "integer",
            "format": "int32"
          },
          "turtleKills": {
            "type": "integer",
            "format": "int32"
          },
          "crabKills": {
            "type": "integer",
            "format": "int32"
          },
          "turretsDestroyed": {
            "type": "integer",
            "format": "int32"
          },
          "orangeBuffs": {
            "type": "integer",
            "format": "int32"
          },
          "purpleBuffs": {
            "type": "integer",
            "format": "int32"
          },
          "lordKillsAt": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "turtleKillsAt": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "crabKillsAt": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "turretsDestroyedAt": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "orangeBuffsAt": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "purpleBuffsAt": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBPostStatsPlayer"
            }
          },
          "banHeroes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBBanHero"
            }
          }
        }
      },
      "MLBBPostStatsPlayer": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "playerName",
          "heroId",
          "heroName",
          "heroImage",
          "level",
          "kills",
          "deaths",
          "assists",
          "kda",
          "gold",
          "gpm",
          "damage",
          "damageToTurrets",
          "damageTaken",
          "damageEffect",
          "offeredRate",
          "totalHeal",
          "emblem",
          "battleSpellUsed",
          "skill",
          "equipments",
          "runeMap"
        ],
        "properties": {
          "playerName": {
            "type": "string",
            "minLength": 1
          },
          "heroId": {
            "type": "integer",
            "format": "int32"
          },
          "heroName": {
            "type": "string",
            "minLength": 1
          },
          "heroImage": {
            "type": "string",
            "minLength": 1
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "kills": {
            "type": "integer",
            "format": "int32"
          },
          "deaths": {
            "type": "integer",
            "format": "int32"
          },
          "assists": {
            "type": "integer",
            "format": "int32"
          },
          "kda": {
            "type": "number",
            "format": "decimal"
          },
          "gold": {
            "type": "integer",
            "format": "int32"
          },
          "gpm": {
            "type": "integer",
            "format": "int32"
          },
          "damage": {
            "type": "integer",
            "format": "int32"
          },
          "damageToTurrets": {
            "type": "number",
            "format": "decimal"
          },
          "damageTaken": {
            "type": "integer",
            "format": "int32"
          },
          "damageEffect": {
            "type": "number",
            "format": "decimal"
          },
          "offeredRate": {
            "type": "number",
            "format": "decimal"
          },
          "totalHeal": {
            "type": "number",
            "format": "decimal"
          },
          "emblem": {
            "$ref": "#/components/schemas/ItemOfInteger"
          },
          "battleSpellUsed": {
            "type": "integer",
            "format": "int32"
          },
          "skill": {
            "description": "Battle Spells",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ItemOfInteger"
              }
            ]
          },
          "equipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MLBBEquipment"
            }
          },
          "runeMap": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemOfInteger"
            }
          }
        }
      },
      "ApiRespBaseOfGetMemberResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetMemberResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetMemberResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "memberDetail",
          "articlePaging"
        ],
        "properties": {
          "memberDetail": {
            "description": "Member detail",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberDetail"
              }
            ]
          },
          "articles": {
            "type": "array",
            "description": "Articles",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ArticleListItem"
            }
          },
          "articlePaging": {
            "description": "Article paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "MemberDetail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "userId",
          "username"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "Member user id",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "description": "Username",
            "minLength": 1
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true
          },
          "primaryGameId": {
            "type": "integer",
            "description": "Primary game id",
            "nullable": true
          },
          "primaryGameName": {
            "type": "string",
            "description": "Primary game name",
            "nullable": true
          },
          "aboutMe": {
            "type": "string",
            "description": "About me",
            "nullable": true
          },
          "avatarImageUrl": {
            "type": "string",
            "description": "Avatar image url",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "Country id",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Country code"
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag url",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "GetMemberReq": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiRespBaseOfGetMemberArticlesResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetMemberArticlesResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetMemberArticlesResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "paging"
        ],
        "properties": {
          "articles": {
            "type": "array",
            "description": "Articles",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ArticleListItem"
            }
          },
          "paging": {
            "description": "Ppaging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetCountryOptionsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetCountryOptionsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetCountryOptionsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "countries"
        ],
        "properties": {
          "countries": {
            "type": "array",
            "description": "Countries",
            "items": {
              "$ref": "#/components/schemas/CountryOption"
            }
          }
        }
      },
      "CountryOption": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "code"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Country id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "name": {
            "type": "string",
            "description": "Country name",
            "maxLength": 50,
            "minLength": 0
          },
          "code": {
            "type": "string",
            "description": "Country code",
            "maxLength": 2,
            "minLength": 0
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetGameOptionsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetGameOptionsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetGameOptionsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "games"
        ],
        "properties": {
          "games": {
            "type": "array",
            "description": "Games options",
            "items": {
              "$ref": "#/components/schemas/GameOption"
            }
          }
        }
      },
      "GameOption": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "gameId",
          "name"
        ],
        "properties": {
          "gameId": {
            "type": "integer",
            "description": "Game id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "name": {
            "type": "string",
            "description": "Game name",
            "maxLength": 20,
            "minLength": 0
          }
        }
      },
      "ApiRespBaseOfGetLanguagesResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetLanguagesResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetLanguagesResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "languageOptions"
        ],
        "properties": {
          "languageOptions": {
            "type": "array",
            "description": "Language options",
            "items": {
              "$ref": "#/components/schemas/LanguageOption"
            }
          }
        }
      },
      "LanguageOption": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Language id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "name": {
            "type": "string",
            "description": "Language name",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "ApiRespBaseOfGetPlatformOptionsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetPlatformOptionsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetPlatformOptionsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "platformOptions"
        ],
        "properties": {
          "platformOptions": {
            "type": "array",
            "description": "Stream platform options",
            "items": {
              "$ref": "#/components/schemas/PlatformOption"
            }
          }
        }
      },
      "PlatformOption": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Platform id",
            "maximum": 32767.0,
            "minimum": 1.0
          },
          "name": {
            "type": "string",
            "description": "Platform name",
            "maxLength": 100,
            "minLength": 0
          }
        }
      },
      "ApiRespBaseOfGetCurrencyOptionsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetCurrencyOptionsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetCurrencyOptionsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "currencies"
        ],
        "properties": {
          "currencies": {
            "type": "array",
            "description": "Currencies",
            "items": {
              "$ref": "#/components/schemas/CurrencyItem"
            }
          }
        }
      },
      "CurrencyItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemOfShort"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 30,
                "minLength": 0
              }
            }
          }
        ]
      },
      "ApiRespBaseOfGetGameRegionOptionsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetGameRegionOptionsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetGameRegionOptionsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "gameRegions"
        ],
        "properties": {
          "gameRegions": {
            "type": "array",
            "description": "Game regions",
            "items": {
              "$ref": "#/components/schemas/ItemOfShort"
            }
          }
        }
      },
      "ApiRespBaseOfGetPageResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetPageResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetPageResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "title",
          "urlSafeTitle",
          "contentProcessed",
          "metaTags",
          "seoMetaData"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Page id",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe url",
            "minLength": 1
          },
          "contentProcessed": {
            "type": "string",
            "description": "Content processed",
            "minLength": 1
          },
          "extraCss": {
            "type": "string",
            "description": "Extra css",
            "nullable": true
          },
          "metaTags": {
            "type": "object",
            "description": "MetaTags",
            "additionalProperties": {
              "type": "string"
            }
          },
          "seoMetaData": {
            "type": "object",
            "description": "Seo meta data",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ApiRespBaseOfGetPlayerDetailResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetPlayerDetailResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetPlayerDetailResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "playerDetail": {
            "description": "Player detail",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PlayerDetail"
              }
            ]
          }
        }
      },
      "PlayerDetail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "playerId",
          "name",
          "urlSafeName",
          "fanclubId",
          "followerCount",
          "hasVods",
          "hasPerformance",
          "hasTopAchievements",
          "url",
          "primaryGameId",
          "gameName",
          "gameUrlSafeName",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "eloRating",
          "eloRanking",
          "winCount",
          "lossCount",
          "drawCount",
          "totalMatchCount",
          "winRate",
          "earningPrize",
          "streak"
        ],
        "properties": {
          "playerId": {
            "type": "integer",
            "description": "Player id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Player name",
            "minLength": 1
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "description": "Player url safe name",
            "minLength": 1
          },
          "fanclubId": {
            "type": "integer",
            "description": "Team fanclub id",
            "format": "int32"
          },
          "about": {
            "type": "string",
            "description": "About",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          },
          "facebook": {
            "type": "string",
            "description": "Social facebook",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "description": "Social twitter",
            "nullable": true
          },
          "youtube": {
            "type": "string",
            "description": "Social youtube",
            "nullable": true
          },
          "followerCount": {
            "type": "integer",
            "description": "Follower count",
            "format": "int32"
          },
          "hasFollowed": {
            "type": "boolean",
            "description": "Has followed\nnull: not login\ntrue: login and followed\nfalse: login and not follow",
            "nullable": true
          },
          "hasTeams": {
            "type": "boolean",
            "description": "Has teams"
          },
          "hasVods": {
            "type": "boolean",
            "description": "Has vods"
          },
          "hasPerformance": {
            "type": "boolean",
            "description": "Has performance"
          },
          "hasTopAchievements": {
            "type": "boolean",
            "description": "Has top achievements"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "game": {
            "description": "Game",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "primaryGameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "siteSection": {
            "description": "Site section",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "gridId": {
            "type": "string",
            "description": "Grid Player Id",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "Country id",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "nullable": true
          },
          "gameRegionId": {
            "type": "integer",
            "description": "Game region",
            "nullable": true
          },
          "gameRegionName": {
            "type": "string",
            "description": "Game region name",
            "nullable": true
          },
          "gameRegionRanking": {
            "type": "integer",
            "description": "Game region ranking",
            "format": "int32",
            "nullable": true
          },
          "eloRating": {
            "type": "integer",
            "description": "Elo rating",
            "format": "int32"
          },
          "eloRanking": {
            "type": "integer",
            "description": "World ranking",
            "format": "int32"
          },
          "winCount": {
            "type": "integer",
            "description": "Win count",
            "format": "int32"
          },
          "lossCount": {
            "type": "integer",
            "description": "Loss count",
            "format": "int32"
          },
          "drawCount": {
            "type": "integer",
            "description": "Draw count",
            "format": "int32"
          },
          "totalMatchCount": {
            "type": "integer",
            "description": "Total match count",
            "format": "int32"
          },
          "winRate": {
            "type": "number",
            "description": "Win rate",
            "format": "decimal"
          },
          "earningPrize": {
            "description": "Earning prize",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PlayerEarningPrize"
              }
            ]
          },
          "streak": {
            "type": "integer",
            "description": "Steak\nGreater than 0: loss streak\nLess than 0: win streak"
          },
          "regionRanking": {
            "description": "Game region ranking",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameRegionRanking"
              }
            ]
          },
          "playerTeamsHistoryItems": {
            "type": "array",
            "description": "Player teams history",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TeamHistoryItem"
            }
          },
          "playerTeams": {
            "type": "array",
            "description": "Player teams ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PlayerTeams"
            }
          },
          "teamPlayers": {
            "type": "array",
            "description": "Team players",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SimpleTeamPlayer"
            }
          }
        }
      },
      "SiteSectionBasicInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Site section id"
          },
          "name": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          }
        }
      },
      "PlayerEarningPrize": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "prizePoolCurrency",
          "prizePoolCurrencyName",
          "prizePoolCurrencyCode",
          "prizeAmountUsd"
        ],
        "properties": {
          "prizePoolCurrency": {
            "description": "Prize pool currency",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrency"
              }
            ]
          },
          "prizePoolCurrencyName": {
            "type": "string",
            "description": "Prize pool currency name",
            "minLength": 1
          },
          "prizePoolCurrencyCode": {
            "type": "string",
            "description": "Prize pool currency code",
            "minLength": 1
          },
          "prizeAmountUsd": {
            "type": "number",
            "description": "Prize amount - USD",
            "format": "decimal"
          }
        }
      },
      "GameRegionRanking": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "eloRanking"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Game region id"
          },
          "name": {
            "type": "string",
            "description": "Game region name",
            "minLength": 1
          },
          "eloRanking": {
            "type": "integer",
            "description": "Game region ranking",
            "format": "int32"
          }
        }
      },
      "TeamHistoryItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fromAt",
          "game",
          "gameId",
          "gameName",
          "gameUrlSafeName",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Team Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Team Name"
          },
          "tag": {
            "type": "string",
            "description": "Tag"
          },
          "urlSafeName": {
            "type": "string",
            "description": "Player Url Safe Name"
          },
          "imageUrl": {
            "type": "string",
            "description": "Image file name",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "countryId": {
            "type": "integer",
            "description": "Country id",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "nullable": true
          },
          "fromAt": {
            "type": "integer",
            "description": "From at",
            "format": "int64"
          },
          "toAt": {
            "type": "integer",
            "description": "To at",
            "format": "int64",
            "nullable": true
          },
          "game": {
            "description": "Game",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "siteSection": {
            "description": "Site section",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "position": {
            "type": "string",
            "description": "Position"
          }
        }
      },
      "PlayerTeams": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "gameId",
          "gameName"
        ],
        "properties": {
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "currentTeam": {
            "description": "Current team",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TeamHistoryItem"
              }
            ]
          },
          "previousTeams": {
            "type": "array",
            "description": "Previous teams",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TeamHistoryItem"
            }
          }
        }
      },
      "SimpleTeamPlayer": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Player Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Player Name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Player Url Safe Name",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Image file name",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetVodsByPlayerResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetVodsByPlayerResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetVodsByPlayerResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vods",
          "paging"
        ],
        "properties": {
          "vods": {
            "type": "array",
            "description": "Vods",
            "items": {
              "$ref": "#/components/schemas/VodItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetTeamGameOptionsByPlayerResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTeamGameOptionsByPlayerResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTeamGameOptionsByPlayerResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "teamGames": {
            "type": "array",
            "description": "Team game options",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GameFullInfo"
            }
          }
        }
      },
      "GameFullInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Game Id"
          },
          "name": {
            "type": "string",
            "description": "Game Name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Game UrlSafeName",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Game image url",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetPlayerTeamHistoryResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetPlayerTeamHistoryResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetPlayerTeamHistoryResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "teamHistories",
          "paging"
        ],
        "properties": {
          "currentTeam": {
            "description": "Current team",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TeamHistoryItem"
              }
            ]
          },
          "teamHistories": {
            "type": "array",
            "description": "Previous teams",
            "items": {
              "$ref": "#/components/schemas/TeamHistoryItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetPerformanceByPlayerResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetPerformanceByPlayerResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetPerformanceByPlayerResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "all",
          "last2Months",
          "last12Months",
          "lastRatingChanges",
          "last3MatchInfos"
        ],
        "properties": {
          "all": {
            "$ref": "#/components/schemas/PlayerPerformance"
          },
          "last2Months": {
            "type": "array",
            "description": "Last 2 months",
            "items": {
              "$ref": "#/components/schemas/PlayerPerformanceMonth"
            }
          },
          "last12Months": {
            "type": "array",
            "description": "Last 12 months",
            "items": {
              "$ref": "#/components/schemas/PlayerPerformanceMonth"
            }
          },
          "lastRatingChanges": {
            "type": "array",
            "description": "Last rating changes",
            "items": {
              "$ref": "#/components/schemas/TeamRatingChange"
            }
          },
          "last3MatchInfos": {
            "type": "array",
            "description": "Last 3 match infos",
            "items": {
              "$ref": "#/components/schemas/TeamMatchInfo"
            }
          }
        }
      },
      "PlayerPerformance": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "winCount",
          "lossCount",
          "drawCount",
          "totalMatchCount",
          "winRate"
        ],
        "properties": {
          "winCount": {
            "type": "integer",
            "description": "Win count",
            "format": "int32"
          },
          "lossCount": {
            "type": "integer",
            "description": "Loss count",
            "format": "int32"
          },
          "drawCount": {
            "type": "integer",
            "description": "Draw count",
            "format": "int32"
          },
          "totalMatchCount": {
            "type": "integer",
            "description": "Total match count",
            "format": "int32"
          },
          "winRate": {
            "type": "number",
            "description": "Win rate",
            "format": "decimal"
          }
        }
      },
      "PlayerPerformanceMonth": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "year",
          "month",
          "winCount",
          "lossCount",
          "drawCount",
          "totalMatchCount",
          "winRate"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Player id",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "description": "Year",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "description": "Month",
            "format": "int32"
          },
          "winCount": {
            "type": "integer",
            "description": "Win count",
            "format": "int32"
          },
          "lossCount": {
            "type": "integer",
            "description": "Loss count",
            "format": "int32"
          },
          "drawCount": {
            "type": "integer",
            "description": "Draw count",
            "format": "int32"
          },
          "totalMatchCount": {
            "type": "integer",
            "description": "Total match count",
            "format": "int32"
          },
          "winRate": {
            "type": "number",
            "description": "Win rate",
            "format": "decimal"
          },
          "lossRate": {
            "type": "number",
            "description": "Loss rate",
            "format": "decimal"
          }
        }
      },
      "TeamRatingChange": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "settleDate",
          "type",
          "beforeRating",
          "ratingChange",
          "afterRating",
          "sourceId"
        ],
        "properties": {
          "settleDate": {
            "type": "string",
            "description": "Settle date",
            "format": "date-time",
            "minLength": 1
          },
          "type": {
            "description": "Type\n1: Match\n2: Decay",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumRatingChangeType"
              }
            ]
          },
          "typeName": {
            "type": "string",
            "description": "Type name"
          },
          "beforeRating": {
            "type": "integer",
            "description": "Before rating",
            "format": "int32"
          },
          "ratingChange": {
            "type": "integer",
            "description": "Rating change",
            "format": "int32"
          },
          "afterRating": {
            "type": "integer",
            "description": "After rating",
            "format": "int32"
          },
          "sourceId": {
            "type": "integer",
            "description": "Source id",
            "format": "int32"
          },
          "matchInfo": {
            "description": "Match info",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TeamMatchInfo"
              }
            ]
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated date",
            "format": "date-time"
          },
          "displayText": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EnumRatingChangeType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Match",
          "Decay",
          "Manual"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "TeamMatchInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchId",
          "matchUrlSafeName",
          "startingAt",
          "parentId",
          "gameId",
          "gameName",
          "gameUrlSafeName",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "parentName",
          "parentUrlSafeName",
          "stageId",
          "stageName",
          "selfTeamId",
          "selfRegisteredId",
          "selfName",
          "selfScore",
          "opponentTeamId",
          "opponentRegisteredId",
          "opponentName",
          "opponentScore",
          "url"
        ],
        "properties": {
          "matchId": {
            "type": "integer",
            "description": "Match id",
            "format": "int32"
          },
          "matchUrlSafeName": {
            "type": "string",
            "description": "Match url safe name",
            "minLength": 1
          },
          "startingAt": {
            "type": "integer",
            "description": "Starting at",
            "format": "int64"
          },
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "description": "Parent game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "game": {
            "description": "Game",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "parentName": {
            "type": "string",
            "description": "Parent name",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "description": "Parent url safe name",
            "minLength": 1
          },
          "stageId": {
            "type": "integer",
            "description": "Stage id",
            "format": "int32"
          },
          "stageName": {
            "type": "string",
            "description": "Stage name",
            "minLength": 1
          },
          "selfTeamId": {
            "type": "integer",
            "description": "Self team id",
            "format": "int32"
          },
          "selfRegisteredId": {
            "type": "integer",
            "description": "Self registered id",
            "format": "int32"
          },
          "selfName": {
            "type": "string",
            "description": "Self name",
            "minLength": 1
          },
          "selfScore": {
            "type": "integer",
            "description": "Self score"
          },
          "opponentTeamId": {
            "type": "integer",
            "description": "Opponent team id",
            "format": "int32"
          },
          "opponentRegisteredId": {
            "type": "integer",
            "description": "Opponent registered id",
            "format": "int32"
          },
          "opponentName": {
            "type": "string",
            "description": "Opponent name",
            "minLength": 1
          },
          "opponentScore": {
            "type": "integer",
            "description": "Opponent score"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfGetTopAchievementsByPlayerResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTopAchievementsByPlayerResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTopAchievementsByPlayerResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "offlineTopAchievements",
          "onlineTopAchievements"
        ],
        "properties": {
          "offlineTopAchievements": {
            "type": "array",
            "description": "Offline top achievements",
            "items": {
              "$ref": "#/components/schemas/TeamAchievementTournament"
            }
          },
          "onlineTopAchievements": {
            "type": "array",
            "description": "Online top achievements",
            "items": {
              "$ref": "#/components/schemas/TeamAchievementTournament"
            }
          }
        }
      },
      "TeamAchievementTournament": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "parentName",
          "parentUrlSafeName",
          "placementFrom",
          "placementTo",
          "prizePoolCurrency",
          "prizePoolCurrencyName",
          "prizePoolCurrencyCode",
          "prizeAmount",
          "prizeAmountUsd",
          "gameId",
          "gameName",
          "gameUrlSafeName",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "url"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent tournament name",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "description": "Parent tournament url safe name",
            "minLength": 1
          },
          "placementFrom": {
            "type": "integer",
            "description": "Placement from"
          },
          "placementTo": {
            "type": "integer",
            "description": "Placement to"
          },
          "prizePoolCurrency": {
            "description": "Prize pool currency",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrency"
              }
            ]
          },
          "prizePoolCurrencyName": {
            "type": "string",
            "description": "Prize pool currency name",
            "minLength": 1
          },
          "prizePoolCurrencyCode": {
            "type": "string",
            "description": "Prize pool currency code",
            "minLength": 1
          },
          "prizeAmount": {
            "type": "number",
            "description": "Prize amount - Locale currency",
            "format": "decimal"
          },
          "prizeAmountUsd": {
            "type": "number",
            "description": "Prize amount - USD",
            "format": "decimal"
          },
          "gameId": {
            "type": "integer",
            "description": "Parent game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "game": {
            "description": "Game",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfGetGridPlayerStatsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetGridPlayerStatsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetGridPlayerStatsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchesPlayed",
          "kills",
          "killAssistsGiven",
          "killAssistsReceived",
          "teamkills",
          "teamkillAssistsGiven",
          "teamkillAssistsReceived",
          "selfkills",
          "deaths"
        ],
        "properties": {
          "matchesPlayed": {
            "type": "integer",
            "description": "Matches Played",
            "format": "int32"
          },
          "kills": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "killAssistsGiven": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "killAssistsReceived": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "teamkills": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "teamkillAssistsGiven": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "teamkillAssistsReceived": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "selfkills": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "deaths": {
            "$ref": "#/components/schemas/GridStatistics"
          }
        }
      },
      "GridStatistics": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sum",
          "min",
          "max",
          "avg"
        ],
        "properties": {
          "sum": {
            "type": "integer",
            "format": "int32"
          },
          "min": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "avg": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "EnumGridTimeWindow": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "LastWeek",
          "LastMonth",
          "Last3Month",
          "Last6Month",
          "LastYear"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "ApiRespBaseOfAddPollVoteResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AddPollVoteResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "AddPollVoteResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "question",
          "options"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Poll id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "question": {
            "type": "string",
            "description": "Poll's question",
            "maxLength": 255,
            "minLength": 0
          },
          "options": {
            "type": "array",
            "description": "Poll's options",
            "items": {
              "$ref": "#/components/schemas/QuickPollOption"
            }
          },
          "userVoteOptionId": {
            "type": "integer",
            "description": "User vote option id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "nullable": true
          }
        }
      },
      "AddPollVoteReq": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "optionId"
        ],
        "properties": {
          "optionId": {
            "type": "integer",
            "description": "Poll's option id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          }
        }
      },
      "ApiRespBaseOfGetPollStandingsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetPollStandingsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetPollStandingsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "question",
          "options"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Poll id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "question": {
            "type": "string",
            "description": "Poll question",
            "maxLength": 255,
            "minLength": 0
          },
          "options": {
            "type": "array",
            "description": "Poll's Options",
            "items": {
              "$ref": "#/components/schemas/QuickPollOption"
            }
          },
          "userVoteOptionId": {
            "type": "integer",
            "description": "User vote option id",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetTeamRankingsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTeamRankingsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTeamRankingsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "gameRankings"
        ],
        "properties": {
          "gameRankings": {
            "type": "array",
            "description": "Game rankings",
            "items": {
              "$ref": "#/components/schemas/GameRanking"
            }
          }
        }
      },
      "GameRanking": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "gameId",
          "gameName",
          "gameUrlSafeName",
          "gameRegions",
          "rankingTeams",
          "paging"
        ],
        "properties": {
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "gameRegions": {
            "type": "array",
            "description": "Game regions",
            "items": {
              "$ref": "#/components/schemas/ItemOfShort"
            }
          },
          "rankingTeams": {
            "type": "array",
            "description": "Ranking teams",
            "items": {
              "$ref": "#/components/schemas/RankingTeam"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "RankingTeam": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "tag",
          "urlSafeName",
          "url",
          "eloRating",
          "prevEloRanking",
          "rankChange",
          "rankChangeName",
          "eloRanking",
          "gameId",
          "gameName",
          "gameUrlSafeName",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "minLength": 1
          },
          "tag": {
            "type": "string",
            "description": "Tag",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Url safe name",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Image file name",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "eloRating": {
            "type": "integer",
            "description": "Elo rating",
            "format": "int32"
          },
          "prevEloRanking": {
            "type": "integer",
            "description": "Previous elo ranking",
            "format": "int32"
          },
          "rankChange": {
            "description": "Rank change\n1: Up\n2: Down\n3: Unchanged",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumRankingChange"
              }
            ]
          },
          "rankChangeName": {
            "type": "string",
            "description": "Rank change name",
            "minLength": 1
          },
          "eloRanking": {
            "type": "integer",
            "description": "Elo ranking",
            "format": "int32"
          },
          "game": {
            "description": "Game",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "siteSection": {
            "description": "Site section",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          }
        }
      },
      "EnumRankingChange": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Up",
          "Down",
          "Unchanged"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "ApiRespBaseOfGetTeamRankingsByGameResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTeamRankingsByGameResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTeamRankingsByGameResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "gameRegions",
          "rankingTeams",
          "paging"
        ],
        "properties": {
          "gameRegions": {
            "type": "array",
            "description": "Game regions",
            "items": {
              "$ref": "#/components/schemas/ItemOfShort"
            }
          },
          "rankingTeams": {
            "type": "array",
            "description": "Ranking teams",
            "items": {
              "$ref": "#/components/schemas/RankingTeam"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetTeamRankingsByGameRegionResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTeamRankingsByGameRegionResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTeamRankingsByGameRegionResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "rankingTeams",
          "paging"
        ],
        "properties": {
          "rankingTeams": {
            "type": "array",
            "description": "Ranking teams",
            "items": {
              "$ref": "#/components/schemas/RankingTeam"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetSiteSettingsV6Resp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetSiteSettingsV6Resp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetSiteSettingsV6Resp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "frontendSetting",
          "frontends",
          "menus",
          "mobileMenus",
          "siteSectionMap"
        ],
        "properties": {
          "frontendSetting": {
            "description": "Frontend Setting",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FrontendSetting"
              }
            ]
          },
          "frontends": {
            "type": "array",
            "description": "Other Frontends",
            "items": {
              "$ref": "#/components/schemas/FrontendBasicInfo"
            }
          },
          "menus": {
            "type": "array",
            "description": "Menus",
            "items": {
              "$ref": "#/components/schemas/SiteMenuV6"
            }
          },
          "mobileMenus": {
            "type": "array",
            "description": "Mobile menu",
            "items": {
              "$ref": "#/components/schemas/SiteMenuV6"
            }
          },
          "siteSectionMap": {
            "type": "object",
            "description": "Site Section Map",
            "additionalProperties": {
              "$ref": "#/components/schemas/SiteSectionInfo"
            }
          }
        }
      },
      "FrontendSetting": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "url",
          "aboutPageId",
          "jobsPageId",
          "privacyPageId",
          "supportPageId",
          "termsPageId",
          "locale",
          "siteCode",
          "clientConfiguration",
          "gameSiteSectionIds"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Frontend Name",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Frontend url",
            "minLength": 1
          },
          "aboutPageId": {
            "type": "integer",
            "description": "About PageId",
            "format": "int32"
          },
          "jobsPageId": {
            "type": "integer",
            "description": "Jobs PageId",
            "format": "int32"
          },
          "privacyPageId": {
            "type": "integer",
            "description": "Privacy PageId",
            "format": "int32"
          },
          "supportPageId": {
            "type": "integer",
            "description": "Support PageId",
            "format": "int32"
          },
          "termsPageId": {
            "type": "integer",
            "description": "Terms PageId",
            "format": "int32"
          },
          "locale": {
            "description": "Frontend Locale",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FrontendLocale"
              }
            ]
          },
          "siteCode": {
            "type": "string",
            "description": "Site code",
            "minLength": 1
          },
          "clientConfiguration": {
            "description": "Client Configuration"
          },
          "gameSiteSectionIds": {
            "type": "array",
            "description": "Game site section ids",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "FrontendLocale": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "bcp47Identifier"
        ],
        "properties": {
          "bcp47Identifier": {
            "type": "string",
            "description": "Bcp47 identifier",
            "minLength": 1
          }
        }
      },
      "FrontendBasicInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Frontend Id"
          },
          "name": {
            "type": "string",
            "description": "Frontend Name",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Frontend Url",
            "minLength": 1
          }
        }
      },
      "SiteMenuV6": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "position",
          "parentId",
          "level",
          "subMenus",
          "isUseCustomUrl",
          "menuType"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Menu Id"
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site Section Id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Menu name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "description": "Sort"
          },
          "parentId": {
            "type": "integer",
            "description": "Parent id"
          },
          "level": {
            "type": "integer"
          },
          "subMenus": {
            "type": "array",
            "description": "Sub Menus",
            "items": {
              "$ref": "#/components/schemas/SiteMenuV6"
            }
          },
          "isUseCustomUrl": {
            "type": "boolean"
          },
          "customUrl": {
            "type": "string",
            "nullable": true
          },
          "menuType": {
            "description": "0: None 1: All-SiteSection",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumMenuType"
              }
            ]
          }
        }
      },
      "EnumMenuType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "All",
          "Articles",
          "Tournaments",
          "Matches",
          "Rankings"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "SiteSectionInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Site section id"
          },
          "name": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "headerImageUrl": {
            "type": "string",
            "description": "Header image url",
            "nullable": true
          },
          "backgroundImageUrl": {
            "type": "string",
            "description": "Background image url",
            "nullable": true
          },
          "iconImageUrl": {
            "type": "string",
            "description": "Icon image url",
            "nullable": true
          },
          "logoImageUrl": {
            "type": "string",
            "description": "Logo image url",
            "nullable": true
          },
          "game": {
            "description": "Game Info",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetEsportsUrlSafeNamesResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetEsportsUrlSafeNamesResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetEsportsUrlSafeNamesResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "urlSafeNames"
        ],
        "properties": {
          "urlSafeNames": {
            "type": "array",
            "description": "Url safe name",
            "items": {
              "$ref": "#/components/schemas/SafeUrl"
            }
          }
        }
      },
      "SafeUrl": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "urlSafeName"
        ],
        "properties": {
          "urlSafeName": {
            "type": "string",
            "description": "Url safe name",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfSiteSectionInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SiteSectionInfo"
                  }
                ]
              }
            }
          }
        ]
      },
      "ApiRespBaseOfGetSiteAdSettingsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetSiteAdSettingsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetSiteAdSettingsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "adSettings"
        ],
        "properties": {
          "adSettings": {
            "description": "Ad settings",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdSettings"
              }
            ]
          }
        }
      },
      "AdSettings": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "googleAdSense",
          "googleAdManager",
          "googleTagManager"
        ],
        "properties": {
          "googleAdSense": {
            "description": "Google ad sense setting",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GoogleAdSenseSetting"
              }
            ]
          },
          "googleAdManager": {
            "$ref": "#/components/schemas/GoogleAdManagerSetting"
          },
          "googleTagManager": {
            "$ref": "#/components/schemas/GoogleTagManagerSetting"
          }
        }
      },
      "GoogleAdSenseSetting": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "enabled",
          "publisherId"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enable"
          },
          "publisherId": {
            "type": "string",
            "description": "Publisher id",
            "minLength": 1
          }
        }
      },
      "GoogleAdManagerSetting": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "enabled",
          "networkCode"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enable"
          },
          "networkCode": {
            "type": "integer",
            "description": "Network code",
            "format": "int64"
          }
        }
      },
      "GoogleTagManagerSetting": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "enabled",
          "id",
          "queryParams"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enable"
          },
          "id": {
            "type": "string",
            "description": "Id",
            "minLength": 1
          },
          "queryParams": {
            "description": "Query params",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GoogleTagManagerQueryParams"
              }
            ]
          }
        }
      },
      "GoogleTagManagerQueryParams": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "gtm_auth",
          "gtm_preview",
          "gtm_cookies_win"
        ],
        "properties": {
          "gtm_auth": {
            "type": "string",
            "minLength": 1
          },
          "gtm_preview": {
            "type": "string",
            "minLength": 1
          },
          "gtm_cookies_win": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "EnumSitemapType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "root",
          "indexPages",
          "articles",
          "teams",
          "players",
          "broadcastTalents",
          "tournaments",
          "matches",
          "specialPages"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ]
      },
      "ApiRespBaseOfGetSiteSectionAllResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetSiteSectionAllResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetSiteSectionAllResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stream": {
            "description": "Stream",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionAllStream"
              }
            ]
          },
          "vod": {
            "description": "Vod",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionAllVod"
              }
            ]
          }
        }
      },
      "SiteSectionAllVod": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "title",
          "urlSafeTitle",
          "host",
          "hostName",
          "hostVideoId",
          "channelName",
          "viewCount",
          "hostViewCount",
          "startTime",
          "matchId",
          "matchUrlSafeName",
          "matchUrl",
          "opponentCount",
          "childType",
          "parentId",
          "parentName",
          "parentUrlSafeName",
          "parentGameId",
          "parentGameName",
          "parentGameUrlSafeName",
          "parentUrl",
          "match",
          "matchOpponents"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Stream media id",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe title",
            "minLength": 1
          },
          "host": {
            "description": "Host",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumVideoHost"
              }
            ]
          },
          "hostName": {
            "type": "string",
            "description": "Host name",
            "minLength": 1
          },
          "hostVideoId": {
            "type": "string",
            "description": "Host video id",
            "minLength": 1
          },
          "channelName": {
            "type": "string",
            "description": "Channel name",
            "minLength": 1
          },
          "viewCount": {
            "type": "integer",
            "description": "View count",
            "format": "int32"
          },
          "hostViewCount": {
            "type": "integer",
            "description": "Host view count",
            "format": "int32"
          },
          "screenCapUrl": {
            "type": "string",
            "description": "Screen cap url",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "description": "Start time",
            "format": "int32"
          },
          "matchId": {
            "type": "integer",
            "description": "Match id",
            "format": "int32"
          },
          "matchUrlSafeName": {
            "type": "string",
            "description": "Match url safe name",
            "minLength": 1
          },
          "matchUrl": {
            "type": "string",
            "description": "Match url",
            "minLength": 1
          },
          "opponentCount": {
            "type": "integer",
            "description": "Opponent count"
          },
          "childType": {
            "description": "Child type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumChildTournament"
              }
            ]
          },
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent name",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "description": "Parent url safe name",
            "minLength": 1
          },
          "parentGameId": {
            "type": "integer",
            "description": "Game id"
          },
          "parentGameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "parentGameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "parentUrl": {
            "type": "string",
            "description": "Parent tournament url",
            "minLength": 1
          },
          "match": {
            "description": "Match",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaMatch"
              }
            ]
          },
          "matchOpponents": {
            "type": "array",
            "description": "Match opponent",
            "items": {
              "$ref": "#/components/schemas/MediaMatchOpponent"
            }
          }
        }
      },
      "ApiRespBaseOfGetHomepageResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetHomepageResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetHomepageResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matches",
          "news",
          "tournaments",
          "editorial"
        ],
        "properties": {
          "stream": {
            "description": "Stream",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionAllStream"
              }
            ]
          },
          "vod": {
            "description": "Vod",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionAllVod"
              }
            ]
          },
          "matches": {
            "type": "array",
            "description": "Matches",
            "items": {
              "$ref": "#/components/schemas/GetMatchesUpcoming"
            }
          },
          "news": {
            "type": "array",
            "description": "News",
            "items": {
              "$ref": "#/components/schemas/ArticleListItem"
            }
          },
          "tournaments": {
            "type": "array",
            "description": "Parent tournaments",
            "items": {
              "$ref": "#/components/schemas/ParentListItem"
            }
          },
          "editorial": {
            "type": "array",
            "description": "Editorial",
            "items": {
              "$ref": "#/components/schemas/ArticleListItem"
            }
          }
        }
      },
      "EnumHomepagePlatform": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Desktop",
          "Mobile"
        ],
        "enum": [
          1,
          2
        ]
      },
      "ApiRespBaseOfGetSponsorResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetSponsorResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetSponsorResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sponsorDetail"
        ],
        "properties": {
          "sponsorDetail": {
            "description": "Sponsor detail",
            "oneOf": [
              {
                "$ref": "#/components/schemas/SponsorDetail"
              }
            ]
          }
        }
      },
      "SponsorDetail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sponsorId",
          "name",
          "url",
          "description",
          "hasParentTournaments"
        ],
        "properties": {
          "sponsorId": {
            "type": "integer",
            "description": "Sponsor id"
          },
          "name": {
            "type": "string",
            "description": "Sponsor name",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Sponsor image url",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Sponsor url link",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "Description",
            "minLength": 1
          },
          "hasParentTournaments": {
            "type": "boolean",
            "description": "Has parent tournaments"
          }
        }
      },
      "ApiRespBaseOfGetStreamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetStreamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetStreamResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "streamDetail"
        ],
        "properties": {
          "streamDetail": {
            "description": "Stream detail",
            "oneOf": [
              {
                "$ref": "#/components/schemas/StreamDetail"
              }
            ]
          }
        }
      },
      "StreamDetail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "platform",
          "platformName",
          "streamId",
          "isLive",
          "title",
          "urlSafeTitle",
          "languageId",
          "language",
          "languageCode",
          "viewerCount",
          "viewCount",
          "gameId",
          "gameName",
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Media stream id",
            "format": "int32"
          },
          "platform": {
            "description": "Platform",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPlatform"
              }
            ]
          },
          "platformName": {
            "type": "string",
            "description": "Platform name",
            "minLength": 1
          },
          "streamId": {
            "type": "string",
            "description": "Stream id",
            "minLength": 1
          },
          "isLive": {
            "type": "boolean",
            "description": "Is live"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe name",
            "minLength": 1
          },
          "screenCapUrl": {
            "type": "string",
            "description": "Screen cap url",
            "nullable": true
          },
          "streamUrl": {
            "type": "string",
            "description": "Stream url",
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "description": "Language id"
          },
          "language": {
            "type": "string",
            "description": "Language",
            "minLength": 1
          },
          "languageCode": {
            "type": "string",
            "description": "Language code",
            "minLength": 1
          },
          "viewerCount": {
            "type": "integer",
            "description": "Viewer count",
            "format": "int32"
          },
          "viewCount": {
            "type": "integer",
            "description": "View count",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfGetTeamDetailResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTeamDetailResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTeamDetailResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "teamDetail"
        ],
        "properties": {
          "teamDetail": {
            "description": "Team detail",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TeamDetail"
              }
            ]
          }
        }
      },
      "TeamDetail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName",
          "tag",
          "fanclubId",
          "followerCount",
          "eloRating",
          "eloRanking",
          "streak",
          "earningPrize",
          "winCount",
          "lossCount",
          "drawCount",
          "teamPerformance",
          "hasVods",
          "hasNews",
          "hasPerformance",
          "hasTopAchievements",
          "url",
          "gameId",
          "gameName",
          "gameUrlSafeName",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "players"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Team url safe name",
            "minLength": 1
          },
          "tag": {
            "type": "string",
            "description": "Team tag",
            "minLength": 1
          },
          "fanclubId": {
            "type": "integer",
            "description": "Team fanclub id",
            "format": "int32"
          },
          "about": {
            "type": "string",
            "description": "About",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          },
          "facebook": {
            "type": "string",
            "description": "Social facebook",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "description": "Social twitter",
            "nullable": true
          },
          "youtube": {
            "type": "string",
            "description": "Social youtube",
            "nullable": true
          },
          "followerCount": {
            "type": "integer",
            "description": "Follower count",
            "format": "int32"
          },
          "eloRating": {
            "type": "integer",
            "description": "Elo rating",
            "format": "int32"
          },
          "eloRanking": {
            "type": "integer",
            "description": "World ranking",
            "format": "int32"
          },
          "streak": {
            "type": "integer",
            "description": "Steak\nGreater than 0: loss streak\nLess than 0: win streak"
          },
          "regionRanking": {
            "description": "Game region ranking",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameRegionRanking"
              }
            ]
          },
          "earningPrize": {
            "description": "Earning prize",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TeamEarningPrize"
              }
            ]
          },
          "gameRegionId": {
            "type": "integer",
            "description": "Game region",
            "nullable": true
          },
          "gameRegionName": {
            "type": "string",
            "description": "Game region name",
            "nullable": true
          },
          "gameRegionRanking": {
            "type": "integer",
            "description": "Game region ranking",
            "format": "int32",
            "nullable": true
          },
          "winCount": {
            "type": "integer",
            "description": "Win count",
            "format": "int32"
          },
          "lossCount": {
            "type": "integer",
            "description": "Loss count",
            "format": "int32"
          },
          "drawCount": {
            "type": "integer",
            "description": "Draw count",
            "format": "int32"
          },
          "teamPerformance": {
            "description": "Team performance",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TeamPerformance"
              }
            ]
          },
          "hasFollowed": {
            "type": "boolean",
            "description": "Has followed\nnull: not login\ntrue: login and followed\nfalse: login and not follow",
            "nullable": true
          },
          "hasVods": {
            "type": "boolean",
            "description": "Has vods"
          },
          "hasNews": {
            "type": "boolean",
            "description": "Has news"
          },
          "hasPerformance": {
            "type": "boolean",
            "description": "Has performance"
          },
          "hasTopAchievements": {
            "type": "boolean",
            "description": "Has top achievements"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "game": {
            "description": "Game",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "minLength": 1
          },
          "siteSection": {
            "description": "Site section",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "gridId": {
            "type": "string",
            "description": "Team Grid Id",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "Country id",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "nullable": true
          },
          "players": {
            "type": "array",
            "description": "Players",
            "items": {
              "$ref": "#/components/schemas/TeamPlayerListItem"
            }
          }
        }
      },
      "TeamEarningPrize": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "prizePoolCurrency",
          "prizePoolCurrencyName",
          "prizePoolCurrencyCode",
          "prizeAmountUsd"
        ],
        "properties": {
          "prizePoolCurrency": {
            "description": "Prize pool currency",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrency"
              }
            ]
          },
          "prizePoolCurrencyName": {
            "type": "string",
            "description": "Prize pool currency name",
            "minLength": 1
          },
          "prizePoolCurrencyCode": {
            "type": "string",
            "description": "Prize pool currency code",
            "minLength": 1
          },
          "prizeAmountUsd": {
            "type": "number",
            "description": "Prize amount - USD",
            "format": "decimal"
          }
        }
      },
      "TeamPerformance": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "winCount",
          "lossCount",
          "drawCount",
          "totalMatchCount",
          "winRate"
        ],
        "properties": {
          "winCount": {
            "type": "integer",
            "description": "Win count",
            "format": "int32"
          },
          "lossCount": {
            "type": "integer",
            "description": "Loss count",
            "format": "int32"
          },
          "drawCount": {
            "type": "integer",
            "description": "Draw count",
            "format": "int32"
          },
          "totalMatchCount": {
            "type": "integer",
            "description": "Total match count",
            "format": "int32"
          },
          "winRate": {
            "type": "number",
            "description": "Win rate",
            "format": "decimal"
          }
        }
      },
      "TeamPlayerListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName",
          "url",
          "fromAt"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Player id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Player name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Url safe name",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "fromAt": {
            "type": "integer",
            "description": "Join team at",
            "format": "int64"
          },
          "toAt": {
            "type": "integer",
            "description": "Left team at",
            "format": "int64",
            "nullable": true
          },
          "game": {
            "description": "Game",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "primaryGameId": {
            "type": "integer",
            "description": "Primary game id",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "nullable": true
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "nullable": true
          },
          "siteSection": {
            "description": "Site section",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteSectionBasicInfo"
              }
            ]
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id",
            "nullable": true
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "nullable": true
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "countryId": {
            "type": "integer",
            "description": "Country id",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetVodsByTeamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetVodsByTeamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetVodsByTeamResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vods",
          "paging"
        ],
        "properties": {
          "vods": {
            "type": "array",
            "description": "Vods",
            "items": {
              "$ref": "#/components/schemas/VodItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetArticlesByTeamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetArticlesByTeamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetArticlesByTeamResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "articles",
          "paging"
        ],
        "properties": {
          "articles": {
            "type": "array",
            "description": "Articles",
            "items": {
              "$ref": "#/components/schemas/ArticleListItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetPlayersByTeamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetPlayersByTeamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetPlayersByTeamResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "livePlayers",
          "players",
          "paging"
        ],
        "properties": {
          "livePlayers": {
            "type": "array",
            "description": "Live players",
            "items": {
              "$ref": "#/components/schemas/TeamPlayerListItem"
            }
          },
          "players": {
            "type": "array",
            "description": "Players",
            "items": {
              "$ref": "#/components/schemas/TeamPlayerListItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetPerformanceByTeamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetPerformanceByTeamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetPerformanceByTeamResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "all",
          "last2Months",
          "last12Months",
          "lastRatingChanges",
          "last3MatchInfos"
        ],
        "properties": {
          "all": {
            "$ref": "#/components/schemas/TeamPerformance"
          },
          "last2Months": {
            "type": "array",
            "description": "Last 2 months",
            "items": {
              "$ref": "#/components/schemas/TeamPerformanceMonth"
            }
          },
          "last12Months": {
            "type": "array",
            "description": "Last 12 months",
            "items": {
              "$ref": "#/components/schemas/TeamPerformanceMonth"
            }
          },
          "lastRatingChanges": {
            "type": "array",
            "description": "Last rating changes",
            "items": {
              "$ref": "#/components/schemas/TeamRatingChange"
            }
          },
          "last3MatchInfos": {
            "type": "array",
            "description": "Last 3 match infos",
            "items": {
              "$ref": "#/components/schemas/SimpleTeamMatchInfo"
            }
          }
        }
      },
      "TeamPerformanceMonth": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "year",
          "month",
          "settleTime",
          "winCount",
          "lossCount",
          "drawCount",
          "totalMatchCount",
          "winRate"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "description": "Year",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "description": "Month",
            "format": "int32"
          },
          "settleTime": {
            "type": "integer",
            "description": "Settle time",
            "format": "int64"
          },
          "winCount": {
            "type": "integer",
            "description": "Win count",
            "format": "int32"
          },
          "lossCount": {
            "type": "integer",
            "description": "Loss count",
            "format": "int32"
          },
          "drawCount": {
            "type": "integer",
            "description": "Draw count",
            "format": "int32"
          },
          "totalMatchCount": {
            "type": "integer",
            "description": "Total match count",
            "format": "int32"
          },
          "winRate": {
            "type": "number",
            "description": "Win rate",
            "format": "decimal"
          },
          "lossRate": {
            "type": "number",
            "description": "Loss rate",
            "format": "decimal"
          }
        }
      },
      "SimpleTeamMatchInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TeamMatchInfo"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "gameId",
              "gameName",
              "gameUrlSafeName",
              "siteSectionId",
              "siteSectionName",
              "siteSectionUrlSafeName"
            ],
            "properties": {
              "gameId": {
                "type": "integer",
                "description": "Parent game id"
              },
              "gameName": {
                "type": "string",
                "description": "Game name",
                "minLength": 1
              },
              "gameUrlSafeName": {
                "type": "string",
                "description": "Game url safe name",
                "minLength": 1
              },
              "siteSectionId": {
                "type": "integer",
                "description": "Site section id"
              },
              "siteSectionName": {
                "type": "string",
                "description": "Site section name",
                "minLength": 1
              },
              "siteSectionUrlSafeName": {
                "type": "string",
                "description": "Site section url safe name",
                "minLength": 1
              }
            }
          }
        ]
      },
      "ApiRespBaseOfGetTopAchievementsByTeamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetTopAchievementsByTeamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetTopAchievementsByTeamResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "offlineTopAchievements",
          "onlineTopAchievements"
        ],
        "properties": {
          "offlineTopAchievements": {
            "type": "array",
            "description": "Offline top achievements",
            "items": {
              "$ref": "#/components/schemas/TeamAchievementTournament"
            }
          },
          "onlineTopAchievements": {
            "type": "array",
            "description": "Online top achievements",
            "items": {
              "$ref": "#/components/schemas/TeamAchievementTournament"
            }
          }
        }
      },
      "ApiRespBaseOfGetHistoryByTeamResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetHistoryByTeamResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetHistoryByTeamResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lastRatingChanges",
          "last3MatchInfos"
        ],
        "properties": {
          "team": {
            "description": "Team info",
            "oneOf": [
              {
                "$ref": "#/components/schemas/SimpleTeam"
              }
            ]
          },
          "lastRatingChanges": {
            "type": "array",
            "description": "Last rating changes",
            "items": {
              "$ref": "#/components/schemas/TeamRatingChange"
            }
          },
          "last3MatchInfos": {
            "type": "array",
            "description": "Last 3 match infos",
            "items": {
              "$ref": "#/components/schemas/TeamMatchInfo"
            }
          }
        }
      },
      "SimpleTeam": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "urlSafeName",
          "tag",
          "eloRanking",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Team url safe name",
            "minLength": 1
          },
          "tag": {
            "type": "string",
            "description": "Team tag",
            "minLength": 1
          },
          "eloRanking": {
            "type": "integer",
            "description": "World ranking",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "game": {
            "description": "Game",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameBasicInfo"
              }
            ]
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfGetGridTeamStatsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetGridTeamStatsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetGridTeamStatsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "matchesPlayed",
          "kills",
          "killAssistsGiven",
          "killAssistsReceived",
          "teamkills",
          "teamkillAssistsGiven",
          "teamkillAssistsReceived",
          "selfkills",
          "deaths",
          "structuresDestroyed",
          "structuresCaptured",
          "score"
        ],
        "properties": {
          "matchesPlayed": {
            "type": "integer",
            "description": "Matches Played",
            "format": "int32"
          },
          "kills": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "killAssistsGiven": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "killAssistsReceived": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "teamkills": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "teamkillAssistsGiven": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "teamkillAssistsReceived": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "selfkills": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "deaths": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "structuresDestroyed": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "structuresCaptured": {
            "$ref": "#/components/schemas/GridStatistics"
          },
          "score": {
            "$ref": "#/components/schemas/GridStatistics"
          }
        }
      },
      "EnumTournamentState": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "All",
          "Ongoing",
          "Upcoming",
          "Past",
          "Featured"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "ApiRespBaseOfGetParentDetailResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetParentDetailResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetParentDetailResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentDetail",
          "hasNews",
          "hasBroadcastTalents",
          "hasVenue",
          "hasParticipants",
          "hasVods",
          "hasStreams",
          "canEditTournaments",
          "returnUrl"
        ],
        "properties": {
          "parentDetail": {
            "description": "Parent tournament detail",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ParentDetail"
              }
            ]
          },
          "hasNews": {
            "type": "boolean",
            "description": "Has news"
          },
          "hasBroadcastTalents": {
            "type": "boolean",
            "description": "Has broadcast talents"
          },
          "hasVenue": {
            "type": "boolean",
            "description": "Has venus"
          },
          "hasParticipants": {
            "type": "boolean",
            "description": "Has participants"
          },
          "hasVods": {
            "type": "boolean",
            "description": "Vods"
          },
          "hasStreams": {
            "type": "boolean",
            "description": "Streams"
          },
          "canEditTournaments": {
            "type": "boolean",
            "description": "Can edit tournament"
          },
          "returnUrl": {
            "type": "string",
            "description": "Return url",
            "minLength": 1
          }
        }
      },
      "ParentDetail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "parentName",
          "parentUrlSafeName",
          "gameId",
          "gameName",
          "siteSectionId",
          "siteSectionName",
          "siteSectionUrlSafeName",
          "teamSize",
          "isLan",
          "stages",
          "children"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent name",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "description": "Parent url safe name",
            "minLength": 1
          },
          "gameId": {
            "type": "integer",
            "description": "Parent game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id"
          },
          "siteSectionName": {
            "type": "string",
            "description": "Site section name",
            "minLength": 1
          },
          "siteSectionUrlSafeName": {
            "type": "string",
            "description": "Site section url safe name",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Parent image url",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "teamSize": {
            "type": "integer",
            "description": "Team size"
          },
          "prizePoolCurrency": {
            "description": "Prize pool currency",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrency"
              }
            ]
          },
          "prizePoolCurrencyName": {
            "type": "string",
            "description": "Prize pool currency name",
            "nullable": true
          },
          "prizePoolCurrencyCode": {
            "type": "string",
            "description": "Prize pool currency code",
            "nullable": true
          },
          "prizePool": {
            "type": "number",
            "description": "Prize pool (Locale currency)",
            "format": "decimal",
            "nullable": true
          },
          "prizePoolUsd": {
            "type": "number",
            "description": "Prize pool (USD)",
            "format": "decimal",
            "nullable": true
          },
          "isLan": {
            "type": "boolean",
            "description": "Is lan"
          },
          "venueId": {
            "type": "integer",
            "description": "Venue id",
            "format": "int32",
            "nullable": true
          },
          "venueName": {
            "type": "string",
            "description": "Venue name",
            "nullable": true
          },
          "venueCountryId": {
            "type": "integer",
            "description": "Venue country id",
            "format": "int32",
            "nullable": true
          },
          "venueCountryName": {
            "type": "string",
            "description": "Venue country name",
            "nullable": true
          },
          "venueCountryCode": {
            "type": "string",
            "description": "Venue country code",
            "nullable": true
          },
          "status": {
            "description": "Status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumTournamentStatus"
              }
            ]
          },
          "statusName": {
            "type": "string",
            "description": "Status name"
          },
          "startingAt": {
            "type": "integer",
            "description": "Starting at",
            "format": "int64",
            "nullable": true
          },
          "sponsors": {
            "type": "array",
            "description": "Parent tournament sponsors",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ItemOfShort"
            }
          },
          "stages": {
            "type": "array",
            "description": "Parent tournament stages",
            "items": {
              "$ref": "#/components/schemas/StageItem"
            }
          },
          "children": {
            "type": "array",
            "description": "Simple child tournaments for more participants",
            "items": {
              "$ref": "#/components/schemas/SimpleChildListItem"
            }
          }
        }
      },
      "StageItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderItemOfInteger"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "status": {
                "description": "Stage status\n0: Not yet start\n1: Progressing\n2: Completed",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EnumStageStatus"
                  }
                ]
              },
              "statusName": {
                "type": "string",
                "description": "Stage status name"
              }
            }
          }
        ]
      },
      "EnumStageStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "NotYetStart",
          "Progressing",
          "Completed"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "OrderItemOfInteger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemOfInteger"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "order",
              "name"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "order": {
                "type": "integer"
              },
              "name": {
                "type": "string",
                "maxLength": 80,
                "minLength": 1
              }
            }
          }
        ]
      },
      "SimpleChildListItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "stageId": {
            "type": "integer",
            "description": "Stage id",
            "format": "int32"
          },
          "stageName": {
            "type": "string",
            "description": "Stage name"
          },
          "childId": {
            "type": "integer",
            "description": "Child id",
            "format": "int32"
          },
          "childName": {
            "type": "string",
            "description": "Child name"
          }
        }
      },
      "ApiRespBaseOfGetChildrenByStageResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetChildrenByStageResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetChildrenByStageResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "childTournaments",
          "childPrizePools"
        ],
        "properties": {
          "childTournaments": {
            "type": "array",
            "description": "Child tournaments",
            "items": {
              "$ref": "#/components/schemas/ChildListItem"
            }
          },
          "childPrizePools": {
            "type": "array",
            "description": "Child prize pool",
            "items": {
              "$ref": "#/components/schemas/ChildPrizePoolListItem"
            }
          }
        }
      },
      "ChildListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "stageId",
          "stageName",
          "childId",
          "childName",
          "type",
          "typeName",
          "resultTypeName",
          "status",
          "statusName",
          "participants"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "stageId": {
            "type": "integer",
            "description": "Stage id",
            "format": "int32"
          },
          "stageName": {
            "type": "string",
            "description": "Stage name",
            "minLength": 1
          },
          "childId": {
            "type": "integer",
            "description": "Child id",
            "format": "int32"
          },
          "childName": {
            "type": "string",
            "description": "Child name",
            "minLength": 1
          },
          "type": {
            "description": "Child type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumChildTournament"
              }
            ]
          },
          "typeName": {
            "type": "string",
            "description": "Child type name",
            "minLength": 1
          },
          "resultTypeName": {
            "type": "string",
            "description": "Child result type name",
            "minLength": 1
          },
          "status": {
            "description": "Child status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumTournamentStatus"
              }
            ]
          },
          "statusName": {
            "type": "string",
            "description": "Status name",
            "minLength": 1
          },
          "startingAt": {
            "type": "integer",
            "description": "Starting at",
            "format": "int64",
            "nullable": true
          },
          "participants": {
            "type": "array",
            "description": "Participants",
            "items": {
              "$ref": "#/components/schemas/ParticipantListItem"
            }
          }
        }
      },
      "ParticipantListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "opponentType",
          "opponentTypeName",
          "id",
          "name",
          "tag",
          "urlSafeName",
          "url"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "childId": {
            "type": "integer",
            "description": "Child id (Exist if by child to query)",
            "format": "int32",
            "nullable": true
          },
          "opponentType": {
            "description": "Opponent type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumOpponentType"
              }
            ]
          },
          "opponentTypeName": {
            "type": "string",
            "description": "Opponent type name",
            "minLength": 1
          },
          "id": {
            "type": "integer",
            "description": "Player or team id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Player or team name",
            "minLength": 1
          },
          "tag": {
            "type": "string",
            "description": "Player or team tag",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Player or team url safe name",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Logo image url",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "ranking": {
            "type": "integer",
            "description": "Ranking for team",
            "format": "int32",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "countryId": {
            "type": "integer",
            "description": "Country id",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "nullable": true
          }
        }
      },
      "ChildPrizePoolListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "stageId",
          "stageName",
          "childId",
          "childName",
          "placements"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "stageId": {
            "type": "integer",
            "description": "Stage id",
            "format": "int32"
          },
          "stageName": {
            "type": "string",
            "description": "Stage name",
            "minLength": 1
          },
          "childId": {
            "type": "integer",
            "description": "Child id",
            "format": "int32"
          },
          "childName": {
            "type": "string",
            "description": "Child name",
            "minLength": 1
          },
          "placements": {
            "type": "array",
            "description": "Placements",
            "items": {
              "$ref": "#/components/schemas/ChildPlacementListItem"
            }
          }
        }
      },
      "ChildPlacementListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "placementId",
          "parentId",
          "stageId",
          "childId",
          "childName",
          "prizePoolCurrency",
          "prizePoolCurrencyName",
          "prizePoolCurrencyCode",
          "placementFrom",
          "placementTo",
          "prizeAmount",
          "winners"
        ],
        "properties": {
          "placementId": {
            "type": "integer",
            "description": "Placement id",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "stageId": {
            "type": "integer",
            "description": "Stage id",
            "format": "int32"
          },
          "childId": {
            "type": "integer",
            "description": "Child id",
            "format": "int32"
          },
          "childName": {
            "type": "string",
            "description": "Child name",
            "minLength": 1
          },
          "prizePoolCurrency": {
            "description": "Prize pool currency",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrency"
              }
            ]
          },
          "prizePoolCurrencyName": {
            "type": "string",
            "description": "Prize pool currency name",
            "minLength": 1
          },
          "prizePoolCurrencyCode": {
            "type": "string",
            "description": "Prize pool currency code",
            "minLength": 1
          },
          "placementFrom": {
            "type": "integer",
            "description": "Placement from"
          },
          "placementTo": {
            "type": "integer",
            "description": "Placement to"
          },
          "prizeAmount": {
            "type": "number",
            "description": "Prize amount",
            "format": "decimal"
          },
          "winners": {
            "type": "array",
            "description": "Winners",
            "items": {
              "$ref": "#/components/schemas/DistributionWinner"
            }
          }
        }
      },
      "DistributionWinner": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "opponentType",
          "opponentTypeName",
          "id",
          "name",
          "tag",
          "urlSafeName",
          "url"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "childId": {
            "type": "integer",
            "description": "Child id (Exist if by child to query)",
            "format": "int32",
            "nullable": true
          },
          "opponentType": {
            "description": "Opponent type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumOpponentType"
              }
            ]
          },
          "opponentTypeName": {
            "type": "string",
            "description": "Opponent type name",
            "minLength": 1
          },
          "id": {
            "type": "integer",
            "description": "Player or team id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Player or team name",
            "minLength": 1
          },
          "tag": {
            "type": "string",
            "description": "Player or team tag",
            "minLength": 1
          },
          "urlSafeName": {
            "type": "string",
            "description": "Player or team url safe name",
            "minLength": 1
          },
          "imageUrl": {
            "type": "string",
            "description": "Logo image url",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          },
          "ranking": {
            "type": "integer",
            "description": "Ranking for team",
            "format": "int32",
            "nullable": true
          },
          "country": {
            "description": "Country",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "countryId": {
            "type": "integer",
            "description": "Country id",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetParentArticlesResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetParentArticlesResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetParentArticlesResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "articles"
        ],
        "properties": {
          "articles": {
            "type": "array",
            "description": "Articles",
            "items": {
              "$ref": "#/components/schemas/ArticleListItem"
            }
          }
        }
      },
      "ApiRespBaseOfGetParentBroadcastTalentsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetParentBroadcastTalentsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetParentBroadcastTalentsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "broadcastTalents"
        ],
        "properties": {
          "broadcastTalents": {
            "type": "array",
            "description": "Broadcast talents",
            "items": {
              "$ref": "#/components/schemas/BroadcastTalentListItem"
            }
          }
        }
      },
      "ApiRespBaseOfGetParentVenueResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetParentVenueResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetParentVenueResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "venue"
        ],
        "properties": {
          "venue": {
            "description": "Parent tournament venue",
            "oneOf": [
              {
                "$ref": "#/components/schemas/VenueDetail"
              }
            ]
          }
        }
      },
      "VenueDetail": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentId",
          "venueId",
          "name",
          "city",
          "countryId",
          "countryName"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "venueId": {
            "type": "integer",
            "description": "Venue id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Venue name",
            "minLength": 1
          },
          "city": {
            "type": "string",
            "description": "Venue city",
            "minLength": 1
          },
          "countryId": {
            "type": "integer",
            "description": "Venue country id"
          },
          "countryName": {
            "type": "string",
            "description": "Country name",
            "minLength": 1
          },
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          }
        }
      },
      "ApiRespBaseOfGetChildParticipantsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetChildParticipantsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetChildParticipantsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "participants"
        ],
        "properties": {
          "participants": {
            "type": "array",
            "description": "Participants",
            "items": {
              "$ref": "#/components/schemas/ParticipantListItem"
            }
          }
        }
      },
      "ApiRespBaseOfGetParentVodsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetParentVodsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetParentVodsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vods",
          "paging"
        ],
        "properties": {
          "vods": {
            "type": "array",
            "description": "Vods",
            "items": {
              "$ref": "#/components/schemas/VodItem"
            }
          },
          "paging": {
            "description": "Paging",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetParentStreamsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetParentStreamsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetParentStreamsResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "streams"
        ],
        "properties": {
          "streams": {
            "type": "array",
            "description": "Streams",
            "items": {
              "$ref": "#/components/schemas/ParentStreamListItem"
            }
          }
        }
      },
      "ParentStreamListItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "platform",
          "platformName",
          "streamId",
          "isLive",
          "title",
          "urlSafeTitle",
          "languageId",
          "language",
          "languageCode",
          "viewerCount",
          "viewCount",
          "gameId",
          "gameName",
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Media stream id",
            "format": "int32"
          },
          "platform": {
            "description": "Platform",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPlatform"
              }
            ]
          },
          "platformName": {
            "type": "string",
            "description": "Platform name",
            "minLength": 1
          },
          "streamId": {
            "type": "string",
            "description": "Stream id",
            "minLength": 1
          },
          "isLive": {
            "type": "boolean",
            "description": "Is live"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "minLength": 1
          },
          "urlSafeTitle": {
            "type": "string",
            "description": "Url safe name",
            "minLength": 1
          },
          "screenCapUrl": {
            "type": "string",
            "description": "Screen cap url",
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "description": "Language id"
          },
          "language": {
            "type": "string",
            "description": "Language",
            "minLength": 1
          },
          "languageCode": {
            "type": "string",
            "description": "Language code",
            "minLength": 1
          },
          "viewerCount": {
            "type": "integer",
            "description": "Viewer count",
            "format": "int32"
          },
          "viewCount": {
            "type": "integer",
            "description": "View count",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "description": "Game id"
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "description": "Url",
            "minLength": 1
          }
        }
      },
      "ApiRespBaseOfGetChildDisplayResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetChildDisplayResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetChildDisplayResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentTournamentId",
          "parentUrlSafeName",
          "childTournamentId",
          "childTournamentName",
          "childTournamentType",
          "gameUrlSafeName",
          "rounds"
        ],
        "properties": {
          "parentTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "childTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "childTournamentName": {
            "type": "string",
            "minLength": 1
          },
          "childTournamentType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "pointsAwarded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPointsAwarded"
              }
            ]
          },
          "qualifyParticipants": {
            "type": "integer",
            "nullable": true
          },
          "gameUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "rounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildDisplayRound"
            }
          },
          "opponents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ChildDisplayOpponent"
            }
          },
          "replaceOpponents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ChildDisplayReplaceOpponent"
            }
          }
        }
      },
      "EnumPointsAwarded": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "PerGame",
          "PerMatch",
          "PerGameFull",
          "ByResultFull",
          "ByResult"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "ChildDisplayRound": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "roundId",
          "roundType",
          "roundName",
          "roundNumber",
          "gamesPerMatch",
          "isHidden",
          "matches"
        ],
        "properties": {
          "roundId": {
            "type": "integer",
            "format": "int32"
          },
          "roundType": {
            "$ref": "#/components/schemas/EnumRoundType"
          },
          "roundName": {
            "type": "string",
            "minLength": 1
          },
          "roundNumber": {
            "type": "integer"
          },
          "gamesPerMatch": {
            "type": "integer"
          },
          "isHidden": {
            "type": "boolean"
          },
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildDisplayMatch"
            }
          }
        }
      },
      "EnumRoundType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Normal",
          "UpperBracket",
          "LowerBracket",
          "Tiebreaker",
          "ThirdPlacePlayoff",
          "EmptyUpperBracket",
          "EmptyLowerBracket"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "ChildDisplayMatch": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentTournamentId",
          "parentUrlSafeName",
          "gameUrlSafeName",
          "matchId",
          "matchUrlSafeName",
          "startingAt",
          "matchNumber",
          "isPlayerBase",
          "teamCount"
        ],
        "properties": {
          "parentTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "gameUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "matchId": {
            "type": "integer",
            "format": "int32"
          },
          "matchUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "startingAt": {
            "type": "integer",
            "format": "int64"
          },
          "internalStartingAt": {
            "type": "integer",
            "format": "int64"
          },
          "matchNumber": {
            "type": "integer"
          },
          "nextMatchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nextMatchPlacement": {
            "type": "integer",
            "nullable": true
          },
          "winnerOpponentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isPlayerBase": {
            "type": "boolean"
          },
          "teamCount": {
            "type": "integer",
            "format": "int32"
          },
          "team1RegistrationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "team1IsSeed": {
            "type": "boolean"
          },
          "team1IsQualification": {
            "type": "boolean"
          },
          "team1Tag": {
            "type": "string",
            "nullable": true
          },
          "team1Name": {
            "type": "string",
            "nullable": true
          },
          "team1Image": {
            "type": "string",
            "nullable": true
          },
          "team1Score": {
            "type": "integer",
            "nullable": true
          },
          "team2RegistrationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "team2IsSeed": {
            "type": "boolean"
          },
          "team2IsQualification": {
            "type": "boolean"
          },
          "team2Tag": {
            "type": "string",
            "nullable": true
          },
          "team2Name": {
            "type": "string",
            "nullable": true
          },
          "team2Image": {
            "type": "string",
            "nullable": true
          },
          "team2Score": {
            "type": "integer",
            "nullable": true
          },
          "result": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumMatchResult"
              }
            ]
          },
          "status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumMatchStatus"
              }
            ]
          },
          "hasResult": {
            "type": "boolean"
          }
        }
      },
      "ChildDisplayOpponent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "registrationId",
          "name",
          "urlSafeName",
          "totalCount",
          "winCount",
          "drawCount",
          "lossCount",
          "points",
          "opponentType",
          "sourceId"
        ],
        "properties": {
          "registrationId": {
            "type": "integer",
            "format": "int32"
          },
          "teamTag": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "placement": {
            "type": "integer",
            "nullable": true
          },
          "totalCount": {
            "type": "integer"
          },
          "winCount": {
            "type": "integer"
          },
          "drawCount": {
            "type": "integer"
          },
          "lossCount": {
            "type": "integer"
          },
          "points": {
            "type": "integer"
          },
          "opponentType": {
            "$ref": "#/components/schemas/EnumOpponentType"
          },
          "sourceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ChildDisplayReplaceOpponent": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "replacedOpponent",
          "replacedByOpponent",
          "replacementTime"
        ],
        "properties": {
          "replacedOpponent": {
            "type": "string",
            "minLength": 1
          },
          "replacedByOpponent": {
            "type": "string",
            "minLength": 1
          },
          "replacementTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiRespBaseOfGetEmbedGroupResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetEmbedGroupResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetEmbedGroupResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentTournamentId",
          "childTournamentId",
          "childTournamentName",
          "childTournamentType",
          "gameUrlSafeName",
          "parentUrlSafeName"
        ],
        "properties": {
          "parentTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "childTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "childTournamentName": {
            "type": "string",
            "minLength": 1
          },
          "childTournamentType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "pointsAwarded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPointsAwarded"
              }
            ]
          },
          "qualifyParticipants": {
            "type": "integer",
            "nullable": true
          },
          "gameUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "opponents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ChildDisplayOpponent"
            }
          }
        }
      },
      "ApiRespBaseOfGetEmbedBracketResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetEmbedBracketResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetEmbedBracketResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "parentTournamentId",
          "childTournamentId",
          "childTournamentName",
          "childTournamentType",
          "gameUrlSafeName",
          "parentUrlSafeName",
          "rounds"
        ],
        "properties": {
          "parentTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "childTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "childTournamentName": {
            "type": "string",
            "minLength": 1
          },
          "childTournamentType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "pointsAwarded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPointsAwarded"
              }
            ]
          },
          "qualifyParticipants": {
            "type": "integer",
            "nullable": true
          },
          "gameUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "parentUrlSafeName": {
            "type": "string",
            "minLength": 1
          },
          "rounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildDisplayRound"
            }
          }
        }
      },
      "ApiRespBaseOfGetVodsResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetVodsResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetVodsResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "vods": {
            "type": "array",
            "description": "Vods",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VodItem"
            }
          },
          "paging": {
            "description": "Paging",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PagingRespBase"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfGetVodResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetVodResp"
                  }
                ]
              }
            }
          }
        ]
      },
      "GetVodResp": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vodDetail"
        ],
        "properties": {
          "vodDetail": {
            "description": "Vod detail",
            "oneOf": [
              {
                "$ref": "#/components/schemas/VodItem"
              }
            ]
          }
        }
      },
      "ApiRespBaseOfObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiRespBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "Account",
      "description": "Account Controller"
    },
    {
      "name": "Articles",
      "description": "Articles Controller"
    },
    {
      "name": "ArticlesRss",
      "description": "Articles Rss Controller"
    },
    {
      "name": "BroadcastTalents",
      "description": "Broadcast talents controller"
    },
    {
      "name": "Events",
      "description": "Events controller"
    },
    {
      "name": "FeatureTeam",
      "description": "Feature Team Controller"
    },
    {
      "name": "Frontends",
      "description": "Options Controller"
    },
    {
      "name": "Links",
      "description": "Short urls"
    },
    {
      "name": "Log",
      "description": "Log Controller"
    },
    {
      "name": "Matches",
      "description": "Matches Controller"
    },
    {
      "name": "Members",
      "description": "Members Controller"
    },
    {
      "name": "OEmbed",
      "description": "OEmbed Controller"
    },
    {
      "name": "Options",
      "description": "Options Controller"
    },
    {
      "name": "Pages",
      "description": "Pages Controller"
    },
    {
      "name": "Players",
      "description": "Players Controller"
    },
    {
      "name": "Polls",
      "description": "Polls Controller"
    },
    {
      "name": "Rankings",
      "description": "Rankings Controller"
    },
    {
      "name": "Site",
      "description": "Site Controller"
    },
    {
      "name": "Sitemap",
      "description": "Articles Controller"
    },
    {
      "name": "SiteSection",
      "description": "Site section Controller"
    },
    {
      "name": "Sponsors",
      "description": "Sponsors Controller"
    },
    {
      "name": "Streams",
      "description": "Streams Controller"
    },
    {
      "name": "Teams",
      "description": "Teams Controller"
    },
    {
      "name": "Tournaments",
      "description": "Tournaments Controller"
    },
    {
      "name": "Vods",
      "description": "Vods Controller"
    },
    {
      "name": "AuthTest",
      "description": "Auth Test Controller"
    }
  ]
}