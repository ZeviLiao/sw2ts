{
  "openapi": "3.0.1",
  "info": {
    "title": "BackofficeApi v4",
    "version": "v4"
  },
  "paths": {
    "/api/v4/articles/types": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get all article types and subtypes",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArticleTypesRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get articles by condition",
        "parameters": [
          {
            "name": "ArticleId",
            "in": "query",
            "description": "Article Id for troubleshooting",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FrontendId",
            "in": "query",
            "description": "Frontend id\r\nnull: All",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "description": "Article title",
            "style": "form",
            "schema": {
              "maxLength": 100,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "IsProofread",
            "in": "query",
            "description": "Is Proofread",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SiteSectionId",
            "in": "query",
            "description": "Site Section Id\r\nnull: All",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CreatedFrom",
            "in": "query",
            "description": "Created From",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CreatedTo",
            "in": "query",
            "description": "Created To",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Author",
            "in": "query",
            "description": "Creator user name",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "State",
            "in": "query",
            "description": "Article state\r\nPublished: 1\r\nUnpublished: 2\r\nDeleted: 3\r\nFeatured: 4",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumArticleState"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArticlesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Add new article",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Content",
                  "FrontendId",
                  "IsFeatured",
                  "IsSectionSticky",
                  "LocaleId",
                  "SiteSectionIds",
                  "SubTypeId",
                  "Teaser",
                  "TimeSpent",
                  "Title"
                ],
                "type": "object",
                "properties": {
                  "SubTypeId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Article SubtypeId",
                    "format": "int32"
                  },
                  "FrontendId": {
                    "type": "integer",
                    "description": "Article frontend id",
                    "format": "int32"
                  },
                  "LocaleId": {
                    "type": "integer",
                    "description": "Article locale id",
                    "format": "int32"
                  },
                  "SiteSectionIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Article site sections"
                  },
                  "Title": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Article title"
                  },
                  "Teaser": {
                    "maxLength": 160,
                    "minLength": 0,
                    "type": "string",
                    "description": "Article Teaser"
                  },
                  "Content": {
                    "maxLength": 2147483647,
                    "minLength": 0,
                    "type": "string",
                    "description": "Article content"
                  },
                  "HeadlineImgFile": {
                    "type": "string",
                    "description": "Headline image file",
                    "format": "binary"
                  },
                  "HeadlineImageText": {
                    "maxLength": 125,
                    "minLength": 0,
                    "type": "string",
                    "description": "Headline image text"
                  },
                  "SquareHeadlineImgFile": {
                    "type": "string",
                    "description": "Square headline image file",
                    "format": "binary"
                  },
                  "IsPublished": {
                    "type": "boolean",
                    "description": "Is published"
                  },
                  "PublishedAt": {
                    "type": "integer",
                    "description": "Published At",
                    "format": "int64"
                  },
                  "IsFeatured": {
                    "type": "boolean",
                    "description": "Is featured"
                  },
                  "IsSectionSticky": {
                    "type": "boolean",
                    "description": "Is section sticky"
                  },
                  "TimeSpent": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Time spent",
                    "format": "int32"
                  },
                  "PlayerIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Related players"
                  },
                  "TeamIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Related teams"
                  },
                  "TournamentIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Related tournaments"
                  },
                  "QuickPoll.Question": {
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string",
                    "description": "Questions"
                  },
                  "QuickPoll.Options": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Options"
                  }
                }
              },
              "encoding": {
                "SubTypeId": {
                  "style": "form"
                },
                "FrontendId": {
                  "style": "form"
                },
                "LocaleId": {
                  "style": "form"
                },
                "SiteSectionIds": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "Teaser": {
                  "style": "form"
                },
                "Content": {
                  "style": "form"
                },
                "HeadlineImgFile": {
                  "style": "form"
                },
                "HeadlineImageText": {
                  "style": "form"
                },
                "SquareHeadlineImgFile": {
                  "style": "form"
                },
                "IsPublished": {
                  "style": "form"
                },
                "PublishedAt": {
                  "style": "form"
                },
                "IsFeatured": {
                  "style": "form"
                },
                "IsSectionSticky": {
                  "style": "form"
                },
                "TimeSpent": {
                  "style": "form"
                },
                "PlayerIds": {
                  "style": "form"
                },
                "TeamIds": {
                  "style": "form"
                },
                "TournamentIds": {
                  "style": "form"
                },
                "QuickPoll.Question": {
                  "style": "form"
                },
                "QuickPoll.Options": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddArticleRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/articles/{id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ArticleId",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArticleRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Articles"
        ],
        "summary": "Modify article",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ArticleId",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Id"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Article id",
                    "format": "int32"
                  },
                  "SubTypeId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Article SubtypeId",
                    "format": "int32"
                  },
                  "FrontendId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Article frontend id",
                    "format": "int32"
                  },
                  "LocaleId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Article locale id",
                    "format": "int32"
                  },
                  "SiteSectionIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Article site sections"
                  },
                  "Title": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Article title"
                  },
                  "Teaser": {
                    "maxLength": 160,
                    "minLength": 0,
                    "type": "string",
                    "description": "Article teaser"
                  },
                  "Content": {
                    "maxLength": 2147483647,
                    "minLength": 0,
                    "type": "string",
                    "description": "Article content"
                  },
                  "HeadlineImgFile": {
                    "type": "string",
                    "description": "Headline image file",
                    "format": "binary"
                  },
                  "HeadlineImageText": {
                    "maxLength": 125,
                    "minLength": 0,
                    "type": "string",
                    "description": "Headline image text"
                  },
                  "SquareHeadlineImgFile": {
                    "type": "string",
                    "description": "Square headline image file",
                    "format": "binary"
                  },
                  "IsPublished": {
                    "type": "boolean",
                    "description": "Is published"
                  },
                  "PublishedAt": {
                    "type": "integer",
                    "description": "Published At",
                    "format": "int64"
                  },
                  "IsProofread": {
                    "type": "boolean",
                    "description": "Is proofread"
                  },
                  "TimeSpentProofreading": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Time spent for proofreading",
                    "format": "int32"
                  },
                  "IsFeatured": {
                    "type": "boolean",
                    "description": "Is featured"
                  },
                  "IsSectionSticky": {
                    "type": "boolean",
                    "description": "Is section sticky"
                  },
                  "TimeSpent": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Time spent",
                    "format": "int32"
                  },
                  "IsClearAllPlayers": {
                    "type": "boolean",
                    "description": "Is Clear All Players"
                  },
                  "PlayerIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Related players"
                  },
                  "IsClearAllTeams": {
                    "type": "boolean",
                    "description": "Is Clear All Teams"
                  },
                  "TeamIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Related teams"
                  },
                  "IsClearAllTournaments": {
                    "type": "boolean",
                    "description": "Is Clear All Tournaments"
                  },
                  "TournamentIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Related tournaments"
                  },
                  "QuickPoll.Question": {
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string",
                    "description": "Questions"
                  },
                  "QuickPoll.Options": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Options"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "SubTypeId": {
                  "style": "form"
                },
                "FrontendId": {
                  "style": "form"
                },
                "LocaleId": {
                  "style": "form"
                },
                "SiteSectionIds": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "Teaser": {
                  "style": "form"
                },
                "Content": {
                  "style": "form"
                },
                "HeadlineImgFile": {
                  "style": "form"
                },
                "HeadlineImageText": {
                  "style": "form"
                },
                "SquareHeadlineImgFile": {
                  "style": "form"
                },
                "IsPublished": {
                  "style": "form"
                },
                "PublishedAt": {
                  "style": "form"
                },
                "IsProofread": {
                  "style": "form"
                },
                "TimeSpentProofreading": {
                  "style": "form"
                },
                "IsFeatured": {
                  "style": "form"
                },
                "IsSectionSticky": {
                  "style": "form"
                },
                "TimeSpent": {
                  "style": "form"
                },
                "IsClearAllPlayers": {
                  "style": "form"
                },
                "PlayerIds": {
                  "style": "form"
                },
                "IsClearAllTeams": {
                  "style": "form"
                },
                "TeamIds": {
                  "style": "form"
                },
                "IsClearAllTournaments": {
                  "style": "form"
                },
                "TournamentIds": {
                  "style": "form"
                },
                "QuickPoll.Question": {
                  "style": "form"
                },
                "QuickPoll.Options": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModArticleRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Delete article",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ArticleId",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelArticleRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "summary": "Login",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/register": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "summary": "Register",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/oauth-callback": {
      "get": {
        "tags": [
          "AuthTest"
        ],
        "parameters": [
          {
            "name": "Code",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Locale",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "State",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserState",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v4/broadcasttalents/fuzzy": {
      "get": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Get fuzzy broadcast talents",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "description": "Prefix",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 30,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "description": "Max count",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyBroadcastTalentsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/broadcasttalents": {
      "get": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Get broadcast talents by condition",
        "parameters": [
          {
            "name": "NickName",
            "in": "query",
            "description": "Name",
            "style": "form",
            "schema": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "FirstName/LastName",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Primary game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LanguageId",
            "in": "query",
            "description": "LanguageId",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountryId",
            "in": "query",
            "description": "CountryId",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBroadcastTalentsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Add new broadcast talent",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "CountryId",
                  "Gender",
                  "IsActive",
                  "LanguageId",
                  "Name",
                  "RoleTypeIds"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Name"
                  },
                  "FirstName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "First Name"
                  },
                  "LastName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Last Name"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Country Id",
                    "format": "int32"
                  },
                  "LanguageId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Language Id",
                    "format": "int32"
                  },
                  "IsActive": {
                    "type": "boolean",
                    "description": "IsActive"
                  },
                  "About": {
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string",
                    "description": "About"
                  },
                  "Gender": {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Gender (Male=0/Female=1)",
                    "format": "int32"
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "description": "DateOfBirth (ex:2022-12-01)",
                    "format": "date"
                  },
                  "PrimaryGameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Primary Game Id",
                    "format": "int32"
                  },
                  "ProfileImage": {
                    "type": "string",
                    "description": "Profile Image",
                    "format": "binary"
                  },
                  "HeaderImage": {
                    "type": "string",
                    "description": "Header Image",
                    "format": "binary"
                  },
                  "PlayerId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Player Id",
                    "format": "int32"
                  },
                  "PersonalStreamId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Person Stream Id",
                    "format": "int32"
                  },
                  "Website": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "WebSite",
                    "format": "uri"
                  },
                  "Facebook": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Facebook"
                  },
                  "Twitter": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Twitter"
                  },
                  "Youtube": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Youtube"
                  },
                  "RoleTypeIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Role type ids\r\nType (Host=1/Commentator=2/Analyst=3/Observer=4/Interviewer=5/Other=99)"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "FirstName": {
                  "style": "form"
                },
                "LastName": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "LanguageId": {
                  "style": "form"
                },
                "IsActive": {
                  "style": "form"
                },
                "About": {
                  "style": "form"
                },
                "Gender": {
                  "style": "form"
                },
                "DateOfBirth": {
                  "style": "form"
                },
                "PrimaryGameId": {
                  "style": "form"
                },
                "ProfileImage": {
                  "style": "form"
                },
                "HeaderImage": {
                  "style": "form"
                },
                "PlayerId": {
                  "style": "form"
                },
                "PersonalStreamId": {
                  "style": "form"
                },
                "Website": {
                  "style": "form"
                },
                "Facebook": {
                  "style": "form"
                },
                "Twitter": {
                  "style": "form"
                },
                "Youtube": {
                  "style": "form"
                },
                "RoleTypeIds": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBroadcastTalentRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/broadcasttalents/{id}": {
      "get": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Get broadcast talent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Broadcast Talent Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBroadcastTalentRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Modify broadcast talent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Broadcast Talent Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "CountryId",
                  "Gender",
                  "Id",
                  "IsActive",
                  "LanguageId",
                  "Name",
                  "RoleTypeIds"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Broadcast Talent Id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Name"
                  },
                  "FirstName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "First Name"
                  },
                  "LastName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Last Name"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Country Id",
                    "format": "int32"
                  },
                  "LanguageId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Language Id",
                    "format": "int32"
                  },
                  "IsActive": {
                    "type": "boolean",
                    "description": "IsActive"
                  },
                  "About": {
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string",
                    "description": "About"
                  },
                  "Gender": {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Gender (Male=0/Female=1)",
                    "format": "int32"
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "description": "DateOfBirth (ex:2022-12-01)",
                    "format": "date"
                  },
                  "PrimaryGameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Primary Game Id",
                    "format": "int32"
                  },
                  "ProfileImage": {
                    "type": "string",
                    "description": "Profile Image",
                    "format": "binary"
                  },
                  "HeaderImage": {
                    "type": "string",
                    "description": "Header Image",
                    "format": "binary"
                  },
                  "PlayerId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Player Id",
                    "format": "int32"
                  },
                  "PersonalStreamId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Person Stream Id",
                    "format": "int32"
                  },
                  "Website": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Website",
                    "format": "uri"
                  },
                  "Facebook": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Facebook"
                  },
                  "Twitter": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Twitter"
                  },
                  "Youtube": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Youtube"
                  },
                  "RoleTypeIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Role type ids\r\nType (Host=1/Commentator=2/Analyst=3/Observer=4/Interviewer=5/Other=99)"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FirstName": {
                  "style": "form"
                },
                "LastName": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "LanguageId": {
                  "style": "form"
                },
                "IsActive": {
                  "style": "form"
                },
                "About": {
                  "style": "form"
                },
                "Gender": {
                  "style": "form"
                },
                "DateOfBirth": {
                  "style": "form"
                },
                "PrimaryGameId": {
                  "style": "form"
                },
                "ProfileImage": {
                  "style": "form"
                },
                "HeaderImage": {
                  "style": "form"
                },
                "PlayerId": {
                  "style": "form"
                },
                "PersonalStreamId": {
                  "style": "form"
                },
                "Website": {
                  "style": "form"
                },
                "Facebook": {
                  "style": "form"
                },
                "Twitter": {
                  "style": "form"
                },
                "Youtube": {
                  "style": "form"
                },
                "RoleTypeIds": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModBroadcastTalentRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Delete broadcast talent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Broadcast Talent Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelBroadcastTalentRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/broadcasttalents/media-items": {
      "get": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Get broadcast talents Media items",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "Broadcast Talent Id",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMediaItemsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Add broadcast talent new Media items",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaItemsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaItemsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaItemsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMediaItemsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/broadcasttalents/{broadcastid}/media-items/{mediaitemid}": {
      "delete": {
        "tags": [
          "BroadcastTalents"
        ],
        "summary": "Delete broadcast talent Media item",
        "parameters": [
          {
            "name": "broadcastid",
            "in": "path",
            "description": "Broadcast Talent Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mediaitemid",
            "in": "path",
            "description": "Media Item Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelMediaItemRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/currency/current-exchange-rate": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get current exchange rate",
        "parameters": [
          {
            "name": "Currency",
            "in": "query",
            "description": "Currency\r\nUSD = 1,\r\nEUR = 2,\r\nCNY = 3,\r\nRUB = 4,\r\nGBP = 5,\r\nPHP = 6,\r\nAUD = 7,\r\nBGN = 8,\r\nBRL = 9,\r\nCAD = 10,\r\nCZK = 11,\r\nDKK = 12,\r\nHKD = 13,\r\nHUF = 14,\r\nIDR = 15,\r\nILS = 16,\r\nINR = 17,\r\nKRW = 18,\r\nMXN = 19,\r\nMYR = 20,\r\nNZD = 21,\r\nPLN = 22,\r\nRON = 23,\r\nSEK = 24,\r\nSGD = 25,\r\nTHB = 26,\r\nTRY = 27,\r\nZAR = 28,\r\nJPY = 29,",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumCurrency"
            }
          },
          {
            "name": "Amount",
            "in": "query",
            "description": "Amount",
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentExchangeRateResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/earnings": {
      "get": {
        "tags": [
          "Earnings"
        ],
        "summary": "Get earnings",
        "parameters": [
          {
            "name": "ParentId",
            "in": "query",
            "description": "Parent tournament id",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Parent tournament name",
            "style": "form",
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Game id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PrizePoolStatus",
            "in": "query",
            "description": "Prize pool status\r\nNoPrizePool = 0,\r\nNoPrizePoolLogged = 1,\r\nNoStructureDefined = 2,\r\nNoWinnersBacklogged = 3,\r\nMissingWinners = 4,\r\nComplete = 5,",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumPrizePoolStatus"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEarningsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/earnings/{id}": {
      "get": {
        "tags": [
          "Earnings"
        ],
        "summary": "Get child earnings by parent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Parent tournament id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChildEarningsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/earnings/child/{id}": {
      "get": {
        "tags": [
          "Earnings"
        ],
        "summary": "Get child earning prize pool",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Child tournament id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChildEarningPrizePoolRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Earnings"
        ],
        "summary": "Modify child prize pool",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Child tournament id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildEarningPrizePoolReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildEarningPrizePoolReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildEarningPrizePoolReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/earnings/child/{id}/status": {
      "patch": {
        "tags": [
          "Earnings"
        ],
        "summary": "Modify child prize pool status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Child tournament id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildEarningPrizePoolStatusReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildEarningPrizePoolStatusReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildEarningPrizePoolStatusReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModChildEarningPrizePoolStatusRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/enumret": {
      "get": {
        "tags": [
          "EnumRetList"
        ],
        "summary": "Get EnumRet List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32StringDictionaryApiRespBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32StringDictionaryApiRespBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32StringDictionaryApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/files/crew-folders": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get folders",
        "parameters": [
          {
            "name": "ParentId",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UploadType",
            "in": "query",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumFieldSort"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCrewFoldersRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Add folder",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "FolderName",
                  "ParentId"
                ],
                "type": "object",
                "properties": {
                  "ParentId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "FolderName": {
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "ParentId": {
                  "style": "form"
                },
                "FolderName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddFolderRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/files/crew-files": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get files",
        "parameters": [
          {
            "name": "FolderId",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FileName",
            "in": "query",
            "style": "form",
            "schema": {
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Uploader",
            "in": "query",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "UploadedFrom",
            "in": "query",
            "style": "form",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "UploadedTo",
            "in": "query",
            "style": "form",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "NameSort",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumFieldSort"
            }
          },
          {
            "name": "UploadedSort",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumFieldSort"
            }
          },
          {
            "name": "UploaderSort",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumFieldSort"
            }
          },
          {
            "name": "SizeSort",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumFieldSort"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCrewFilesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "add crew file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "FileName",
                  "FolderId"
                ],
                "type": "object",
                "properties": {
                  "FolderId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "FileName": {
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "FolderId": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddFileRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/files/crew-folders/{id}": {
      "patch": {
        "tags": [
          "Files"
        ],
        "summary": "Modify folder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FolderId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ParentId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "ParentId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModFolderRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete folder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FolderId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelFolderRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/files/fuzzy-folders": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get fuzzy folders",
        "parameters": [
          {
            "name": "FolderId",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FuzzyName",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyFoldersRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/files/crew-files/{id}": {
      "patch": {
        "tags": [
          "Files"
        ],
        "summary": "Modify file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FileId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "FileId",
                  "FileName",
                  "FolderId"
                ],
                "type": "object",
                "properties": {
                  "FileId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "FolderId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "FileName": {
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "FileId": {
                  "style": "form"
                },
                "FolderId": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModFileRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FileId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelFileRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/frontend-site-sections/{id}": {
      "get": {
        "tags": [
          "FrontendSiteSections"
        ],
        "summary": "Get frontend site sections",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FrontendId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFrontendSiteSectionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/frontend-site-sections": {
      "post": {
        "tags": [
          "FrontendSiteSections"
        ],
        "summary": "Add frontend site sections",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFrontendSiteSectionsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFrontendSiteSectionsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddFrontendSiteSectionsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddFrontendSiteSectionsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "FrontendSiteSections"
        ],
        "summary": "Modify frontend site section",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModFrontendSiteSectionReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModFrontendSiteSectionReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModFrontendSiteSectionReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModFrontendSiteSectionRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FrontendSiteSections"
        ],
        "summary": "Delete frontend site section",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelFrontendSiteSectionReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DelFrontendSiteSectionReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DelFrontendSiteSectionReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelFrontendSiteSectionRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/funcs/types": {
      "get": {
        "tags": [
          "Funcs"
        ],
        "summary": "Get Func Types",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuncTypesRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/funcs/options": {
      "get": {
        "tags": [
          "Funcs"
        ],
        "summary": "Get Func Options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuncOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/funcs": {
      "get": {
        "tags": [
          "Funcs"
        ],
        "summary": "Get Funcs",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuncsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Funcs"
        ],
        "summary": "Add Func",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Code",
                  "FuncId",
                  "Name",
                  "ParentId",
                  "Position",
                  "Type"
                ],
                "type": "object",
                "properties": {
                  "FuncId": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Func id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Func name"
                  },
                  "Code": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Func code"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/EnumFuncType"
                  },
                  "ParentId": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Parent func id",
                    "format": "int32"
                  },
                  "Position": {
                    "maximum": 255,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Func position",
                    "format": "int32"
                  },
                  "Url": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Func url"
                  },
                  "Icon": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Func icon"
                  }
                }
              },
              "encoding": {
                "FuncId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Code": {
                  "style": "form"
                },
                "Type": {
                  "style": "form"
                },
                "ParentId": {
                  "style": "form"
                },
                "Position": {
                  "style": "form"
                },
                "Url": {
                  "style": "form"
                },
                "Icon": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddFuncRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/funcs/{id}": {
      "get": {
        "tags": [
          "Funcs"
        ],
        "summary": "Get Func",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FuncId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuncRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Funcs"
        ],
        "summary": "Modify Func",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FuncId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "FuncId"
                ],
                "type": "object",
                "properties": {
                  "FuncId": {
                    "maximum": 65535,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Func id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Func name"
                  },
                  "Code": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Func code"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/EnumFuncType"
                  },
                  "ParentId": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Parent func id",
                    "format": "int32"
                  },
                  "Position": {
                    "maximum": 255,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Func position",
                    "format": "int32"
                  },
                  "State": {
                    "$ref": "#/components/schemas/EnumState"
                  },
                  "Url": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Func url"
                  },
                  "Icon": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Func icon"
                  }
                }
              },
              "encoding": {
                "FuncId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Code": {
                  "style": "form"
                },
                "Type": {
                  "style": "form"
                },
                "ParentId": {
                  "style": "form"
                },
                "Position": {
                  "style": "form"
                },
                "State": {
                  "style": "form"
                },
                "Url": {
                  "style": "form"
                },
                "Icon": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModFuncRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Funcs"
        ],
        "summary": "Delete Func",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FuncId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelFuncRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/gameraces/fuzzy": {
      "get": {
        "tags": [
          "GameRaces"
        ],
        "summary": "Get fuzzy gameRaces",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "description": "if FuzzyPrefix = null will get list of all GameRaces",
            "style": "form",
            "schema": {
              "maxLength": 25,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyGameRaceRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/game-regions": {
      "get": {
        "tags": [
          "GameRegions"
        ],
        "summary": "Get game regions",
        "parameters": [
          {
            "name": "GameId",
            "in": "query",
            "description": "Game id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegionName",
            "in": "query",
            "description": "Region name",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGameRegionsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameRegions"
        ],
        "summary": "Add game region",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGameRegionReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGameRegionReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddGameRegionReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddGameRegionRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/game-regions/{id}": {
      "get": {
        "tags": [
          "GameRegions"
        ],
        "summary": "Get game region detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGameRegionRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameRegions"
        ],
        "summary": "Modify game region",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameRegionReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameRegionReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameRegionReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModGameRegionRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameRegions"
        ],
        "summary": "Delete game region",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelGameRegionRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/game-regions/{id}/translations": {
      "get": {
        "tags": [
          "GameRegions"
        ],
        "summary": "Get game region translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGameRegionTranslationRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameRegions"
        ],
        "summary": "Modify game region translation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameRegionTranslationReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameRegionTranslationReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameRegionTranslationReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModGameRegionTranslationRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/games": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get games by condition",
        "parameters": [
          {
            "name": "GameName",
            "in": "query",
            "description": "Game name",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "IsLegacy",
            "in": "query",
            "description": "Is legacy",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasPlayerRankings",
            "in": "query",
            "description": "Has player rankings",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasTeamRankings",
            "in": "query",
            "description": "Has team rankings",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGamesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Add game",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "HasPlayerRankings",
                  "HasStreams",
                  "HasTeamRankings",
                  "IsLegacy",
                  "Name",
                  "RecommendedReplayCount"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 20,
                    "minLength": 1,
                    "type": "string",
                    "description": "Game name"
                  },
                  "HasPlayerRankings": {
                    "type": "boolean",
                    "description": "Has player rankings"
                  },
                  "HasTeamRankings": {
                    "type": "boolean",
                    "description": "Has team rankings"
                  },
                  "HasStreams": {
                    "type": "boolean",
                    "description": "Has streams"
                  },
                  "GridId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Grid id",
                    "format": "int32"
                  },
                  "SteamAppId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Steam app id",
                    "format": "int32"
                  },
                  "TwitchGameId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Twitch game id",
                    "format": "int32"
                  },
                  "IconImageFile": {
                    "type": "string",
                    "description": "Icon image file",
                    "format": "binary"
                  },
                  "IsLegacy": {
                    "type": "boolean",
                    "description": "Is legacy"
                  },
                  "RecommendedReplayCount": {
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Recommended replay count",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "HasPlayerRankings": {
                  "style": "form"
                },
                "HasTeamRankings": {
                  "style": "form"
                },
                "HasStreams": {
                  "style": "form"
                },
                "GridId": {
                  "style": "form"
                },
                "SteamAppId": {
                  "style": "form"
                },
                "TwitchGameId": {
                  "style": "form"
                },
                "IconImageFile": {
                  "style": "form"
                },
                "IsLegacy": {
                  "style": "form"
                },
                "RecommendedReplayCount": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddGameRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/games/{id}": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get game",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GameId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGameRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Games"
        ],
        "summary": "Delete game",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GameId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelGameRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/games/id": {
      "patch": {
        "tags": [
          "Games"
        ],
        "summary": "Modify game",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "GameId",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameId",
                  "HasPlayerRankings",
                  "HasStreams",
                  "HasTeamRankings",
                  "IsLegacy",
                  "Name",
                  "RecommendedReplayCount"
                ],
                "type": "object",
                "properties": {
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Game id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 20,
                    "minLength": 1,
                    "type": "string",
                    "description": "Game name"
                  },
                  "HasPlayerRankings": {
                    "type": "boolean",
                    "description": "Has player rankings"
                  },
                  "HasTeamRankings": {
                    "type": "boolean",
                    "description": "Has team rankings"
                  },
                  "HasStreams": {
                    "type": "boolean",
                    "description": "Has streams"
                  },
                  "GridId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Grid id",
                    "format": "int32"
                  },
                  "SteamAppId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Steam app id",
                    "format": "int32"
                  },
                  "TwitchGameId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Twitch game id",
                    "format": "int32"
                  },
                  "IconImageFile": {
                    "type": "string",
                    "description": "Icon image file",
                    "format": "binary"
                  },
                  "IsLegacy": {
                    "type": "boolean",
                    "description": "Is legacy"
                  },
                  "RecommendedReplayCount": {
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Recommended replay count",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "GameId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "HasPlayerRankings": {
                  "style": "form"
                },
                "HasTeamRankings": {
                  "style": "form"
                },
                "HasStreams": {
                  "style": "form"
                },
                "GridId": {
                  "style": "form"
                },
                "SteamAppId": {
                  "style": "form"
                },
                "TwitchGameId": {
                  "style": "form"
                },
                "IconImageFile": {
                  "style": "form"
                },
                "IsLegacy": {
                  "style": "form"
                },
                "RecommendedReplayCount": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModGameRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/games/{id}/translations": {
      "patch": {
        "tags": [
          "Games"
        ],
        "summary": "Modify game translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameTranslationsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameTranslationsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameTranslationsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModGameTranslationsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/games/fuzzy": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get fuzzy games",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "description": "if FuzzyPrefix = null will get list of all games",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyGamesRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/gamesides": {
      "get": {
        "tags": [
          "GameSides"
        ],
        "summary": "Get sides by condition",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Side Name",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Side Game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSidesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameSides"
        ],
        "summary": "Add new game side",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameId",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Game Side Name"
                  },
                  "IconFile": {
                    "type": "string",
                    "description": "Icon file",
                    "format": "binary"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Side Game Id",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "IconFile": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddSideRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/gamesides/{id}": {
      "get": {
        "tags": [
          "GameSides"
        ],
        "summary": "Get game side",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sides Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSideRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameSides"
        ],
        "summary": "Modify game side",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Game side Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameId",
                  "Id",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Side Id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Game Side Name"
                  },
                  "IconFile": {
                    "type": "string",
                    "description": "Icon file",
                    "format": "binary"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Side Game Id",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "IconFile": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModSideRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameSides"
        ],
        "summary": "Delete game side",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Game side Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelSideRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/gamesides/{id}/translations": {
      "get": {
        "tags": [
          "GameSides"
        ],
        "summary": "Get game side translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sides Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSideTranslationsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameSides"
        ],
        "summary": "Modify game side translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Game side Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModSideTranslationsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModSideTranslationsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModSideTranslationsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModSideTranslationsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups/group-options": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get group options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups/group-options-by-user": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get group options by user",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get Groups",
        "parameters": [
          {
            "name": "GroupIds",
            "in": "query",
            "description": "Group ids",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Remark",
            "in": "query",
            "description": "Group remark",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 3,
              "type": "string"
            }
          },
          {
            "name": "FrontendIds",
            "in": "query",
            "description": "Frontend ids",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Add group",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddGroupRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups/{id}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get Group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GroupId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Groups"
        ],
        "summary": "Modify Group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GroupId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGroupReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGroupReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModGroupReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModGroupRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete Group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GroupId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelGroupRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups/blank-permissions": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get group blank permissions",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupBlankPermissionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups/templates": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get Group Templates",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupTemplatesRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups/assign-group": {
      "patch": {
        "tags": [
          "Groups"
        ],
        "summary": "Assign group to ser",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignGroupReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignGroupReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignGroupReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignGroupRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups/unassign-group": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "UnAssign group from user",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnAssignGroupReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnAssignGroupReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnAssignGroupReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAssignGroupRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups/{id}/users": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get users by group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersByGroupRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/groups/{id}/fuzzy-users": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get fuzzy users by group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 30,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyUsersByGroupRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/heroes": {
      "get": {
        "tags": [
          "Heroes"
        ],
        "summary": "Get heroes by condition",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Hero Name",
            "style": "form",
            "schema": {
              "maxLength": 25,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "description": "Hero Title",
            "style": "form",
            "schema": {
              "maxLength": 25,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Hero Game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHeroesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Heroes"
        ],
        "summary": "Add new game Hero",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Description",
                  "GameId",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 25,
                    "minLength": 0,
                    "type": "string",
                    "description": "Game Hero Name"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Hero Game Id",
                    "format": "int32"
                  },
                  "Description": {
                    "maxLength": 10000,
                    "minLength": 0,
                    "type": "string",
                    "description": "Description"
                  },
                  "IconFile": {
                    "type": "string",
                    "description": "Icon file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "IconFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddHeroRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/heroes/{id}": {
      "get": {
        "tags": [
          "Heroes"
        ],
        "summary": "Get game hero",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hero Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHeroRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Heroes"
        ],
        "summary": "Modify game Hero",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "game Hero Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Description",
                  "GameId",
                  "Id",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Game Hero Id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 25,
                    "minLength": 0,
                    "type": "string",
                    "description": "Game Hero Name"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Hero Game Id",
                    "format": "int32"
                  },
                  "Description": {
                    "maxLength": 10000,
                    "minLength": 0,
                    "type": "string",
                    "description": "Description"
                  },
                  "IconFile": {
                    "type": "string",
                    "description": "Icon file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "IconFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModHeroRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Heroes"
        ],
        "summary": "Delete game Hero",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "game Hero Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelHeroRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/heroes/{id}/translations": {
      "get": {
        "tags": [
          "Heroes"
        ],
        "summary": "Get game hero translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "heroes Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHeroTranslationsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Heroes"
        ],
        "summary": "Modify game Hero translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "game Hero Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModHeroTranslationsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModHeroTranslationsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModHeroTranslationsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModHeroTranslationsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/logout": {
      "post": {
        "tags": [
          "Logout"
        ],
        "summary": "Logout",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "description": "RefreshToken",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/logs/log-levels": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get Log Levels",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v4/logs/api-logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get Api Logs",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "From",
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "To",
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Prefix",
            "in": "query",
            "description": "Prefix",
            "style": "form",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "HttpStatusCode",
            "in": "query",
            "description": "Http Status Code",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Ip",
            "in": "query",
            "description": "IP Address",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Path",
            "in": "query",
            "description": "Path",
            "style": "form",
            "schema": {
              "maxLength": 512,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Content",
            "in": "query",
            "description": "Content",
            "style": "form",
            "schema": {
              "maxLength": 512,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "ServerName",
            "in": "query",
            "description": "Server Name",
            "style": "form",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "TraceId",
            "in": "query",
            "description": "Trace Id",
            "style": "form",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApiLogsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/logs/api-logs/{id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get Api log",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Log Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApiLogRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/logs/system-logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get System Logs",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "From",
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "To",
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Prefix",
            "in": "query",
            "description": "Prefix",
            "style": "form",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "ServerName",
            "in": "query",
            "description": "Server Name",
            "style": "form",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Logger",
            "in": "query",
            "description": "Logger",
            "style": "form",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Method",
            "in": "query",
            "description": "Method",
            "style": "form",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "LogLevel",
            "in": "query",
            "description": "Log Level",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/LogLevel"
            }
          },
          {
            "name": "TraceId",
            "in": "query",
            "description": "Trace Id",
            "style": "form",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Keyword",
            "in": "query",
            "description": "Keyword",
            "style": "form",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemLogsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/logs/system-logs/{id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get System Log",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Log Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemLogRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/maps": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Get maps by condition",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Maps Name",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Maps Game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMapsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Maps"
        ],
        "summary": "Add new game map",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameId",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Game Map Name"
                  },
                  "ImageFile": {
                    "type": "string",
                    "description": "Image file",
                    "format": "binary"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Map Game Id",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMapRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/maps/{id}": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Get game map",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Maps Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMapRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Maps"
        ],
        "summary": "Modify game map",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "game map Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameId",
                  "Id",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Game Map Id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Game Map Name"
                  },
                  "ImageFile": {
                    "type": "string",
                    "description": "Image file",
                    "format": "binary"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Map Game Id",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModMapRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Maps"
        ],
        "summary": "Delete game map",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "game map Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelMapRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/maps/{id}/translations": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Get game map translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Maps Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMapTranslationsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Maps"
        ],
        "summary": "Modify game map translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "game map Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModMapTranslationsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModMapTranslationsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModMapTranslationsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModMapTranslationsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/maps/fuzzy": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Get fuzzy maps",
        "parameters": [
          {
            "name": "GameId",
            "in": "query",
            "description": "Game id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "description": "Fuzzy prefix",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "description": "Max count",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyMapsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/media/streams": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get media streams by condition",
        "parameters": [
          {
            "name": "Title",
            "in": "query",
            "description": "Title",
            "style": "form",
            "schema": {
              "maxLength": 60,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Creator",
            "in": "query",
            "description": "Creator(Username)",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "PlatformId",
            "in": "query",
            "description": "Platform Id (TwitchTV = 1,Youtube_Channel = 10,Youtube_Stream = 11,Other = 99)",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumPlatform"
            }
          },
          {
            "name": "StreamId",
            "in": "query",
            "description": "Stream Id",
            "style": "form",
            "schema": {
              "maxLength": 25,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsLive",
            "in": "query",
            "description": "Is Live",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CreatedFrom",
            "in": "query",
            "description": "Created From",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CreatedTo",
            "in": "query",
            "description": "Created To",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStreamsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Add new media stream",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameId",
                  "IsCelebCaster",
                  "IsEventStream",
                  "IsFeatured",
                  "IsProPlayer",
                  "LanguageId",
                  "Platform",
                  "Title"
                ],
                "type": "object",
                "properties": {
                  "Platform": {
                    "$ref": "#/components/schemas/EnumPlatform"
                  },
                  "StreamId": {
                    "maxLength": 25,
                    "minLength": 0,
                    "type": "string",
                    "description": "StreamId"
                  },
                  "StreamUrl": {
                    "maxLength": 150,
                    "minLength": 0,
                    "type": "string",
                    "description": "Stream Url"
                  },
                  "ScreenCapFile": {
                    "type": "string",
                    "description": "Screen Cap file",
                    "format": "binary"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "GameId",
                    "format": "int32"
                  },
                  "LanguageId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "LanguageId",
                    "format": "int32"
                  },
                  "IsEventStream": {
                    "type": "boolean",
                    "description": "Is Event Stream"
                  },
                  "IsProPlayer": {
                    "type": "boolean",
                    "description": "Is Pro Player"
                  },
                  "IsCelebCaster": {
                    "type": "boolean",
                    "description": "Is Celeb Caster"
                  },
                  "NextBroadcastAt": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "Next Broadcast At",
                    "format": "int64"
                  },
                  "Title": {
                    "maxLength": 60,
                    "minLength": 0,
                    "type": "string",
                    "description": "Title"
                  },
                  "IsFeatured": {
                    "type": "boolean",
                    "description": "Is Featured"
                  },
                  "Description": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "Description"
                  },
                  "Tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags : Maximum of 5 tags(25 characters maximum per tag)"
                  }
                }
              },
              "encoding": {
                "Platform": {
                  "style": "form"
                },
                "StreamId": {
                  "style": "form"
                },
                "StreamUrl": {
                  "style": "form"
                },
                "ScreenCapFile": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                },
                "LanguageId": {
                  "style": "form"
                },
                "IsEventStream": {
                  "style": "form"
                },
                "IsProPlayer": {
                  "style": "form"
                },
                "IsCelebCaster": {
                  "style": "form"
                },
                "NextBroadcastAt": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "IsFeatured": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Tags": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddStreamRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/media/streams/{id}": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get media stream detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "media item Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStreamRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Media"
        ],
        "summary": "Modify media stream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "media item Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameId",
                  "Id",
                  "IsCelebCaster",
                  "IsEventStream",
                  "IsFeatured",
                  "IsProPlayer",
                  "LanguageId",
                  "Platform",
                  "Title"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Media Item Id",
                    "format": "int32"
                  },
                  "Platform": {
                    "$ref": "#/components/schemas/EnumPlatform"
                  },
                  "StreamId": {
                    "maxLength": 25,
                    "minLength": 0,
                    "type": "string",
                    "description": "StreamId"
                  },
                  "StreamUrl": {
                    "maxLength": 150,
                    "minLength": 0,
                    "type": "string",
                    "description": "Stream Url"
                  },
                  "ScreenCapFile": {
                    "type": "string",
                    "description": "Screen Cap file",
                    "format": "binary"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "GameId",
                    "format": "int32"
                  },
                  "LanguageId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "LanguageId",
                    "format": "int32"
                  },
                  "IsEventStream": {
                    "type": "boolean",
                    "description": "Is Event Stream"
                  },
                  "IsProPlayer": {
                    "type": "boolean",
                    "description": "Is Pro Player"
                  },
                  "IsCelebCaster": {
                    "type": "boolean",
                    "description": "Is Celeb Caster"
                  },
                  "NextBroadcastAt": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "Next Broadcast At",
                    "format": "int64"
                  },
                  "Title": {
                    "maxLength": 60,
                    "minLength": 0,
                    "type": "string",
                    "description": "Title"
                  },
                  "IsFeatured": {
                    "type": "boolean",
                    "description": "Is Featured"
                  },
                  "Description": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "Description"
                  },
                  "Tags": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ModStreamTag"
                    },
                    "description": "Tags : Maximum of 5 tags(25 characters maximum per tag)"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Platform": {
                  "style": "form"
                },
                "StreamId": {
                  "style": "form"
                },
                "StreamUrl": {
                  "style": "form"
                },
                "ScreenCapFile": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                },
                "LanguageId": {
                  "style": "form"
                },
                "IsEventStream": {
                  "style": "form"
                },
                "IsProPlayer": {
                  "style": "form"
                },
                "IsCelebCaster": {
                  "style": "form"
                },
                "NextBroadcastAt": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "IsFeatured": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Tags": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModStreamRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Media"
        ],
        "summary": "Delete media stream",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "media stream Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelStreamRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/media/fuzzy-streams": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get fuzzy media streams",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "description": "FuzzyPrefix",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyMediaStreamsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/media/fuzzy-videos": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get fuzzy media videos",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "description": "FuzzyPrefix",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyMediaVideosRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/media/vods/host-options": {
      "get": {
        "tags": [
          "MediaVods"
        ],
        "summary": "Get media vod host options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMediaVodHostOptionsResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/media/vods": {
      "get": {
        "tags": [
          "MediaVods"
        ],
        "summary": "Get media vods",
        "parameters": [
          {
            "name": "VodId",
            "in": "query",
            "description": "Vod id",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "description": "vod title",
            "style": "form",
            "schema": {
              "maxLength": 30,
              "minLength": 3,
              "type": "string"
            }
          },
          {
            "name": "HostId",
            "in": "query",
            "description": "Host id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HostVideoId",
            "in": "query",
            "description": "Host video id",
            "style": "form",
            "schema": {
              "maxLength": 40,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "SiteSectionIds",
            "in": "query",
            "description": "Site section ids",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "CreatedFrom",
            "in": "query",
            "description": "Created From",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CreatedTo",
            "in": "query",
            "description": "Created To",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Creator",
            "in": "query",
            "description": "Creator user name",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 3,
              "type": "string"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMediaVodsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MediaVods"
        ],
        "summary": "Add media vod",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaVodReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaVodReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaVodReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMediaVodRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/media/vods/{id}": {
      "get": {
        "tags": [
          "MediaVods"
        ],
        "summary": "Get media vod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMediaVodRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MediaVods"
        ],
        "summary": "Modify media vod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModMediaVodReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModMediaVodReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModMediaVodReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModMediaVodRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MediaVods"
        ],
        "summary": "Delete media vod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelMediaVodRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/media/vods/download-csv": {
      "get": {
        "tags": [
          "MediaVods"
        ],
        "summary": "Download media vods csv",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "style": "form",
            "schema": {
              "maximum": 10000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "VodId",
            "in": "query",
            "description": "Vod id",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "description": "vod title",
            "style": "form",
            "schema": {
              "maxLength": 30,
              "minLength": 3,
              "type": "string"
            }
          },
          {
            "name": "HostId",
            "in": "query",
            "description": "Host id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HostVideoId",
            "in": "query",
            "description": "Host video id",
            "style": "form",
            "schema": {
              "maxLength": 40,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "SiteSectionIds",
            "in": "query",
            "description": "Site section ids",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "CreatedFrom",
            "in": "query",
            "description": "Created From",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CreatedTo",
            "in": "query",
            "description": "Created To",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Creator",
            "in": "query",
            "description": "Creator user name",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 3,
              "type": "string"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v4/modes": {
      "get": {
        "tags": [
          "Modes"
        ],
        "summary": "Get modes by condition",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Modes Name",
            "style": "form",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Abbreviation",
            "in": "query",
            "description": "Modes Abbreviation",
            "style": "form",
            "schema": {
              "maxLength": 5,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Modes Game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Modes"
        ],
        "summary": "Add new game mode",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddModeReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddModeReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddModeReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddModeRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/modes/{id}": {
      "get": {
        "tags": [
          "Modes"
        ],
        "summary": "Get game mode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Modes Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModeRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Modes"
        ],
        "summary": "Modify game mode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "game Mode Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModModeReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModModeReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModModeReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModModeRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Modes"
        ],
        "summary": "Delete game mode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "game Mode Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelModeRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/modes/{id}/translations": {
      "get": {
        "tags": [
          "Modes"
        ],
        "summary": "Get game mode translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Modes Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModeTranslationsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Modes"
        ],
        "summary": "Modify game mode translations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "game Mode Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModModeTranslationsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModModeTranslationsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModModeTranslationsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModModeTranslationsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/modes/options": {
      "get": {
        "tags": [
          "Modes"
        ],
        "summary": "Get modes options",
        "parameters": [
          {
            "name": "GameId",
            "in": "query",
            "description": "Game id",
            "required": true,
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int16ItemListApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/messaging-notification-templates": {
      "get": {
        "tags": [
          "NotificationTemplates"
        ],
        "summary": "Get Notification Templates",
        "parameters": [
          {
            "name": "FrontendId",
            "in": "query",
            "description": "Frontend id\r\nnull: All",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NotificationTemplateType",
            "in": "query",
            "description": "",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationTemplatesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NotificationTemplates"
        ],
        "summary": "Add Notification Template",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNotificationTemplateReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNotificationTemplateReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddNotificationTemplateReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNotificationTemplateRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/messaging-notification-templates/{id}": {
      "get": {
        "tags": [
          "NotificationTemplates"
        ],
        "summary": "Get Notification Template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationTemplateRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "NotificationTemplates"
        ],
        "summary": "Modify Notification Template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModNotificationTemplateReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModNotificationTemplateReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModNotificationTemplateReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModNotificationTemplateRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationTemplates"
        ],
        "summary": "Delete Notification Template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelNotificationTemplateRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/messaging-onesignal-apps": {
      "get": {
        "tags": [
          "OneSignalApps"
        ],
        "summary": "Get One Signal Apps",
        "parameters": [
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneSignalAppsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OneSignalApps"
        ],
        "summary": "Add One Signal App",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOneSignalAppReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOneSignalAppReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddOneSignalAppReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddOneSignalAppRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/messaging-onesignal-apps/{id}": {
      "get": {
        "tags": [
          "OneSignalApps"
        ],
        "summary": "Get One Signal App",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneSignalAppRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OneSignalApps"
        ],
        "summary": "Modify One Signal App",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModOneSignalAppReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModOneSignalAppReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModOneSignalAppReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModOneSignalAppRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OneSignalApps"
        ],
        "summary": "Delete One Signal App",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelOneSignalAppRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/states": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get state options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStateOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/contact-types": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get contact types",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactTypesRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/frontends": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get frontend options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFrontendOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/frontends-by-user": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get frontend options by user",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFrontendOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/locales": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get locale options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocaleOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/frontend-locales": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get frontend locale options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFrontendLocaleOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/site-sections": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get site section options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSiteSectionsOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/countries": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get country options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountryOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/genders": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get gender options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGenderOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/proxy": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get GG Code Info",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGgCodeInfoRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/notification-types": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get Notification Type Options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationTypeOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/languages": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get language options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguagesRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/games": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get games options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGameOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/broadcast-talent-roles": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get broadcast talent roles options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBroadcastTalentRoleOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/servers": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get servers(locations) options",
        "parameters": [
          {
            "name": "gameId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServerOptionsRespListApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/tournament/points-awarded": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get tournament points awarded options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPointsAwardedOptionsRespListApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/earning-prize-pool-status": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get earning prize pool status",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPrizePoolStatusOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/currencies": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get currency options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPrizePoolStatusOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/tournament-states": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get tournament state options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParentTournamentStateOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/options/game-results": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Get game result options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int16ItemListApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/pages": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Get pages byt conditions",
        "parameters": [
          {
            "name": "Title",
            "in": "query",
            "description": "Title",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "FrontendId",
            "in": "query",
            "description": "Frontend id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Author",
            "in": "query",
            "description": "Create user name",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "PageId",
            "in": "query",
            "description": "Page id",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UpdatedFrom",
            "in": "query",
            "description": "Updated from",
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "UpdatedTo",
            "in": "query",
            "description": "Updated to",
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPagesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Pages"
        ],
        "summary": "Add page",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPageReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPageReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPageReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPageRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Pages"
        ],
        "summary": "Delete page",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelPageReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DelPageReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DelPageReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelPageRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/pages/{id}": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Get page",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PageId",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPageRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Pages"
        ],
        "summary": "Modify page",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PageId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModPageReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModPageReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModPageReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModPageRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/players": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get players",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "Player Id",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NickName",
            "in": "query",
            "description": "Player Name",
            "style": "form",
            "schema": {
              "maxLength": 30,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "First Name",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "Last Name",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "PrimaryGameId",
            "in": "query",
            "description": "Primary Game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountryId",
            "in": "query",
            "description": "CountryId",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CreatedAtFrom",
            "in": "query",
            "description": "Created at from",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CreatedAtTo",
            "in": "query",
            "description": "Created at to",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "GameAccount",
            "in": "query",
            "description": "Game Account",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlayersRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Add player",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "CountryId",
                  "Gender",
                  "IsActive",
                  "NickName"
                ],
                "type": "object",
                "properties": {
                  "UserId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "User id",
                    "format": "int32"
                  },
                  "IsActive": {
                    "type": "boolean",
                    "description": "Is active"
                  },
                  "NickName": {
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "Nickname"
                  },
                  "FirstName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Firstname"
                  },
                  "LastName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Lastname"
                  },
                  "Gender": {
                    "$ref": "#/components/schemas/EnumGender"
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "description": "Date of birth\r\nex:2022-12-01",
                    "format": "date"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Country id",
                    "format": "int32"
                  },
                  "InitialRating": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Initial rating",
                    "format": "int32"
                  },
                  "PrimaryGameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Primary game id",
                    "format": "int32"
                  },
                  "Image": {
                    "type": "string",
                    "description": "Image",
                    "format": "binary"
                  },
                  "Descriptions": {
                    "maxLength": 5000,
                    "minLength": 0,
                    "type": "string",
                    "description": "Description"
                  },
                  "FaceBook": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Facebook"
                  },
                  "Twitter": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Twitter"
                  },
                  "Youtube": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Youtube"
                  }
                }
              },
              "encoding": {
                "UserId": {
                  "style": "form"
                },
                "IsActive": {
                  "style": "form"
                },
                "NickName": {
                  "style": "form"
                },
                "FirstName": {
                  "style": "form"
                },
                "LastName": {
                  "style": "form"
                },
                "Gender": {
                  "style": "form"
                },
                "DateOfBirth": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "InitialRating": {
                  "style": "form"
                },
                "PrimaryGameId": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Descriptions": {
                  "style": "form"
                },
                "FaceBook": {
                  "style": "form"
                },
                "Twitter": {
                  "style": "form"
                },
                "Youtube": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPlayerRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/players/{id}": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get player",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PlayerId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlayerRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Players"
        ],
        "summary": "Modify player",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PlayerId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "CountryId",
                  "Gender",
                  "IsActive",
                  "NickName",
                  "PlayerId"
                ],
                "type": "object",
                "properties": {
                  "PlayerId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Player id",
                    "format": "int32"
                  },
                  "UserId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "User id",
                    "format": "int32"
                  },
                  "IsActive": {
                    "type": "boolean",
                    "description": "Is active"
                  },
                  "NickName": {
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "Nickname"
                  },
                  "FirstName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Firstname"
                  },
                  "LastName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Lastname"
                  },
                  "Gender": {
                    "$ref": "#/components/schemas/EnumGender"
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "description": "Date of birth\r\nex:2022-12-01",
                    "format": "date"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Country id",
                    "format": "int32"
                  },
                  "PrimaryGameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Primary game id",
                    "format": "int32"
                  },
                  "Image": {
                    "type": "string",
                    "description": "Image",
                    "format": "binary"
                  },
                  "IsRemoveImage": {
                    "type": "boolean",
                    "description": "is remove image\r\nif IsRemoveImage = true will remove Image and set ImageFilePath = null"
                  },
                  "Descriptions": {
                    "maxLength": 5000,
                    "minLength": 0,
                    "type": "string",
                    "description": "Descriptions"
                  },
                  "FaceBook": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Facebook"
                  },
                  "Twitter": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Twitter"
                  },
                  "Youtube": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Youtube"
                  }
                }
              },
              "encoding": {
                "PlayerId": {
                  "style": "form"
                },
                "UserId": {
                  "style": "form"
                },
                "IsActive": {
                  "style": "form"
                },
                "NickName": {
                  "style": "form"
                },
                "FirstName": {
                  "style": "form"
                },
                "LastName": {
                  "style": "form"
                },
                "Gender": {
                  "style": "form"
                },
                "DateOfBirth": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "PrimaryGameId": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "IsRemoveImage": {
                  "style": "form"
                },
                "Descriptions": {
                  "style": "form"
                },
                "FaceBook": {
                  "style": "form"
                },
                "Twitter": {
                  "style": "form"
                },
                "Youtube": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModPlayerRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Players"
        ],
        "summary": "Delete player",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PlayerId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelPlayerRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/players/fuzzy": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get fuzzy players",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "description": "Fuzzy prefix",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 30,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "description": "Max count",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyPlayersRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/players/users/{id}": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForPlayerRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/players/{playerid}/media-items": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get player Media items",
        "parameters": [
          {
            "name": "playerid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlayerMediaItemsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Add player new Media items",
        "parameters": [
          {
            "name": "playerid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MediaItems",
            "in": "query",
            "description": "Media item Ids",
            "required": true,
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPlayerMediaItemRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/players/{playerid}/media-items/{mediaitemid}": {
      "delete": {
        "tags": [
          "Players"
        ],
        "summary": "Delete player Media item",
        "parameters": [
          {
            "name": "playerid",
            "in": "path",
            "description": "Player Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mediaitemid",
            "in": "path",
            "description": "Media Item Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelPlayerMediaItemRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/roles/role-options": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role options",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleOptionsByGroupRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/roles/users/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get users by role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "RoleId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersByRoleRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get roles",
        "parameters": [
          {
            "name": "RoleIds",
            "in": "query",
            "description": "Role ids",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "GroupIds",
            "in": "query",
            "description": "Group ids",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "FrontendIds",
            "in": "query",
            "description": "Frontend ids",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Remark",
            "in": "query",
            "description": "Group remark",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 3,
              "type": "string"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRolesByGroupRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Add role",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRoleReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRoleReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddRoleReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddRoleRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "RoleId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Roles"
        ],
        "summary": "Modify Role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "RoleId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModRoleReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModRoleReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModRoleReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModRoleRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "RoleId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelRoleRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/roles/assign-role": {
      "patch": {
        "tags": [
          "Roles"
        ],
        "summary": "Assign role",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignRoleRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/roles/unassign-role": {
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "UnAssign role",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnAssignRoleReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnAssignRoleReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnAssignRoleReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAssignRoleRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/roles/blank-permissions": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role blank permissions",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleBlankPermissionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/roles/templates/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role templates by group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleTemplatesByGroupRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/servers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Get servers by condition",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Server Name",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServersRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Add new tournaments server",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameId",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Server Name"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Game Id",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddServerRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/servers/{id}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Get tournaments server detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Server Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetServerRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "summary": "Modify tournaments server",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "tournaments server id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameId",
                  "Id",
                  "IsFrozen",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Server Id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "Server Name"
                  },
                  "IsFrozen": {
                    "type": "boolean",
                    "description": "Is Frozen"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Game Id",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "IsFrozen": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModServerRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "summary": "Delete tournaments server",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "tournaments Server Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelServerRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/sitesections/site-sections": {
      "get": {
        "tags": [
          "SiteSections"
        ],
        "summary": "Get Site-Sections",
        "parameters": [
          {
            "name": "Filters.Id",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filters.Name",
            "in": "query",
            "style": "form",
            "schema": {
              "maxLength": 40,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Filters.GameName",
            "in": "query",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Filters.Hidden",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Sorts.Id",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumFieldSort"
            }
          },
          {
            "name": "Sorts.GameName",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumFieldSort"
            }
          },
          {
            "name": "Sorts.Name",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumFieldSort"
            }
          },
          {
            "name": "Sorts.Hidden",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumFieldSort"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSiteSectionsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SiteSections"
        ],
        "summary": "Add Site-Sections",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Hidden",
                  "Name",
                  "Position"
                ],
                "type": "object",
                "properties": {
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string"
                  },
                  "Hidden": {
                    "type": "boolean"
                  },
                  "Position": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "HeaderImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "BackGroundImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "IconImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "LogoImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "GameId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Hidden": {
                  "style": "form"
                },
                "Position": {
                  "style": "form"
                },
                "HeaderImage": {
                  "style": "form"
                },
                "BackGroundImage": {
                  "style": "form"
                },
                "IconImage": {
                  "style": "form"
                },
                "LogoImage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddSiteSectionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/sitesections/site-sections/{id}": {
      "get": {
        "tags": [
          "SiteSections"
        ],
        "summary": "Get Site-Section",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SiteSectionId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSiteSectionRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SiteSections"
        ],
        "summary": "Modify Site-Sections",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SiteSectionId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Id"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string"
                  },
                  "Hidden": {
                    "type": "boolean"
                  },
                  "Position": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "HeaderImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "BackGroundImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "IconImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "LogoImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Hidden": {
                  "style": "form"
                },
                "Position": {
                  "style": "form"
                },
                "HeaderImage": {
                  "style": "form"
                },
                "BackGroundImage": {
                  "style": "form"
                },
                "IconImage": {
                  "style": "form"
                },
                "LogoImage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModSiteSectionsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SiteSections"
        ],
        "summary": "Delete Site-Sections",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SiteSectionId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelSiteSectionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/sponsors": {
      "get": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Get tournaments sponsors by condition",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Sponsor Name",
            "style": "form",
            "schema": {
              "maxLength": 30,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Website",
            "in": "query",
            "description": "Sponsor Url",
            "style": "form",
            "schema": {
              "maxLength": 60,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "Creator",
            "in": "query",
            "description": "Creator",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "UpdatedFrom",
            "in": "query",
            "description": "Last Updated From",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "UpdatedTo",
            "in": "query",
            "description": "Last Updated To",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSponsorsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Add new Tournaments Sponsor",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Description",
                  "Name",
                  "Url"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "Sponsor Name"
                  },
                  "Description": {
                    "maxLength": 3000,
                    "minLength": 0,
                    "type": "string",
                    "description": "Sponsor Description"
                  },
                  "ImageFile": {
                    "type": "string",
                    "description": "Sponsor Logo",
                    "format": "binary"
                  },
                  "Url": {
                    "maxLength": 60,
                    "minLength": 0,
                    "type": "string",
                    "description": "Sponsor website url",
                    "format": "uri"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                },
                "Url": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddSponsorRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/sponsors/{id}": {
      "get": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Get Tournaments Sponsor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sponsors Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSponsorRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Modify Tournaments Sponsor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tournaments Sponsor Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Description",
                  "Id",
                  "Name",
                  "Url"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Sponsor Id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "Sponsor Name"
                  },
                  "Description": {
                    "maxLength": 3000,
                    "minLength": 0,
                    "type": "string",
                    "description": "Sponsor Description"
                  },
                  "ImageFile": {
                    "type": "string",
                    "description": "Sponsor Logo",
                    "format": "binary"
                  },
                  "Url": {
                    "maxLength": 60,
                    "minLength": 0,
                    "type": "string",
                    "description": "Sponsor website url",
                    "format": "uri"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                },
                "Url": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModSponsorRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Delete Tournaments Sponsor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tournaments Sponsor Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelSponsorRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/sponsors/fuzzy": {
      "get": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Get fuzzy sponsors",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "description": "Fuzzy prefix",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 30,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "description": "Max count",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzySponsorsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get teams",
        "parameters": [
          {
            "name": "TeamName",
            "in": "query",
            "description": "TeamName",
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "TeamId",
            "in": "query",
            "description": "Team Id",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PlayerId",
            "in": "query",
            "description": "Player Id",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountryId",
            "in": "query",
            "description": "Country Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UpdatedAtFrom",
            "in": "query",
            "description": "Created at from",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "UpdatedAtTo",
            "in": "query",
            "description": "Created at to",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Add team",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "ExcludeRankings",
                  "GameId",
                  "TeamName",
                  "TeamTag"
                ],
                "type": "object",
                "properties": {
                  "TeamName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  },
                  "TeamTag": {
                    "maxLength": 10,
                    "minLength": 0,
                    "type": "string"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Description": {
                    "maxLength": 5000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "InitialRating": {
                    "maximum": 32767,
                    "minimum": -32768,
                    "type": "integer",
                    "format": "int32"
                  },
                  "ExcludeRankings": {
                    "type": "boolean"
                  },
                  "Facebook": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Twitter": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Youtube": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "TeamName": {
                  "style": "form"
                },
                "TeamTag": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "InitialRating": {
                  "style": "form"
                },
                "ExcludeRankings": {
                  "style": "form"
                },
                "Facebook": {
                  "style": "form"
                },
                "Twitter": {
                  "style": "form"
                },
                "Youtube": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTeamRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{id}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TeamId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Teams"
        ],
        "summary": "Modify team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TeamId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "ExcludedRankings",
                  "GameId",
                  "TeamId",
                  "TeamName",
                  "TeamTag"
                ],
                "type": "object",
                "properties": {
                  "TeamId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "TeamName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  },
                  "TeamTag": {
                    "maxLength": 10,
                    "minLength": 0,
                    "type": "string"
                  },
                  "OwnerId": {
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer",
                    "description": "OwnerId",
                    "format": "int32"
                  },
                  "CaptainId": {
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer",
                    "description": "CaptainId",
                    "format": "int32"
                  },
                  "ManageId": {
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer",
                    "description": "ManageId",
                    "format": "int32"
                  },
                  "ExcludedRankings": {
                    "type": "boolean"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "IsRemoveImage": {
                    "type": "boolean",
                    "description": "if IsRemoveImage = true will remove Image and set ImageFilePath = null"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "Description": {
                    "maxLength": 5000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Facebook": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Twitter": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Youtube": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "TeamId": {
                  "style": "form"
                },
                "TeamName": {
                  "style": "form"
                },
                "TeamTag": {
                  "style": "form"
                },
                "OwnerId": {
                  "style": "form"
                },
                "CaptainId": {
                  "style": "form"
                },
                "ManageId": {
                  "style": "form"
                },
                "ExcludedRankings": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "IsRemoveImage": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Facebook": {
                  "style": "form"
                },
                "Twitter": {
                  "style": "form"
                },
                "Youtube": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModTeamRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teams"
        ],
        "summary": "Delete team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TeamId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelTeamRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{teamid}/team-players": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get team players",
        "parameters": [
          {
            "name": "teamid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamPlayersRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Add team player",
        "parameters": [
          {
            "name": "teamid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTeamPlayerReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTeamPlayerReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddTeamPlayerReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTeamPlayerRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{teamid}/team-players/{teamplayerid}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get team player",
        "parameters": [
          {
            "name": "teamid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamplayerid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamPlayerRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Teams"
        ],
        "summary": "Modify team player",
        "parameters": [
          {
            "name": "teamid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamplayerid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModTeamPlayerReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModTeamPlayerReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModTeamPlayerReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModTeamPlayerRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teams"
        ],
        "summary": "Delete team player",
        "parameters": [
          {
            "name": "teamid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamplayerid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelTeamPlayerRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/fuzzy": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get fuzzy teams",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Game id",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyTeamsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/teams/{teamId}/team-player-options": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get team player options for tournament registrations",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamPlayerOptionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/clear-all-memory-cache": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Clear All Memory Cache",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/tools/convert-tournament-data": {
      "patch": {
        "tags": [
          "Tools"
        ],
        "summary": "Convert tournament data",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v4/tournaments/fuzzy": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get fuzzy tournaments",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 80,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyTournamentsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/broadcast-talents": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournament broadcast talents",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParentBroadcastTalentsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Add parent tournament broadcast talent",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddParentBroadcastTalentsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddParentBroadcastTalentsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddParentBroadcastTalentsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/broadcast-talents/{broadcastTalentId}": {
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete parent tournament broadcast talents",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "broadcastTalentId",
            "in": "path",
            "description": "Broadcast talent id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentid}/stages/{stageid}/children": {
      "post": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Add child tournament",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stageid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "IsHidden",
                  "IsLan",
                  "Name",
                  "PrizePoolStatus",
                  "RankingImportance",
                  "Type"
                ],
                "type": "object",
                "properties": {
                  "Type": {
                    "$ref": "#/components/schemas/EnumChildTournament"
                  },
                  "Name": {
                    "maxLength": 80,
                    "minLength": 0,
                    "type": "string",
                    "description": "Child tournament name"
                  },
                  "StartAt": {
                    "type": "integer",
                    "description": "Starting At",
                    "format": "int64"
                  },
                  "IsHidden": {
                    "type": "boolean",
                    "description": "IsHidden"
                  },
                  "IsLan": {
                    "type": "boolean",
                    "description": "IsLan"
                  },
                  "VenueId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "ValueId",
                    "format": "int32"
                  },
                  "QualifyParticipants": {
                    "maximum": 32767,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Qualify Participants",
                    "format": "int32"
                  },
                  "RankingImportance": {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number",
                    "description": "Ranking Importance",
                    "format": "double"
                  },
                  "PrizePoolStatus": {
                    "$ref": "#/components/schemas/EnumPrizePoolStatus"
                  },
                  "PrizePoolCurrency": {
                    "$ref": "#/components/schemas/EnumCurrency"
                  },
                  "PrizePool": {
                    "maximum": 79228162514264337593543950335,
                    "minimum": 0.01,
                    "type": "number",
                    "description": "PrizePool",
                    "format": "double"
                  },
                  "ExchangeRate": {
                    "maximum": 100000,
                    "minimum": 0.001,
                    "type": "number",
                    "description": "Exchange Rate",
                    "format": "double"
                  },
                  "PrizePoolUsd": {
                    "maximum": 79228162514264337593543950335,
                    "minimum": 0.01,
                    "type": "number",
                    "description": "PrizePool Usd",
                    "format": "double"
                  },
                  "GridId": {
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Grid Id",
                    "format": "int32"
                  },
                  "Rounds": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Rounds",
                    "format": "int32"
                  },
                  "PointsAwarded": {
                    "$ref": "#/components/schemas/EnumPointsAwarded"
                  },
                  "PointsWin": {
                    "maximum": 32767,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Points for win",
                    "format": "int32"
                  },
                  "PointsDraw": {
                    "maximum": 32767,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Points for draw",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Type": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "StartAt": {
                  "style": "form"
                },
                "IsHidden": {
                  "style": "form"
                },
                "IsLan": {
                  "style": "form"
                },
                "VenueId": {
                  "style": "form"
                },
                "QualifyParticipants": {
                  "style": "form"
                },
                "RankingImportance": {
                  "style": "form"
                },
                "PrizePoolStatus": {
                  "style": "form"
                },
                "PrizePoolCurrency": {
                  "style": "form"
                },
                "PrizePool": {
                  "style": "form"
                },
                "ExchangeRate": {
                  "style": "form"
                },
                "PrizePoolUsd": {
                  "style": "form"
                },
                "GridId": {
                  "style": "form"
                },
                "Rounds": {
                  "style": "form"
                },
                "PointsAwarded": {
                  "style": "form"
                },
                "PointsWin": {
                  "style": "form"
                },
                "PointsDraw": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddChildRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentid}/children/{childid}": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child tournament for edit",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChildTournamentRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Modify child tournament",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "IsHidden",
                  "IsLan",
                  "Name",
                  "PrizePoolStatus",
                  "RankingImportance"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 80,
                    "minLength": 0,
                    "type": "string",
                    "description": "Child tournament name"
                  },
                  "StartAt": {
                    "type": "integer",
                    "description": "Starting At",
                    "format": "int64"
                  },
                  "IsHidden": {
                    "type": "boolean",
                    "description": "IsHidden"
                  },
                  "IsLan": {
                    "type": "boolean",
                    "description": "IsLan"
                  },
                  "VenueId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "ValueId",
                    "format": "int32"
                  },
                  "QualifyParticipants": {
                    "maximum": 32767,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Qualify Participants",
                    "format": "int32"
                  },
                  "RankingImportance": {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number",
                    "description": "Ranking Importance",
                    "format": "double"
                  },
                  "PrizePoolStatus": {
                    "$ref": "#/components/schemas/EnumPrizePoolStatus"
                  },
                  "PrizePoolCurrency": {
                    "$ref": "#/components/schemas/EnumCurrency"
                  },
                  "PrizePool": {
                    "maximum": 79228162514264337593543950335,
                    "minimum": 0.01,
                    "type": "number",
                    "description": "PrizePool",
                    "format": "double"
                  },
                  "ExchangeRate": {
                    "maximum": 100000,
                    "minimum": 0.001,
                    "type": "number",
                    "description": "Exchange Rate",
                    "format": "double"
                  },
                  "PrizePoolUsd": {
                    "maximum": 79228162514264337593543950335,
                    "minimum": 0.01,
                    "type": "number",
                    "description": "PrizePool Usd",
                    "format": "double"
                  },
                  "GridId": {
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Grid Id",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "StartAt": {
                  "style": "form"
                },
                "IsHidden": {
                  "style": "form"
                },
                "IsLan": {
                  "style": "form"
                },
                "VenueId": {
                  "style": "form"
                },
                "QualifyParticipants": {
                  "style": "form"
                },
                "RankingImportance": {
                  "style": "form"
                },
                "PrizePoolStatus": {
                  "style": "form"
                },
                "PrizePoolCurrency": {
                  "style": "form"
                },
                "PrizePool": {
                  "style": "form"
                },
                "ExchangeRate": {
                  "style": "form"
                },
                "PrizePoolUsd": {
                  "style": "form"
                },
                "GridId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModChildRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete child tournaments",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelChildReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DelChildReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DelChildReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelChildRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentid}/children/{childid}/detail": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child tournament for detail",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChildDetailRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentid}/children/{childid}/start-tournament": {
      "patch": {
        "tags": [
          "Tournaments"
        ],
        "summary": "start child tournament",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartTournamentRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/data-providers/grid/tournaments": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get grid tournaments",
        "parameters": [
          {
            "name": "GameId",
            "in": "query",
            "description": "Game Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Date from",
            "required": true,
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Date to",
            "required": true,
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGridTournamentsRespListApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/data-providers/grid/matches": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get grid matches",
        "parameters": [
          {
            "name": "ChildTournamentId",
            "in": "query",
            "description": "Game Id",
            "required": true,
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Date from",
            "required": true,
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Date to",
            "required": true,
            "style": "form",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGridMatchesRespListApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentid}/children/{childid}/media-items": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child tournament Media items",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChildMediaItemsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Add child tournament new Media items",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MediaItems",
            "in": "query",
            "description": "Media item Ids",
            "required": true,
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddChildMediaItemRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentid}/children/{childid}/media-items/{mediaitemid}": {
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete child tournament Media item",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mediaitemid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelChildMediaItemRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/game-accounts": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get GameAccounts",
        "parameters": [
          {
            "name": "PlayerId",
            "in": "query",
            "description": "PlayerId",
            "required": true,
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGameAccountsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Add GameAccount",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "GameAccountName",
                  "GameId",
                  "PlayerId"
                ],
                "type": "object",
                "properties": {
                  "PlayerId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "PlayerId",
                    "format": "int32"
                  },
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "GameId",
                    "format": "int32"
                  },
                  "ServerId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Server Id",
                    "format": "int32"
                  },
                  "GameAccountName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "GameAccount Name"
                  }
                }
              },
              "encoding": {
                "PlayerId": {
                  "style": "form"
                },
                "GameId": {
                  "style": "form"
                },
                "ServerId": {
                  "style": "form"
                },
                "GameAccountName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddGameAccountRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/game-accounts/{id}": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get GameAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GameAccountId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGameAccountRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Modify GameAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PlayerId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameAccountReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameAccountReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModGameAccountReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModGameAccountRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete GameAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GameAccountId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelGameAccountRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentid}/children/{childid}/opponents": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child tournament opponents",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOpponentsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Modify child tournament opponents",
        "parameters": [
          {
            "name": "parentid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Opponents": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ModOpponentsItem"
                    }
                  }
                }
              },
              "encoding": {
                "Opponents": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModOpponentsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/child-types": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "get child tournament types by parent tournament",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int16ItemListApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournaments",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Parent tournament name",
            "style": "form",
            "schema": {
              "maxLength": 80,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "GameId",
            "in": "query",
            "description": "Game id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FrontendId",
            "in": "query",
            "description": "Frontend id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsHidden",
            "in": "query",
            "description": "Is hidden",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsLan",
            "in": "query",
            "description": "Is lan",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "VenueCountryId",
            "in": "query",
            "description": "Venue country id",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "VenueId",
            "in": "query",
            "description": "Venue id",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParentId",
            "in": "query",
            "description": "Parent tournament id",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CreatedFrom",
            "in": "query",
            "description": "Created from",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CreatedTo",
            "in": "query",
            "description": "Created to",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "StartingFrom",
            "in": "query",
            "description": "Starting from",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "StartingTo",
            "in": "query",
            "description": "Starting to",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CreatedUserId",
            "in": "query",
            "description": "Created user id",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MapId",
            "in": "query",
            "description": "Map id",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SponsorId",
            "in": "query",
            "description": "Sponsor id",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "State",
            "in": "query",
            "description": "State\r\nLive = 1\r\nUpcoming = 2\r\nCompleted = 3\r\nCanceled = 4\r\nFeatured = 5",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/EnumParentTournamentState"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParentsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Add parent tournament",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Description",
                  "GameId",
                  "IsFeatured",
                  "IsHidden",
                  "IsLan",
                  "IsPlayerBased",
                  "MapIds",
                  "Name",
                  "SponsorIds",
                  "StartingAt",
                  "TeamSize"
                ],
                "type": "object",
                "properties": {
                  "GameId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Game id",
                    "format": "int32"
                  },
                  "FrontendId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Frontend id",
                    "format": "int32"
                  },
                  "TeamSize": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Team size",
                    "format": "int32"
                  },
                  "IsPlayerBased": {
                    "type": "boolean",
                    "description": "Is player based"
                  },
                  "IsFeatured": {
                    "type": "boolean",
                    "description": "Is featured"
                  },
                  "IsHidden": {
                    "type": "boolean",
                    "description": "Is hidden"
                  },
                  "StartingAt": {
                    "minimum": 0,
                    "type": "integer",
                    "description": "Start at",
                    "format": "int64"
                  },
                  "IsLan": {
                    "type": "boolean",
                    "description": "Is lan"
                  },
                  "VenueId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Venue id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 80,
                    "minLength": 1,
                    "type": "string",
                    "description": "Tournament name"
                  },
                  "Description": {
                    "maxLength": 4096,
                    "minLength": 1,
                    "type": "string",
                    "description": "Description"
                  },
                  "SponsorIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Sponsor ids"
                  },
                  "MapIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Map ids"
                  },
                  "ImageFile": {
                    "type": "string",
                    "description": "Image file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "GameId": {
                  "style": "form"
                },
                "FrontendId": {
                  "style": "form"
                },
                "TeamSize": {
                  "style": "form"
                },
                "IsPlayerBased": {
                  "style": "form"
                },
                "IsFeatured": {
                  "style": "form"
                },
                "IsHidden": {
                  "style": "form"
                },
                "StartingAt": {
                  "style": "form"
                },
                "IsLan": {
                  "style": "form"
                },
                "VenueId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "SponsorIds": {
                  "style": "form"
                },
                "MapIds": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddParentRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournament for edit",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParentRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Modify parent tournament",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Description",
                  "IsFeatured",
                  "IsHidden",
                  "IsLan",
                  "MapIds",
                  "Name",
                  "ParentId",
                  "SponsorIds",
                  "StartingAt"
                ],
                "type": "object",
                "properties": {
                  "ParentId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Parent tournament id",
                    "format": "int32"
                  },
                  "FrontendId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Frontend id\r\nnull: ALL",
                    "format": "int32"
                  },
                  "IsFeatured": {
                    "type": "boolean",
                    "description": "Is featured"
                  },
                  "IsHidden": {
                    "type": "boolean",
                    "description": "Is hidden"
                  },
                  "StartingAt": {
                    "minimum": 0,
                    "type": "integer",
                    "description": "Start at",
                    "format": "int64"
                  },
                  "IsLan": {
                    "type": "boolean",
                    "description": "Is lan"
                  },
                  "VenueId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Venue id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 80,
                    "minLength": 1,
                    "type": "string",
                    "description": "Parent tournament name"
                  },
                  "Description": {
                    "maxLength": 4096,
                    "minLength": 1,
                    "type": "string",
                    "description": "Description"
                  },
                  "SponsorIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Sponsor ids\r\n[] is clear all"
                  },
                  "MapIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": "Map ids\r\n[] is clear all"
                  },
                  "ImageFile": {
                    "type": "string",
                    "description": "Image file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "ParentId": {
                  "style": "form"
                },
                "FrontendId": {
                  "style": "form"
                },
                "IsFeatured": {
                  "style": "form"
                },
                "IsHidden": {
                  "style": "form"
                },
                "StartingAt": {
                  "style": "form"
                },
                "IsLan": {
                  "style": "form"
                },
                "VenueId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "SponsorIds": {
                  "style": "form"
                },
                "MapIds": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModParentRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete parent tournaments",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteParentReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteParentReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteParentReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteParentRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/detail": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent tournament for detail",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParentDetailRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/children/{childId}/team-registrations": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child team registrations",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildRegistrationTeamListItemGetChildRegistrationsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Add child team registrations",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddChildTeamRegistrationsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddChildTeamRegistrationsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddChildTeamRegistrationsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/children/{childId}/team-registrations/{registerId}": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child team registration",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "registerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChildTeamRegistrationRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Modify child team registration",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "registerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildTeamRegistrationReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildTeamRegistrationReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildTeamRegistrationReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete child team registration",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "registerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/children/{childId}/player-registrations": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get child player registrations",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildRegistrationTeamListItemGetChildRegistrationsRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Add child player registrations",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddChildPlayerRegistrationsReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddChildPlayerRegistrationsReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddChildPlayerRegistrationsReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/children/{childId}/player-registrations/{registerId}": {
      "patch": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Modify child player registration",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "registerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildPlayerRegistrationReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildPlayerRegistrationReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModChildPlayerRegistrationReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete child player registration",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "registerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/stages": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent stages",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParentStagesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Modify parent stages",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModParentStagesReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModParentStagesReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModParentStagesReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/stages-for-edit": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get parent stages for edit",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParentStagesForEditRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/tournaments/parents/{parentId}/stages/{stageId}": {
      "patch": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Modify parent stage",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModParentStageReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModParentStageReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModParentStageReq"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete parent stage",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users",
        "parameters": [
          {
            "name": "UserName",
            "in": "query",
            "description": "Username",
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "description": "User id",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Email",
            "style": "form",
            "schema": {
              "maxLength": 60,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add User",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Email",
                  "Password",
                  "Username"
                ],
                "type": "object",
                "properties": {
                  "Username": {
                    "maxLength": 20,
                    "minLength": 1,
                    "type": "string",
                    "description": "Username"
                  },
                  "Email": {
                    "maxLength": 60,
                    "minLength": 1,
                    "type": "string",
                    "description": "Email"
                  },
                  "Password": {
                    "maxLength": 72,
                    "minLength": 8,
                    "type": "string",
                    "description": "Password"
                  },
                  "LastName": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Lastname"
                  },
                  "FirstName": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Firstname"
                  },
                  "Gender": {
                    "$ref": "#/components/schemas/EnumGender"
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "description": "Date of birth",
                    "format": "date"
                  },
                  "City": {
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string",
                    "description": "City"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Country id",
                    "format": "int32"
                  },
                  "AboutMe": {
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string",
                    "description": "About me"
                  },
                  "AvatarImage": {
                    "type": "string",
                    "description": "Avatar image",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Username": {
                  "style": "form"
                },
                "Email": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                },
                "LastName": {
                  "style": "form"
                },
                "FirstName": {
                  "style": "form"
                },
                "Gender": {
                  "style": "form"
                },
                "DateOfBirth": {
                  "style": "form"
                },
                "City": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "AboutMe": {
                  "style": "form"
                },
                "AvatarImage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUserRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Modify user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "UserId"
                ],
                "type": "object",
                "properties": {
                  "UserId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "User id",
                    "format": "int32"
                  },
                  "Username": {
                    "maxLength": 20,
                    "minLength": 1,
                    "type": "string",
                    "description": "Username"
                  },
                  "Email": {
                    "maxLength": 60,
                    "minLength": 1,
                    "type": "string",
                    "description": "Email",
                    "format": "email"
                  },
                  "Password": {
                    "maxLength": 72,
                    "minLength": 8,
                    "type": "string",
                    "description": "Password"
                  },
                  "LastName": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Lastname"
                  },
                  "FirstName": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Firstname"
                  },
                  "Gender": {
                    "$ref": "#/components/schemas/EnumGender"
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "description": "Date of birth",
                    "format": "date"
                  },
                  "City": {
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string",
                    "description": "City"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Country id",
                    "format": "int32"
                  },
                  "AboutMe": {
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string",
                    "description": "About me"
                  },
                  "AvatarImage": {
                    "type": "string",
                    "description": "Avatar image",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "UserId": {
                  "style": "form"
                },
                "Username": {
                  "style": "form"
                },
                "Email": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                },
                "LastName": {
                  "style": "form"
                },
                "FirstName": {
                  "style": "form"
                },
                "Gender": {
                  "style": "form"
                },
                "DateOfBirth": {
                  "style": "form"
                },
                "City": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "AboutMe": {
                  "style": "form"
                },
                "AvatarImage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModUserRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelUserRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/users/{id}/permissions": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User permissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserPermissionsRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/users/fuzzy": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get fuzzy users",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyUsersRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/usersession": {
      "get": {
        "tags": [
          "UserSession"
        ],
        "summary": "Get user menu and userprofile",
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserSessionRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/venues": {
      "get": {
        "tags": [
          "Venues"
        ],
        "summary": "Get venues by condition",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Venues Name",
            "style": "form",
            "schema": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "CountryId",
            "in": "query",
            "description": "Venues Country Id",
            "style": "form",
            "schema": {
              "maximum": 32767,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNo",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVenuesRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Venues"
        ],
        "summary": "Add new tournaments venue",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "City",
                  "CountryId",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Venues Name"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Venues Country Id",
                    "format": "int32"
                  },
                  "City": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Venues City"
                  },
                  "Address": {
                    "maxLength": 1000,
                    "minLength": 0,
                    "type": "string",
                    "description": "Venues Address"
                  },
                  "Coordinates": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "Venues Coordinates"
                  },
                  "ImageFile": {
                    "type": "string",
                    "description": "Image file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "City": {
                  "style": "form"
                },
                "Address": {
                  "style": "form"
                },
                "Coordinates": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVenueRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/venues/{id}": {
      "get": {
        "tags": [
          "Venues"
        ],
        "summary": "Get tournaments venue detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "venue Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVenueRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Venues"
        ],
        "summary": "Modify tournaments venue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "tournaments venue Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "City",
                  "CountryId",
                  "Id",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Venue Id",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Venues Name"
                  },
                  "CountryId": {
                    "maximum": 32767,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Venues Country Id",
                    "format": "int32"
                  },
                  "City": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Venues City"
                  },
                  "Address": {
                    "maxLength": 1000,
                    "minLength": 0,
                    "type": "string",
                    "description": "Venues Address"
                  },
                  "Coordinates": {
                    "maxLength": 255,
                    "minLength": 0,
                    "type": "string",
                    "description": "Venues Coordinates"
                  },
                  "ImageFile": {
                    "type": "string",
                    "description": "Image file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "CountryId": {
                  "style": "form"
                },
                "City": {
                  "style": "form"
                },
                "Address": {
                  "style": "form"
                },
                "Coordinates": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModVenueRespApiRespBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Venues"
        ],
        "summary": "Delete tournaments venue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "tournaments venue Id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelVenueRespApiRespBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v4/venues/fuzzy": {
      "get": {
        "tags": [
          "Venues"
        ],
        "summary": "Get fuzzy venue",
        "parameters": [
          {
            "name": "FuzzyPrefix",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "maxLength": 30,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "MaxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 10,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFuzzyVenuesRespApiRespBase"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddArticleResp": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "integer",
            "description": "Article id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddArticleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddArticleResp"
          }
        },
        "additionalProperties": false
      },
      "AddBroadcastTalentResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddBroadcastTalentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddBroadcastTalentResp"
          }
        },
        "additionalProperties": false
      },
      "AddChildMediaItemResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddChildMediaItemRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddChildMediaItemResp"
          }
        },
        "additionalProperties": false
      },
      "AddChildPlayerRegistrationsReq": {
        "required": [
          "registrations"
        ],
        "type": "object",
        "properties": {
          "registrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildPlayerRegistration"
            },
            "description": "Registrations"
          }
        },
        "additionalProperties": false
      },
      "AddChildResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddChildRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddChildResp"
          }
        },
        "additionalProperties": false
      },
      "AddChildTeamRegistrationsReq": {
        "required": [
          "registrations"
        ],
        "type": "object",
        "properties": {
          "registrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildTeamRegistration"
            },
            "description": "Registrations"
          }
        },
        "additionalProperties": false
      },
      "AddFileResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddFileRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddFileResp"
          }
        },
        "additionalProperties": false
      },
      "AddFolderResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddFolderRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddFolderResp"
          }
        },
        "additionalProperties": false
      },
      "AddFrontendSiteSectionsReq": {
        "type": "object",
        "properties": {
          "newSiteSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrontendSiteSection"
            },
            "description": "New site sections",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddFrontendSiteSectionsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddFrontendSiteSectionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddFrontendSiteSectionsResp"
          }
        },
        "additionalProperties": false
      },
      "AddFuncResp": {
        "type": "object",
        "properties": {
          "funcId": {
            "type": "integer",
            "description": "Backoffice func id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddFuncRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddFuncResp"
          }
        },
        "additionalProperties": false
      },
      "AddGameAccountResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddGameAccountRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddGameAccountResp"
          }
        },
        "additionalProperties": false
      },
      "AddGameRegionReq": {
        "required": [
          "countryIds",
          "gameId",
          "regionName"
        ],
        "type": "object",
        "properties": {
          "regionName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Region name"
          },
          "gameId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Game id",
            "format": "int32"
          },
          "countryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Country Ids"
          }
        },
        "additionalProperties": false
      },
      "AddGameRegionResp": {
        "required": [
          "regionId"
        ],
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "description": "Region id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddGameRegionRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddGameRegionResp"
          }
        },
        "additionalProperties": false
      },
      "AddGameResp": {
        "type": "object",
        "properties": {
          "gameId": {
            "type": "integer",
            "description": "Game id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddGameRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddGameResp"
          }
        },
        "additionalProperties": false
      },
      "AddGroupReq": {
        "required": [
          "name",
          "saveAsTemplate"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "User group name"
          },
          "remark": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Remark",
            "nullable": true
          },
          "frontendIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Frontend ids",
            "nullable": true
          },
          "backofficeFuncIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Backoffice func ids",
            "nullable": true
          },
          "saveAsTemplate": {
            "type": "boolean",
            "description": "Save as template"
          }
        },
        "additionalProperties": false
      },
      "AddGroupResp": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "description": "Group id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddGroupResp"
          }
        },
        "additionalProperties": false
      },
      "AddHeroResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddHeroRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddHeroResp"
          }
        },
        "additionalProperties": false
      },
      "AddMapResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddMapRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddMapResp"
          }
        },
        "additionalProperties": false
      },
      "AddMediaItemsReq": {
        "required": [
          "broadcastTalentId",
          "mediaItems"
        ],
        "type": "object",
        "properties": {
          "broadcastTalentId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Broadcast Talent Id",
            "format": "int32"
          },
          "mediaItems": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Media item Ids"
          }
        },
        "additionalProperties": false
      },
      "AddMediaItemsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddMediaItemsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddMediaItemsResp"
          }
        },
        "additionalProperties": false
      },
      "AddMediaVodReq": {
        "required": [
          "hostId",
          "hostVideoId",
          "isFeatured",
          "isInGame",
          "siteSectionIds",
          "startTime",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "Vod title"
          },
          "siteSectionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Site section ids"
          },
          "hostId": {
            "maximum": 32767,
            "minimum": 0,
            "type": "integer",
            "description": "Host id",
            "format": "int32"
          },
          "hostVideoId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Host video id"
          },
          "startTime": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Start time",
            "format": "int32"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags",
            "nullable": true
          },
          "isInGame": {
            "type": "boolean",
            "description": "Is in game"
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Is featured"
          },
          "playerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Related players",
            "nullable": true
          },
          "teamIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Related teams",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddMediaVodResp": {
        "required": [
          "vodId"
        ],
        "type": "object",
        "properties": {
          "vodId": {
            "type": "integer",
            "description": "Vod id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddMediaVodRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddMediaVodResp"
          }
        },
        "additionalProperties": false
      },
      "AddModeReq": {
        "required": [
          "gameId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Game Map Name"
          },
          "abbreviation": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Modes Abbreviation",
            "nullable": true
          },
          "gameId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Map Game Id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddModeResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddModeRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddModeResp"
          }
        },
        "additionalProperties": false
      },
      "AddNotificationTemplateReq": {
        "required": [
          "frontEndId",
          "messagingNotificationTypeId",
          "webBody",
          "webTitle"
        ],
        "type": "object",
        "properties": {
          "frontEndId": {
            "type": "integer",
            "format": "int32"
          },
          "messagingNotificationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "webTitle": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "webBody": {
            "maxLength": 2147483647,
            "minLength": 0,
            "type": "string"
          },
          "pushTitle": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "pushBody": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailSubject": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailTextBody": {
            "maxLength": 2147483647,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailHtmlBody": {
            "maxLength": 2147483647,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddNotificationTemplateResp": {
        "type": "object",
        "properties": {
          "notificationTemplateId": {
            "type": "integer",
            "description": "Notification Template Id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddNotificationTemplateRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddNotificationTemplateResp"
          }
        },
        "additionalProperties": false
      },
      "AddOneSignalAppReq": {
        "required": [
          "apiKey",
          "appId",
          "safariWebId"
        ],
        "type": "object",
        "properties": {
          "appId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "App Id"
          },
          "apiKey": {
            "maxLength": 48,
            "minLength": 0,
            "type": "string",
            "description": "Api Key"
          },
          "safariWebId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Safari Web Id"
          },
          "playerMatchStartingNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Player Match Starting Notification Android Channel Id",
            "nullable": true
          },
          "teamMatchStartingNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Team Match Starting Notification Android Channel Id",
            "nullable": true
          },
          "playerArticleNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Player Article Notification Android Channel Id",
            "nullable": true
          },
          "teamArticleNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Team Article Notification Android Channel Id",
            "nullable": true
          },
          "playerMatchResultedNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Player Match Resulted Notification Android Channel Id",
            "nullable": true
          },
          "teamMatchResultedNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Team Match Resulted Notification Android Channel Id",
            "nullable": true
          },
          "teamTransferNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Team Transfer Notification Android Channel Id",
            "nullable": true
          },
          "playerTransferNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Player Transfer Notification Android Channel Id",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddOneSignalAppResp": {
        "type": "object",
        "properties": {
          "oneSignalAppId": {
            "type": "integer",
            "description": "One Signal App Id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddOneSignalAppRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddOneSignalAppResp"
          }
        },
        "additionalProperties": false
      },
      "AddPageReq": {
        "required": [
          "content",
          "frontendId",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "content": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Content"
          },
          "frontendId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "extraCss": {
            "maxLength": 2147483647,
            "minLength": 0,
            "type": "string",
            "description": "Extra css",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddPageResp": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "integer",
            "description": "Page id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddPageRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddPageResp"
          }
        },
        "additionalProperties": false
      },
      "AddParentBroadcastTalentsReq": {
        "type": "object",
        "properties": {
          "broadcastTalentId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Broadcast talent id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddParentResp": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddParentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddParentResp"
          }
        },
        "additionalProperties": false
      },
      "AddPlayerMediaItemResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddPlayerMediaItemRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddPlayerMediaItemResp"
          }
        },
        "additionalProperties": false
      },
      "AddPlayerResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddPlayerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddPlayerResp"
          }
        },
        "additionalProperties": false
      },
      "AddRoleReq": {
        "required": [
          "groupId",
          "name",
          "saveAsTemplate"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "description": "Group Id",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Role name"
          },
          "remark": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Remark",
            "nullable": true
          },
          "funcIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Func Ids",
            "nullable": true
          },
          "frontendIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Frontend Ids",
            "nullable": true
          },
          "saveAsTemplate": {
            "type": "boolean",
            "description": "Save as template"
          }
        },
        "additionalProperties": false
      },
      "AddRoleResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddRoleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddRoleResp"
          }
        },
        "additionalProperties": false
      },
      "AddServerResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddServerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddServerResp"
          }
        },
        "additionalProperties": false
      },
      "AddSideResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddSideRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddSideResp"
          }
        },
        "additionalProperties": false
      },
      "AddSiteSectionsResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddSiteSectionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddSiteSectionsResp"
          }
        },
        "additionalProperties": false
      },
      "AddSponsorResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddSponsorRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddSponsorResp"
          }
        },
        "additionalProperties": false
      },
      "AddStreamResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddStreamRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddStreamResp"
          }
        },
        "additionalProperties": false
      },
      "AddTeamPlayerReq": {
        "type": "object",
        "properties": {
          "playerId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Player Id",
            "format": "int32"
          },
          "joinedAt": {
            "minimum": 0,
            "type": "integer",
            "description": "Joined At",
            "format": "int64"
          },
          "isHidden": {
            "type": "boolean",
            "description": "IsHidden"
          }
        },
        "additionalProperties": false
      },
      "AddTeamPlayerResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddTeamPlayerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddTeamPlayerResp"
          }
        },
        "additionalProperties": false
      },
      "AddTeamResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddTeamRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddTeamResp"
          }
        },
        "additionalProperties": false
      },
      "AddUserResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddUserRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddUserResp"
          }
        },
        "additionalProperties": false
      },
      "AddVenueResp": {
        "type": "object",
        "additionalProperties": false
      },
      "AddVenueRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AddVenueResp"
          }
        },
        "additionalProperties": false
      },
      "ApiLogDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "scheme": {
            "type": "string",
            "nullable": true
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "serverName": {
            "type": "string",
            "nullable": true
          },
          "requestHeaders": {
            "type": "string",
            "nullable": true
          },
          "requestContent": {
            "type": "string",
            "nullable": true
          },
          "responseHeaders": {
            "type": "string",
            "nullable": true
          },
          "responseContent": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "integer",
            "format": "int32"
          },
          "executeTimeMs": {
            "type": "integer",
            "format": "int32"
          },
          "recordedAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ApiLogListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "traceId": {
            "type": "string",
            "description": "Trace Id",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "description": "Ip Address",
            "nullable": true
          },
          "scheme": {
            "type": "string",
            "description": "Scheme",
            "nullable": true
          },
          "host": {
            "type": "string",
            "description": "Host",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Path",
            "nullable": true
          },
          "method": {
            "type": "string",
            "description": "Method",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "description": "Prefix",
            "nullable": true
          },
          "serverName": {
            "type": "string",
            "description": "Server Name",
            "nullable": true
          },
          "responseCode": {
            "type": "integer",
            "description": "Response Status Code",
            "format": "int32"
          },
          "responseLen": {
            "type": "integer",
            "description": "Response Length",
            "format": "int32"
          },
          "executeTimeMs": {
            "type": "integer",
            "description": "Execute Time MilliSeconds",
            "format": "int32"
          },
          "recordedAt": {
            "type": "integer",
            "description": "Record at",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ArticleDetail": {
        "required": [
          "content",
          "frontendId",
          "id",
          "isFeatured",
          "isProofread",
          "isPublished",
          "isSticky",
          "localeId",
          "subTypeId",
          "teaser",
          "timeSpent",
          "timeSpentProofreading",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Article Id",
            "format": "int32"
          },
          "subTypeId": {
            "type": "integer",
            "description": "Article subtype id",
            "format": "int32"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "redirectUrl": {
            "type": "string",
            "description": "Redirect url",
            "nullable": true
          },
          "teaser": {
            "minLength": 1,
            "type": "string",
            "description": "Teaser"
          },
          "content": {
            "minLength": 1,
            "type": "string",
            "description": "Content"
          },
          "frontendId": {
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "localeId": {
            "type": "integer",
            "description": "Local id",
            "format": "int32"
          },
          "siteSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteSection"
            },
            "description": "Site sections",
            "nullable": true
          },
          "headlineImagePath": {
            "type": "string",
            "description": "Headline image url",
            "nullable": true
          },
          "headlineImageText": {
            "type": "string",
            "description": "Headline image text",
            "nullable": true
          },
          "squareHeadlineImageUrl": {
            "type": "string",
            "description": "Square image url",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean",
            "description": "Is published"
          },
          "publishedAt": {
            "type": "integer",
            "description": "Published At",
            "format": "int64",
            "nullable": true
          },
          "isSticky": {
            "type": "boolean",
            "description": "Is sticky"
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Is featured"
          },
          "timeSpent": {
            "type": "integer",
            "description": "Time spent",
            "format": "int32"
          },
          "isProofread": {
            "type": "boolean",
            "description": "Proofread state"
          },
          "timeSpentProofreading": {
            "type": "integer",
            "description": "Time spent for proofreading article",
            "format": "int32"
          },
          "proofreadAt": {
            "type": "integer",
            "description": "Proofread datetime",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArticleListItem": {
        "required": [
          "author",
          "createdAt",
          "feName",
          "id",
          "isProofread",
          "isPublished",
          "title",
          "type",
          "typeName",
          "views"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Article id",
            "format": "int32"
          },
          "feName": {
            "minLength": 1,
            "type": "string",
            "description": "Frontend Name"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "Article title"
          },
          "url": {
            "type": "string",
            "description": "Article url",
            "nullable": true
          },
          "isPublished": {
            "type": "boolean",
            "description": "Published state"
          },
          "isProofread": {
            "type": "boolean",
            "description": "Proofread state"
          },
          "author": {
            "minLength": 1,
            "type": "string",
            "description": "Author"
          },
          "createdAt": {
            "type": "integer",
            "description": "Created At",
            "format": "int64"
          },
          "updater": {
            "type": "string",
            "description": "Updater",
            "nullable": true
          },
          "updateAt": {
            "type": "integer",
            "description": "Update At",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/EnumArticleType"
          },
          "typeName": {
            "minLength": 1,
            "type": "string",
            "description": "Article Type Name",
            "readOnly": true
          },
          "views": {
            "type": "integer",
            "description": "View counts",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssignGroupReq": {
        "required": [
          "groupId",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "description": "Group id",
            "format": "int32"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Add user ids"
          }
        },
        "additionalProperties": false
      },
      "AssignGroupResp": {
        "type": "object",
        "properties": {
          "addUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "description": "Add users",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AssignGroupResp"
          }
        },
        "additionalProperties": false
      },
      "AssignRoleReq": {
        "required": [
          "roleId",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "description": "Role id",
            "format": "int32"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Add user ids"
          }
        },
        "additionalProperties": false
      },
      "AssignRoleResp": {
        "type": "object",
        "properties": {
          "addUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "description": "Assign users",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignRoleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AssignRoleResp"
          }
        },
        "additionalProperties": false
      },
      "BroadcastTalentCountry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "flagImageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BroadcastTalentGame": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BroadcastTalentLanguage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BroadcastTalentPlayer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BroadcastTalentStream": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ByteItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChildEarningListItem": {
        "type": "object",
        "properties": {
          "childId": {
            "type": "integer",
            "description": "Child tournament id",
            "format": "int32"
          },
          "childName": {
            "type": "string",
            "description": "Child tournament name",
            "nullable": true
          },
          "prizePoolStatus": {
            "$ref": "#/components/schemas/EnumPrizePoolStatus"
          },
          "prizePoolCurrency": {
            "$ref": "#/components/schemas/EnumCurrency"
          },
          "prizePoolCurrencyName": {
            "type": "string",
            "description": "Prize pool currency name",
            "nullable": true,
            "readOnly": true
          },
          "prizePool": {
            "type": "number",
            "description": "Prize pool",
            "format": "double",
            "nullable": true
          },
          "prizePoolUsd": {
            "type": "number",
            "description": "Prize pool usd",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChildPlayerRegistration": {
        "required": [
          "isReserved",
          "playerId"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Player id",
            "format": "int32"
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is reserved"
          }
        },
        "additionalProperties": false
      },
      "ChildRegistrationTeamListItem": {
        "type": "object",
        "properties": {
          "registerId": {
            "type": "integer",
            "description": "Register id",
            "format": "int32"
          },
          "teamName": {
            "type": "string",
            "description": "Team name",
            "nullable": true
          },
          "teamTag": {
            "type": "string",
            "description": "Team tag",
            "nullable": true
          },
          "playerNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Player names",
            "nullable": true
          },
          "hasOpp": {
            "type": "boolean",
            "description": "Has opp"
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is reserved"
          },
          "registeredAt": {
            "type": "integer",
            "description": "Registered at",
            "format": "int64"
          },
          "canUnregister": {
            "type": "boolean",
            "description": "Can register"
          }
        },
        "additionalProperties": false
      },
      "ChildRegistrationTeamListItemGetChildRegistrationsResp": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "childId": {
            "type": "integer",
            "description": "Child id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent name",
            "nullable": true
          },
          "stageName": {
            "type": "string",
            "description": "Stage name",
            "nullable": true
          },
          "childName": {
            "type": "string",
            "description": "Child name",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "registrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildRegistrationTeamListItem"
            },
            "description": "Registrations",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChildRegistrationTeamListItemGetChildRegistrationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ChildRegistrationTeamListItemGetChildRegistrationsResp"
          }
        },
        "additionalProperties": false
      },
      "ChildTeamRegistration": {
        "required": [
          "isReserved",
          "teamId"
        ],
        "type": "object",
        "properties": {
          "teamId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is reserved"
          },
          "playerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Player ids",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Country id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "flagImageUrl": {
            "type": "string",
            "description": "Flag image url",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CrewFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "File Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "uploadedAt": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "mineType": {
            "type": "string",
            "nullable": true
          },
          "folderId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "url_Safe_UserName": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelArticleResp": {
        "type": "object",
        "properties": {
          "funcId": {
            "type": "integer",
            "description": "Backoffice func id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DelArticleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelArticleResp"
          }
        },
        "additionalProperties": false
      },
      "DelBroadcastTalentResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelBroadcastTalentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelBroadcastTalentResp"
          }
        },
        "additionalProperties": false
      },
      "DelChildMediaItemResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelChildMediaItemRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelChildMediaItemResp"
          }
        },
        "additionalProperties": false
      },
      "DelChildReq": {
        "type": "object",
        "properties": {
          "isForce": {
            "type": "boolean",
            "description": "Is force to delete",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelChildResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelChildRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelChildResp"
          }
        },
        "additionalProperties": false
      },
      "DelFileResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelFileRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelFileResp"
          }
        },
        "additionalProperties": false
      },
      "DelFolderResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelFolderRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelFolderResp"
          }
        },
        "additionalProperties": false
      },
      "DelFrontendSiteSectionReq": {
        "required": [
          "frontendId",
          "siteSectionId"
        ],
        "type": "object",
        "properties": {
          "frontendId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "siteSectionId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Site section id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DelFrontendSiteSectionResp": {
        "type": "object",
        "properties": {
          "frontendId": {
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DelFrontendSiteSectionRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelFrontendSiteSectionResp"
          }
        },
        "additionalProperties": false
      },
      "DelFuncResp": {
        "type": "object",
        "properties": {
          "funcId": {
            "type": "integer",
            "description": "Backoffice func id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DelFuncRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelFuncResp"
          }
        },
        "additionalProperties": false
      },
      "DelGameAccountResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelGameAccountRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelGameAccountResp"
          }
        },
        "additionalProperties": false
      },
      "DelGameRegionResp": {
        "required": [
          "regionId"
        ],
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "description": "Region id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DelGameRegionRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelGameRegionResp"
          }
        },
        "additionalProperties": false
      },
      "DelGameResp": {
        "type": "object",
        "properties": {
          "gameId": {
            "type": "integer",
            "description": "Game id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DelGameRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelGameResp"
          }
        },
        "additionalProperties": false
      },
      "DelGroupResp": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "description": "Group id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelGroupResp"
          }
        },
        "additionalProperties": false
      },
      "DelHeroResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelHeroRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelHeroResp"
          }
        },
        "additionalProperties": false
      },
      "DelMapResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelMapRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelMapResp"
          }
        },
        "additionalProperties": false
      },
      "DelMediaItemResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelMediaItemRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelMediaItemResp"
          }
        },
        "additionalProperties": false
      },
      "DelMediaVodResp": {
        "required": [
          "vodId"
        ],
        "type": "object",
        "properties": {
          "vodId": {
            "type": "integer",
            "description": "Vod id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DelMediaVodRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelMediaVodResp"
          }
        },
        "additionalProperties": false
      },
      "DelModeResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelModeRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelModeResp"
          }
        },
        "additionalProperties": false
      },
      "DelNotificationTemplateResp": {
        "type": "object",
        "properties": {
          "notificationTemplateId": {
            "type": "integer",
            "description": "Notification Template Id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DelNotificationTemplateRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelNotificationTemplateResp"
          }
        },
        "additionalProperties": false
      },
      "DelOneSignalAppResp": {
        "type": "object",
        "properties": {
          "oneSignalAppId": {
            "type": "integer",
            "description": "One Signal App Id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DelOneSignalAppRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelOneSignalAppResp"
          }
        },
        "additionalProperties": false
      },
      "DelPageReq": {
        "required": [
          "pageIds"
        ],
        "type": "object",
        "properties": {
          "pageIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "DelPageResp": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Page id",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelPageRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelPageResp"
          }
        },
        "additionalProperties": false
      },
      "DelPlayerMediaItemResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelPlayerMediaItemRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelPlayerMediaItemResp"
          }
        },
        "additionalProperties": false
      },
      "DelPlayerResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelPlayerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelPlayerResp"
          }
        },
        "additionalProperties": false
      },
      "DelRoleResp": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "Role id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelRoleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelRoleResp"
          }
        },
        "additionalProperties": false
      },
      "DelServerResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelServerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelServerResp"
          }
        },
        "additionalProperties": false
      },
      "DelSideResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelSideRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelSideResp"
          }
        },
        "additionalProperties": false
      },
      "DelSiteSectionsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelSiteSectionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelSiteSectionsResp"
          }
        },
        "additionalProperties": false
      },
      "DelSponsorResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelSponsorRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelSponsorResp"
          }
        },
        "additionalProperties": false
      },
      "DelStreamResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelStreamRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelStreamResp"
          }
        },
        "additionalProperties": false
      },
      "DelTeamPlayerResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelTeamPlayerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelTeamPlayerResp"
          }
        },
        "additionalProperties": false
      },
      "DelTeamResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelTeamRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelTeamResp"
          }
        },
        "additionalProperties": false
      },
      "DelUserResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelUserRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelUserResp"
          }
        },
        "additionalProperties": false
      },
      "DelVenueResp": {
        "type": "object",
        "additionalProperties": false
      },
      "DelVenueRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DelVenueResp"
          }
        },
        "additionalProperties": false
      },
      "DeleteParentReq": {
        "type": "object",
        "properties": {
          "isForce": {
            "type": "boolean",
            "description": "Is force to delete",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteParentResp": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteParentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DeleteParentResp"
          }
        },
        "additionalProperties": false
      },
      "EarningListItem": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Parent tournament name",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Parent tournament url",
            "nullable": true
          },
          "frontendName": {
            "type": "string",
            "description": "Frontend name",
            "nullable": true
          },
          "feName": {
            "type": "string",
            "description": "Frontend short name",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "nullable": true
          },
          "gameIconUrl": {
            "type": "string",
            "description": "Game icon url",
            "nullable": true
          },
          "prizePoolCurrency": {
            "$ref": "#/components/schemas/EnumCurrency"
          },
          "prizePoolCurrencyName": {
            "type": "string",
            "description": "Prize pool currency name",
            "nullable": true,
            "readOnly": true
          },
          "prizePool": {
            "type": "number",
            "description": "Prize pool",
            "format": "double",
            "nullable": true
          },
          "prizePoolUsd": {
            "type": "number",
            "description": "Prize pool usd",
            "format": "double",
            "nullable": true
          },
          "prizePoolStatus": {
            "$ref": "#/components/schemas/EnumPrizePoolStatus"
          },
          "prizePoolStatusName": {
            "type": "string",
            "description": "Prize pool status name",
            "nullable": true
          },
          "startingAt": {
            "type": "integer",
            "description": "Starting at",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "EnumArticleState": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumArticleType": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumChildTournament": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumCurrency": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumEarningPrizeStatus": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumFieldSort": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumFuncType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumGender": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumParentTournamentState": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumParentTournamentType": {
        "enum": [
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumPlatform": {
        "enum": [
          1,
          10,
          11,
          99
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumPointsAwarded": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumPrizePoolStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumRet": {
        "enum": [
          0,
          10001,
          10002,
          10003,
          10004,
          20000,
          20001,
          20002,
          20003,
          20004,
          20005,
          20006,
          20007,
          20008,
          20009,
          20010,
          20011,
          20012,
          20013,
          20014,
          20015,
          20016,
          20017,
          20018,
          20019,
          20020,
          20021,
          20022,
          20023,
          20024,
          20025,
          20026,
          20027,
          20028,
          20029,
          20030,
          20031,
          20032,
          20033,
          20034,
          20035,
          29999,
          30000,
          30001,
          30002,
          30003,
          30004,
          30005,
          39999,
          40000,
          40001,
          40999,
          50000,
          50001,
          50002,
          50003,
          50004,
          50005,
          59999,
          60000,
          60001,
          69999
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumState": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumTournamentStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "FolderDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Folder id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Folder name",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Folder path",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FrontendSiteSection": {
        "type": "object",
        "properties": {
          "frontendId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "siteSectionId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Site section id",
            "format": "int32"
          },
          "state": {
            "$ref": "#/components/schemas/EnumState"
          },
          "position": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Position",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FrontendSiteSectionListItem": {
        "type": "object",
        "properties": {
          "frontendId": {
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Site section name",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FuncItem": {
        "type": "object",
        "properties": {
          "funcId": {
            "type": "integer",
            "description": "Backoffice func id",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Func name",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Func code",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EnumFuncType"
          },
          "typeName": {
            "type": "string",
            "description": "Func type name",
            "nullable": true,
            "readOnly": true
          },
          "position": {
            "type": "integer",
            "description": "Func position",
            "format": "int32"
          },
          "state": {
            "$ref": "#/components/schemas/EnumState"
          },
          "stateName": {
            "type": "string",
            "description": "State name",
            "nullable": true,
            "readOnly": true
          },
          "url": {
            "type": "string",
            "description": "Func url",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "description": "Func icon",
            "nullable": true
          },
          "subFuncs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FuncItem"
            },
            "description": "Sub funcs",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FuzzyFolderDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GameListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Game id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Game name",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "description": "Game url safe name",
            "nullable": true
          },
          "hasPlayerRankings": {
            "type": "boolean",
            "description": "Has player rankings"
          },
          "hasTeamRankings": {
            "type": "boolean",
            "description": "Has team rankings"
          },
          "hasStreams": {
            "type": "boolean",
            "description": "Has streams"
          },
          "gridId": {
            "type": "integer",
            "description": "Grid id",
            "format": "int32",
            "nullable": true
          },
          "isLegacy": {
            "type": "boolean",
            "description": "Is legacy"
          },
          "iconImageUrl": {
            "type": "string",
            "description": "Icon image url",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "description": "Translation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GameRegionListItem": {
        "required": [
          "gameName",
          "regionId",
          "regionName",
          "translations"
        ],
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "description": "Region id",
            "format": "int32"
          },
          "regionName": {
            "minLength": 1,
            "type": "string",
            "description": "Region name"
          },
          "gameName": {
            "minLength": 1,
            "type": "string",
            "description": "Game name"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "description": "Translations"
          }
        },
        "additionalProperties": false
      },
      "GenderOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetApiLogResp": {
        "type": "object",
        "properties": {
          "log": {
            "$ref": "#/components/schemas/ApiLogDetail"
          }
        },
        "additionalProperties": false
      },
      "GetApiLogRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetApiLogResp"
          }
        },
        "additionalProperties": false
      },
      "GetApiLogsResp": {
        "type": "object",
        "properties": {
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLogListItem"
            },
            "description": "Api Logs",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetApiLogsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetApiLogsResp"
          }
        },
        "additionalProperties": false
      },
      "GetArticleResp": {
        "type": "object",
        "properties": {
          "articleDetail": {
            "$ref": "#/components/schemas/ArticleDetail"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          },
          "tournaments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          },
          "quickPoll": {
            "$ref": "#/components/schemas/RelatedQuickPoll"
          },
          "siteSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetArticleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetArticleResp"
          }
        },
        "additionalProperties": false
      },
      "GetArticleTypesResp": {
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16ItemWithSubItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetArticleTypesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetArticleTypesResp"
          }
        },
        "additionalProperties": false
      },
      "GetArticlesResp": {
        "type": "object",
        "properties": {
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleListItem"
            },
            "description": "Articles",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetArticlesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetArticlesResp"
          }
        },
        "additionalProperties": false
      },
      "GetBroadcastTalentResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "about": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "headerImagePath": {
            "type": "string",
            "nullable": true
          },
          "imagePath": {
            "type": "string",
            "nullable": true
          },
          "socialFacebook": {
            "type": "string",
            "nullable": true
          },
          "socialTwitter": {
            "type": "string",
            "nullable": true
          },
          "socialYoutube": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "nullable": true
          },
          "primaryGame": {
            "$ref": "#/components/schemas/BroadcastTalentGame"
          },
          "country": {
            "$ref": "#/components/schemas/BroadcastTalentCountry"
          },
          "language": {
            "$ref": "#/components/schemas/BroadcastTalentLanguage"
          },
          "player": {
            "$ref": "#/components/schemas/BroadcastTalentPlayer"
          },
          "personalStream": {
            "$ref": "#/components/schemas/BroadcastTalentStream"
          }
        },
        "additionalProperties": false
      },
      "GetBroadcastTalentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetBroadcastTalentResp"
          }
        },
        "additionalProperties": false
      },
      "GetBroadcastTalentRoleOptionsResp": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetBroadcastTalentRoleOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetBroadcastTalentRoleOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetBroadcastTalents": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "primaryGame": {
            "$ref": "#/components/schemas/BroadcastTalentGame"
          },
          "country": {
            "$ref": "#/components/schemas/BroadcastTalentCountry"
          },
          "language": {
            "$ref": "#/components/schemas/BroadcastTalentLanguage"
          }
        },
        "additionalProperties": false
      },
      "GetBroadcastTalentsResp": {
        "type": "object",
        "properties": {
          "broadcastTalents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetBroadcastTalents"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetBroadcastTalentsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetBroadcastTalentsResp"
          }
        },
        "additionalProperties": false
      },
      "GetChildDetailResp": {
        "type": "object",
        "properties": {
          "childId": {
            "type": "integer",
            "format": "int32"
          },
          "childName": {
            "type": "string",
            "nullable": true
          },
          "childUrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "childType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "childStatus": {
            "$ref": "#/components/schemas/EnumTournamentStatus"
          },
          "childStartAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "childIsHidden": {
            "type": "boolean"
          },
          "childIsLan": {
            "type": "boolean"
          },
          "childVenueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "childVenueName": {
            "type": "string",
            "nullable": true
          },
          "prizePoolStatus": {
            "$ref": "#/components/schemas/EnumPrizePoolStatus"
          },
          "prizePool": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "prizePoolCurrency": {
            "$ref": "#/components/schemas/EnumCurrency"
          },
          "prizePoolUsd": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "teamSize": {
            "type": "integer",
            "format": "int32"
          },
          "qualifyParticipants": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rounds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointAwarded": {
            "$ref": "#/components/schemas/EnumPointsAwarded"
          },
          "pointsWin": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pointsDraw": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowMatchGameDraw": {
            "type": "boolean",
            "nullable": true
          },
          "childCreatorId": {
            "type": "integer",
            "format": "int32"
          },
          "childCreatorName": {
            "type": "string",
            "nullable": true
          },
          "childCreatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "childUpdatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "parentUrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "parentType": {
            "$ref": "#/components/schemas/EnumParentTournamentType"
          },
          "parentStatus": {
            "$ref": "#/components/schemas/EnumTournamentStatus"
          },
          "parentStartAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parentIsHidden": {
            "type": "boolean"
          },
          "parentIsLan": {
            "type": "boolean"
          },
          "parentVenueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentVenueName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean"
          },
          "parentCreatorId": {
            "type": "integer",
            "format": "int32"
          },
          "parentCreatorName": {
            "type": "string",
            "nullable": true
          },
          "parentCreatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "parentUpdatedAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetChildDetailRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetChildDetailResp"
          }
        },
        "additionalProperties": false
      },
      "GetChildEarningPrizePoolResp": {
        "type": "object",
        "properties": {
          "childId": {
            "type": "integer",
            "description": "Child id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent tournament name",
            "nullable": true
          },
          "stageName": {
            "type": "string",
            "description": "Stage name",
            "nullable": true
          },
          "childName": {
            "type": "string",
            "description": "Child tournament name",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "description": "Game name",
            "nullable": true
          },
          "teamSize": {
            "type": "integer",
            "description": "Team size",
            "format": "int32"
          },
          "prizePoolCurrency": {
            "$ref": "#/components/schemas/EnumCurrency"
          },
          "prizePoolCurrencyName": {
            "type": "string",
            "description": "Prize pool currency name",
            "nullable": true,
            "readOnly": true
          },
          "prizePool": {
            "type": "number",
            "description": "Prize pool",
            "format": "double",
            "nullable": true
          },
          "prizePoolUsd": {
            "type": "number",
            "description": "Prize pool usd",
            "format": "double",
            "nullable": true
          },
          "prizePlacements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrizePlacement"
            },
            "description": "Prize placement",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetChildEarningPrizePoolRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetChildEarningPrizePoolResp"
          }
        },
        "additionalProperties": false
      },
      "GetChildEarningsResp": {
        "type": "object",
        "properties": {
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StagingEarningListItem"
            },
            "description": "Child earnings",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetChildEarningsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetChildEarningsResp"
          }
        },
        "additionalProperties": false
      },
      "GetChildMediaItem": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "childId": {
            "type": "integer",
            "format": "int32"
          },
          "mediaItemId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "urlSafeTitle": {
            "type": "string",
            "nullable": true
          },
          "viewCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetChildMediaItemsResp": {
        "type": "object",
        "properties": {
          "mediaItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetChildMediaItem"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetChildMediaItemsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetChildMediaItemsResp"
          }
        },
        "additionalProperties": false
      },
      "GetChildTeamRegistrationResp": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "childId": {
            "type": "integer",
            "description": "Child id",
            "format": "int32"
          },
          "registerId": {
            "type": "integer",
            "description": "Register id",
            "format": "int32"
          },
          "teamId": {
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "teamName": {
            "type": "string",
            "description": "Team name",
            "nullable": true
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is reserved"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32CheckItem"
            },
            "description": "Players",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetChildTeamRegistrationRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetChildTeamRegistrationResp"
          }
        },
        "additionalProperties": false
      },
      "GetChildTournamentResp": {
        "type": "object",
        "properties": {
          "childTournamentId": {
            "type": "integer",
            "description": "Child tournament id",
            "format": "int32"
          },
          "parentTournamentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "stageId": {
            "type": "integer",
            "description": "Stage id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Child tournament name",
            "nullable": true
          },
          "isLan": {
            "type": "boolean",
            "description": "Is lan"
          },
          "venueId": {
            "type": "integer",
            "description": "Venue id",
            "format": "int32",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "Is hidden"
          },
          "prizePoolStatus": {
            "$ref": "#/components/schemas/EnumPrizePoolStatus"
          },
          "prizePoolCurrency": {
            "$ref": "#/components/schemas/EnumCurrency"
          },
          "prizePool": {
            "type": "number",
            "description": "Prize pool",
            "format": "double",
            "nullable": true
          },
          "prizePoolUsd": {
            "type": "number",
            "description": "prize pool USD",
            "format": "double",
            "nullable": true
          },
          "qualifyParticipants": {
            "type": "integer",
            "description": "Qualify participants",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/EnumTournamentStatus"
          },
          "rankingImportance": {
            "type": "number",
            "description": "Ranking Importance",
            "format": "double"
          },
          "gridId": {
            "type": "integer",
            "description": "Grid Id",
            "format": "int32",
            "nullable": true
          },
          "startingAt": {
            "type": "integer",
            "description": "Start at",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetChildTournamentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetChildTournamentResp"
          }
        },
        "additionalProperties": false
      },
      "GetContactTypesResp": {
        "type": "object",
        "properties": {
          "contactTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ByteItem"
            },
            "description": "Contact types",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetContactTypesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetContactTypesResp"
          }
        },
        "additionalProperties": false
      },
      "GetCountryOptionsResp": {
        "type": "object",
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCountryOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetCountryOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetCrewFilesResp": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrewFile"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetCrewFilesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetCrewFilesResp"
          }
        },
        "additionalProperties": false
      },
      "GetCrewFoldersResp": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParentFolder"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDetail"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetCrewFoldersRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetCrewFoldersResp"
          }
        },
        "additionalProperties": false
      },
      "GetCurrentExchangeRateResp": {
        "type": "object",
        "properties": {
          "exchangeRate": {
            "type": "number",
            "description": "Exchange rate",
            "format": "double"
          },
          "usdAmount": {
            "type": "number",
            "description": "Usd amount",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetEarningsResp": {
        "required": [
          "earnings",
          "paging"
        ],
        "type": "object",
        "properties": {
          "earnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EarningListItem"
            },
            "description": "Earnings"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetEarningsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetEarningsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFrontendLocaleOptionsResp": {
        "type": "object",
        "properties": {
          "localeOptions": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Int16Item"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFrontendLocaleOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFrontendLocaleOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFrontendOptionsResp": {
        "type": "object",
        "properties": {
          "frontendOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFrontendOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFrontendOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFrontendSiteSectionsResp": {
        "type": "object",
        "properties": {
          "frontendSiteSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrontendSiteSectionListItem"
            },
            "description": "Frontend site sections",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFrontendSiteSectionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFrontendSiteSectionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuncOptionsResp": {
        "type": "object",
        "properties": {
          "funcOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UInt16Item"
            },
            "description": "Func options",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuncOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuncOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuncResp": {
        "type": "object",
        "properties": {
          "funcId": {
            "type": "integer",
            "description": "Func id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Func name",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Func code",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EnumFuncType"
          },
          "typeName": {
            "type": "string",
            "description": "Type name",
            "nullable": true,
            "readOnly": true
          },
          "position": {
            "type": "integer",
            "description": "Func position",
            "format": "int32"
          },
          "state": {
            "$ref": "#/components/schemas/EnumState"
          },
          "stateName": {
            "type": "string",
            "description": "State name",
            "nullable": true,
            "readOnly": true
          },
          "url": {
            "type": "string",
            "description": "Func url",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "description": "Func icon",
            "nullable": true
          },
          "createdAt": {
            "type": "integer",
            "description": "Created At",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "description": "Updated At",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetFuncRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuncResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuncTypesResp": {
        "type": "object",
        "properties": {
          "funcTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ByteItem"
            },
            "description": "Func types",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuncTypesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuncTypesResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuncsResp": {
        "type": "object",
        "properties": {
          "funcs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FuncItem"
            },
            "description": "Funcs",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuncsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuncsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyBroadcastTalentsResp": {
        "type": "object",
        "properties": {
          "fuzzyBroadcastTalents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "description": "Fuzzy broadcast talents",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyBroadcastTalentsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyBroadcastTalentsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyFoldersResp": {
        "type": "object",
        "properties": {
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FuzzyFolderDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyFoldersRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyFoldersResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyGameRaceResp": {
        "type": "object",
        "properties": {
          "fuzzyGames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyGameRaceRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyGameRaceResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyGamesResp": {
        "type": "object",
        "properties": {
          "fuzzyGames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyGamesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyGamesResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyMapsResp": {
        "type": "object",
        "properties": {
          "fuzzyMaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Fuzzy maps",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyMapsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyMapsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyMediaStreamsResp": {
        "type": "object",
        "properties": {
          "fuzzyMediaItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyMediaStreamsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyMediaStreamsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyMediaVideosResp": {
        "type": "object",
        "properties": {
          "fuzzyMediaItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyMediaVideosRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyMediaVideosResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyPlayersResp": {
        "type": "object",
        "properties": {
          "fuzzyPlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "description": "Fuzzy players",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyPlayersRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyPlayersResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzySponsorsResp": {
        "type": "object",
        "properties": {
          "fuzzySponsors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Fuzzy sponsors",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzySponsorsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzySponsorsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyTeamsResp": {
        "type": "object",
        "properties": {
          "fuzzyTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyTeamsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyTeamsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyTournamentsResp": {
        "type": "object",
        "properties": {
          "fuzzyTournaments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyTournamentsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyTournamentsResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyUsersByGroupResp": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupUserListItem"
            },
            "description": "Fuzzy users",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyUsersByGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyUsersByGroupResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyUsersResp": {
        "type": "object",
        "properties": {
          "fuzzyUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyUsersRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyUsersResp"
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyVenuesResp": {
        "type": "object",
        "properties": {
          "fuzzyVenues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFuzzyVenuesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetFuzzyVenuesResp"
          }
        },
        "additionalProperties": false
      },
      "GetGameAccountDetail": {
        "type": "object",
        "properties": {
          "gameAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "gameAccountName": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "gameUrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "serverId": {
            "type": "integer",
            "format": "int32"
          },
          "serverName": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetGameAccountResp": {
        "type": "object",
        "properties": {
          "gameAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "gameAccountName": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "serverId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGameAccountRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGameAccountResp"
          }
        },
        "additionalProperties": false
      },
      "GetGameAccountsResp": {
        "type": "object",
        "properties": {
          "gameAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetGameAccountDetail"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetGameAccountsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGameAccountsResp"
          }
        },
        "additionalProperties": false
      },
      "GetGameOptionsResp": {
        "type": "object",
        "properties": {
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Games",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGameOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGameOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetGameRegionResp": {
        "required": [
          "countries",
          "regionId",
          "regionName"
        ],
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "description": "Region id",
            "format": "int32"
          },
          "regionName": {
            "minLength": 1,
            "type": "string",
            "description": "Region name"
          },
          "gameId": {
            "type": "integer",
            "description": "GameId",
            "format": "int32"
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Countries"
          }
        },
        "additionalProperties": false
      },
      "GetGameRegionRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGameRegionResp"
          }
        },
        "additionalProperties": false
      },
      "GetGameRegionTranslationResp": {
        "required": [
          "regionId",
          "regionName",
          "translations"
        ],
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "description": "Region id",
            "format": "int32"
          },
          "regionName": {
            "minLength": 1,
            "type": "string",
            "description": "Region name"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "description": "Translations"
          }
        },
        "additionalProperties": false
      },
      "GetGameRegionTranslationRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGameRegionTranslationResp"
          }
        },
        "additionalProperties": false
      },
      "GetGameRegionsResp": {
        "type": "object",
        "properties": {
          "gameRegions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameRegionListItem"
            },
            "description": "Game regions",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetGameRegionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGameRegionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetGameResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Game id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Game name",
            "nullable": true
          },
          "hasPlayerRankings": {
            "type": "boolean",
            "description": "Has player rankings"
          },
          "hasTeamRankings": {
            "type": "boolean",
            "description": "Has team rankings"
          },
          "hasStreams": {
            "type": "boolean",
            "description": "Has streams"
          },
          "gridId": {
            "type": "integer",
            "description": "Grid id",
            "format": "int32",
            "nullable": true
          },
          "steamAppId": {
            "type": "integer",
            "description": "Steam app id",
            "format": "int32",
            "nullable": true
          },
          "twitchGameId": {
            "type": "integer",
            "description": "Twitch game id",
            "format": "int32",
            "nullable": true
          },
          "iconImageUrl": {
            "type": "string",
            "description": "Game icon image url",
            "nullable": true
          },
          "isLegacy": {
            "type": "boolean",
            "description": "Is legacy"
          },
          "replayCount": {
            "type": "integer",
            "description": "Replay count",
            "format": "int32"
          },
          "recommendedReplayCount": {
            "type": "integer",
            "description": "Recommended replay count",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetGameRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGameResp"
          }
        },
        "additionalProperties": false
      },
      "GetGamesResp": {
        "type": "object",
        "properties": {
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameListItem"
            },
            "description": "Games",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetGamesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGamesResp"
          }
        },
        "additionalProperties": false
      },
      "GetGenderOptionsResp": {
        "type": "object",
        "properties": {
          "genders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenderOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGenderOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGenderOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetGgCodeInfoResp": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "providerUrl": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "html": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGgCodeInfoRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGgCodeInfoResp"
          }
        },
        "additionalProperties": false
      },
      "GetGridMatchesResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "tournamentName": {
            "type": "string",
            "nullable": true
          },
          "opponent1Name": {
            "type": "string",
            "nullable": true
          },
          "opponent2Name": {
            "type": "string",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "gamesPerMatchSet": {
            "type": "integer",
            "format": "int32"
          },
          "dateTime": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetGridMatchesRespListApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetGridMatchesResp"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGridTournamentsResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGridTournamentsRespListApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetGridTournamentsResp"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGroupBlankPermissionsResp": {
        "type": "object",
        "properties": {
          "frontendPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Frontend permissions",
            "nullable": true
          },
          "backofficePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleBackOfficePermissionItem"
            },
            "description": "Backoffice permissions",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGroupBlankPermissionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGroupBlankPermissionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetGroupOptionsResp": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UInt32Item"
            },
            "description": "Groups",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGroupOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGroupOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetGroupResp": {
        "required": [
          "backofficePermissions",
          "frontendPermissions",
          "groupId",
          "name",
          "remark"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "description": "Group id",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "User group name"
          },
          "remark": {
            "minLength": 1,
            "type": "string",
            "description": "Remark"
          },
          "frontendPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Frontend permissions"
          },
          "backofficePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleBackOfficePermissionItem"
            },
            "description": "Backoffice permissions"
          }
        },
        "additionalProperties": false
      },
      "GetGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGroupResp"
          }
        },
        "additionalProperties": false
      },
      "GetGroupTemplatesResp": {
        "type": "object",
        "properties": {
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupTemplate"
            },
            "description": "Templates",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGroupTemplatesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGroupTemplatesResp"
          }
        },
        "additionalProperties": false
      },
      "GetGroupsResp": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupListItem"
            },
            "description": "Groups",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetGroupsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetGroupsResp"
          }
        },
        "additionalProperties": false
      },
      "GetHero": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Hero Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Hero Name",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetHeroesTranslation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetHeroLocale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bcp47Identifier": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetHeroResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Hero Id",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "iconFileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetHeroRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetHeroResp"
          }
        },
        "additionalProperties": false
      },
      "GetHeroTranslation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "tagline": {
            "type": "string",
            "description": "Tagline",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "$ref": "#/components/schemas/GetHeroLocale"
          }
        },
        "additionalProperties": false
      },
      "GetHeroTranslationsResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Hero Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Hero Name",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "tagline": {
            "type": "string",
            "description": "Tagline",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetHeroTranslation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetHeroTranslationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetHeroTranslationsResp"
          }
        },
        "additionalProperties": false
      },
      "GetHeroesResp": {
        "type": "object",
        "properties": {
          "heroes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetHero"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetHeroesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetHeroesResp"
          }
        },
        "additionalProperties": false
      },
      "GetHeroesTranslation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "$ref": "#/components/schemas/GetHeroLocale"
          }
        },
        "additionalProperties": false
      },
      "GetLanguagesResp": {
        "type": "object",
        "properties": {
          "languageOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageOption"
            },
            "description": "Language options",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetLanguagesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetLanguagesResp"
          }
        },
        "additionalProperties": false
      },
      "GetLocaleOptionsResp": {
        "type": "object",
        "properties": {
          "locales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Locales",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetLocaleOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetLocaleOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetMap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Map Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMapTranslation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMapLocale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bcp47Identifier": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMapResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Map Id",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "imageFileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMapRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetMapResp"
          }
        },
        "additionalProperties": false
      },
      "GetMapTranslation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "$ref": "#/components/schemas/GetMapLocale"
          }
        },
        "additionalProperties": false
      },
      "GetMapTranslationsResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMapTranslation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMapTranslationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetMapTranslationsResp"
          }
        },
        "additionalProperties": false
      },
      "GetMapsResp": {
        "type": "object",
        "properties": {
          "maps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMap"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetMapsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetMapsResp"
          }
        },
        "additionalProperties": false
      },
      "GetMediaItems": {
        "type": "object",
        "properties": {
          "broadcastTalentId": {
            "type": "integer",
            "format": "int32"
          },
          "mediaItemId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "urlSafeTitle": {
            "type": "string",
            "nullable": true
          },
          "viewCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetMediaItemsResp": {
        "type": "object",
        "properties": {
          "mediaItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMediaItems"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetMediaItemsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetMediaItemsResp"
          }
        },
        "additionalProperties": false
      },
      "GetMediaVodHostOptionsResp": {
        "type": "object",
        "properties": {
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Hosts",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMediaVodResp": {
        "required": [
          "hostId",
          "hostName",
          "hostVideoId",
          "isFeatured",
          "isInGame",
          "siteSections",
          "startTime",
          "title",
          "vodId"
        ],
        "type": "object",
        "properties": {
          "vodId": {
            "type": "integer",
            "description": "Vod id",
            "format": "int32"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "Vod title"
          },
          "siteSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Related site sections"
          },
          "hostId": {
            "type": "integer",
            "description": "Host id",
            "format": "int32"
          },
          "hostName": {
            "minLength": 1,
            "type": "string",
            "description": "Host name",
            "readOnly": true
          },
          "hostVideoId": {
            "minLength": 1,
            "type": "string",
            "description": "Host video id"
          },
          "startTime": {
            "type": "integer",
            "description": "Start time",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "description": "Tags",
            "nullable": true
          },
          "isInGame": {
            "type": "boolean",
            "description": "Is in game"
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Is featured"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "description": "Related players",
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "description": "Related teams",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMediaVodRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetMediaVodResp"
          }
        },
        "additionalProperties": false
      },
      "GetMediaVodsResp": {
        "type": "object",
        "properties": {
          "vods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaVodListItem"
            },
            "description": "Vods",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetMediaVodsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetMediaVodsResp"
          }
        },
        "additionalProperties": false
      },
      "GetMode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Mode Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetModeTranslation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetModeLocale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bcp47Identifier": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetModeResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Mode Id",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetModeRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetModeResp"
          }
        },
        "additionalProperties": false
      },
      "GetModeTranslation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "$ref": "#/components/schemas/GetModeLocale"
          }
        },
        "additionalProperties": false
      },
      "GetModeTranslationsResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetModeTranslation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetModeTranslationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetModeTranslationsResp"
          }
        },
        "additionalProperties": false
      },
      "GetModesResp": {
        "type": "object",
        "properties": {
          "modes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMode"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetModesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetModesResp"
          }
        },
        "additionalProperties": false
      },
      "GetNotificationTemplateResp": {
        "type": "object",
        "properties": {
          "detail": {
            "$ref": "#/components/schemas/NotificationTemplateDetail"
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationTemplateArgument"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetNotificationTemplateRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetNotificationTemplateResp"
          }
        },
        "additionalProperties": false
      },
      "GetNotificationTemplatesResp": {
        "type": "object",
        "properties": {
          "notificationTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationTemplateListItem"
            },
            "description": "Notification Templates",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetNotificationTemplatesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetNotificationTemplatesResp"
          }
        },
        "additionalProperties": false
      },
      "GetNotificationTypeOptionsResp": {
        "type": "object",
        "properties": {
          "notificationTypeOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Notification Type Options",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetNotificationTypeOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetNotificationTypeOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetOneSignalAppResp": {
        "type": "object",
        "properties": {
          "oneSignalAppDetail": {
            "$ref": "#/components/schemas/OneSignalAppListItem"
          }
        },
        "additionalProperties": false
      },
      "GetOneSignalAppRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetOneSignalAppResp"
          }
        },
        "additionalProperties": false
      },
      "GetOneSignalAppsResp": {
        "type": "object",
        "properties": {
          "onesignalApps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OneSignalAppListItem"
            },
            "description": "Messaging One Signal Apps",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetOneSignalAppsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetOneSignalAppsResp"
          }
        },
        "additionalProperties": false
      },
      "GetOpponentsItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "placement": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registrationId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "pointAdjustment": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "description": "Game/Match count",
            "format": "int32"
          },
          "winCount": {
            "type": "integer",
            "format": "int32"
          },
          "drawCount": {
            "type": "integer",
            "format": "int32"
          },
          "lossCount": {
            "type": "integer",
            "format": "int32"
          },
          "points": {
            "type": "integer",
            "description": "not include points adjustment",
            "format": "int32"
          },
          "totalPoints": {
            "type": "integer",
            "description": "PointsAdjustment + Points",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetOpponentsResp": {
        "type": "object",
        "properties": {
          "parentTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "childTournamentId": {
            "type": "integer",
            "format": "int32"
          },
          "pointsAwarded": {
            "$ref": "#/components/schemas/EnumPointsAwarded"
          },
          "opponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetOpponentsItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetOpponentsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetOpponentsResp"
          }
        },
        "additionalProperties": false
      },
      "GetPageResp": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "integer",
            "description": "Page id",
            "format": "int32"
          },
          "frontendId": {
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "content": {
            "type": "string",
            "description": "Content",
            "nullable": true
          },
          "extraCss": {
            "type": "string",
            "description": "Extra css",
            "nullable": true
          },
          "timeSpent": {
            "type": "integer",
            "description": "Time spent",
            "format": "int32"
          },
          "commentsEnabled": {
            "type": "boolean",
            "description": "Comments enabled"
          }
        },
        "additionalProperties": false
      },
      "GetPageRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetPageResp"
          }
        },
        "additionalProperties": false
      },
      "GetPagesResp": {
        "type": "object",
        "properties": {
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageListItem"
            },
            "description": "Pages",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetPagesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetPagesResp"
          }
        },
        "additionalProperties": false
      },
      "GetParentBroadcastTalentsResp": {
        "required": [
          "broadcastTalents",
          "paging",
          "parentId"
        ],
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent tournament name",
            "nullable": true
          },
          "broadcastTalents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParentBroadcastTalentListItem"
            },
            "description": "Broadcast talents"
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetParentBroadcastTalentsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetParentBroadcastTalentsResp"
          }
        },
        "additionalProperties": false
      },
      "GetParentDetailResp": {
        "type": "object",
        "properties": {
          "parentDetail": {
            "$ref": "#/components/schemas/ParentTournamentDetail"
          },
          "stageDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParentStageDetail"
            },
            "description": "Stage details",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetParentDetailRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetParentDetailResp"
          }
        },
        "additionalProperties": false
      },
      "GetParentResp": {
        "type": "object",
        "properties": {
          "parentDetail": {
            "$ref": "#/components/schemas/ParentTournamentEditDetail"
          },
          "sponsors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16OrderItem"
            },
            "description": "Parent tournament sponsors",
            "nullable": true
          },
          "maps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Parent tournament maps",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetParentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetParentResp"
          }
        },
        "additionalProperties": false
      },
      "GetParentStage": {
        "type": "object",
        "properties": {
          "stageId": {
            "type": "integer",
            "description": "Stage Id",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "description": "Stage Order",
            "format": "int32"
          },
          "stageName": {
            "type": "string",
            "description": "Stage Name",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "description": "Stage UrlSafeName",
            "nullable": true
          },
          "childTournaments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetParentStageChild"
            },
            "description": "Child tournaments",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetParentStageChild": {
        "type": "object",
        "properties": {
          "childId": {
            "type": "integer",
            "description": "Child tournament Id",
            "format": "int32"
          },
          "childName": {
            "type": "string",
            "description": "Child tournament Name",
            "nullable": true
          },
          "childUrlSafeName": {
            "type": "string",
            "description": "Child tournament UrlSafeName",
            "nullable": true
          },
          "childType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "childTypeName": {
            "type": "string",
            "description": "Child tournament type name",
            "nullable": true,
            "readOnly": true
          },
          "startAt": {
            "type": "integer",
            "description": "Child tournament starting datetime",
            "format": "int64",
            "nullable": true
          },
          "ranking": {
            "type": "number",
            "description": "Child tournament ranking importance",
            "format": "double"
          },
          "childStatus": {
            "$ref": "#/components/schemas/EnumTournamentStatus"
          },
          "childStatusName": {
            "type": "string",
            "description": "Child status name",
            "nullable": true,
            "readOnly": true
          },
          "groupEmbedUrl": {
            "type": "string",
            "description": "Group Embed Url",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetParentStagesForEditResp": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent name",
            "nullable": true
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32OrderItem"
            },
            "description": "Stages",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetParentStagesForEditRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetParentStagesForEditResp"
          }
        },
        "additionalProperties": false
      },
      "GetParentStagesResp": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "description": "Parent tournament name",
            "nullable": true
          },
          "frontEndId": {
            "type": "integer",
            "description": "FrontEndId",
            "format": "int32",
            "nullable": true
          },
          "feName": {
            "type": "string",
            "description": "Frontend short name",
            "nullable": true
          },
          "parentUrlSafeName": {
            "type": "string",
            "description": "Parent tournament UrlSafeName",
            "nullable": true
          },
          "parentStatus": {
            "$ref": "#/components/schemas/EnumTournamentStatus"
          },
          "parentStatusName": {
            "type": "string",
            "description": "Parent tournament name",
            "nullable": true,
            "readOnly": true
          },
          "gameId": {
            "type": "integer",
            "description": "GameId",
            "format": "int32"
          },
          "gameName": {
            "type": "string",
            "description": "Game Name",
            "nullable": true
          },
          "gameIconUrl": {
            "type": "string",
            "description": "Game icon url",
            "nullable": true
          },
          "gameUrlSafeName": {
            "type": "string",
            "description": "Game UrlSafeName",
            "nullable": true
          },
          "showGridDataProvider": {
            "type": "boolean",
            "description": "The GRID field is only displayed to the user when the parent tournament game = CSGO, Valorant or Dota 2",
            "readOnly": true
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetParentStage"
            },
            "description": "Stages",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetParentStagesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetParentStagesResp"
          }
        },
        "additionalProperties": false
      },
      "GetParentTournamentStateOptionsResp": {
        "type": "object",
        "properties": {
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Tournament state options",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetParentTournamentStateOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetParentTournamentStateOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetParentsResp": {
        "type": "object",
        "properties": {
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParentTournamentListItem"
            },
            "description": "Parent tournaments",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetParentsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetParentsResp"
          }
        },
        "additionalProperties": false
      },
      "GetPlayerMediaItems": {
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "mediaItemId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "urlSafeTitle": {
            "type": "string",
            "nullable": true
          },
          "viewCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetPlayerMediaItemsResp": {
        "type": "object",
        "properties": {
          "mediaItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPlayerMediaItems"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetPlayerMediaItemsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetPlayerMediaItemsResp"
          }
        },
        "additionalProperties": false
      },
      "GetPlayerResp": {
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/EnumGender"
          },
          "genderName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "initialRating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "primaryGameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "primaryGame": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageFileName": {
            "type": "string",
            "nullable": true
          },
          "facebook": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "youtube": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPlayerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetPlayerResp"
          }
        },
        "additionalProperties": false
      },
      "GetPlayersDetail": {
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "primaryGameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "primaryGame": {
            "type": "string",
            "nullable": true
          },
          "teamNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "primaryGameIconUrl": {
            "type": "string",
            "nullable": true
          },
          "primaryGameUrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPlayersResp": {
        "type": "object",
        "properties": {
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPlayersDetail"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetPlayersRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetPlayersResp"
          }
        },
        "additionalProperties": false
      },
      "GetPointsAwardedOptionsResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPointsAwardedOptionsRespListApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPointsAwardedOptionsResp"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPrizePoolStatusOptionsResp": {
        "required": [
          "prizePoolStatus"
        ],
        "type": "object",
        "properties": {
          "prizePoolStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Prize pool status"
          }
        },
        "additionalProperties": false
      },
      "GetPrizePoolStatusOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetPrizePoolStatusOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetRoleBlankPermissionsResp": {
        "type": "object",
        "properties": {
          "frontendPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Frontend permissions",
            "nullable": true
          },
          "backofficePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleBackOfficePermissionItem"
            },
            "description": "Backoffice permissions",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRoleBlankPermissionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetRoleBlankPermissionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetRoleOptionsByGroupResp": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UInt32Item"
            },
            "description": "Roles",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRoleOptionsByGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetRoleOptionsByGroupResp"
          }
        },
        "additionalProperties": false
      },
      "GetRoleResp": {
        "required": [
          "backofficePermissions",
          "frontendPermissions",
          "groupId",
          "groupName",
          "name",
          "remark",
          "roleId"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "description": "Group id",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "description": "Role id",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Role name"
          },
          "groupName": {
            "minLength": 1,
            "type": "string",
            "description": "Group Name"
          },
          "remark": {
            "minLength": 1,
            "type": "string",
            "description": "Remark"
          },
          "frontendPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Role frontend permissions"
          },
          "groupFrontendPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Group frontend permissions",
            "nullable": true
          },
          "backofficePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleBackOfficePermissionItem"
            },
            "description": "Role backoffice permissions"
          }
        },
        "additionalProperties": false
      },
      "GetRoleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetRoleResp"
          }
        },
        "additionalProperties": false
      },
      "GetRoleTemplatesByGroupResp": {
        "type": "object",
        "properties": {
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleTemplate"
            },
            "description": "Templates",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRoleTemplatesByGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetRoleTemplatesByGroupResp"
          }
        },
        "additionalProperties": false
      },
      "GetRolesByGroupResp": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleListItem"
            },
            "description": "Roles",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetRolesByGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetRolesByGroupResp"
          }
        },
        "additionalProperties": false
      },
      "GetServerOptionsResp": {
        "type": "object",
        "properties": {
          "serverId": {
            "type": "integer",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isFrozen": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetServerOptionsRespListApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetServerOptionsResp"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetServerResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isFrozen": {
            "type": "boolean"
          },
          "accountNameFormat": {
            "type": "string",
            "nullable": true
          },
          "accountNameRegex": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetServerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetServerResp"
          }
        },
        "additionalProperties": false
      },
      "GetServers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "isFrozen": {
            "type": "boolean"
          },
          "accountNameFormat": {
            "type": "string",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "gameIconImageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetServersResp": {
        "type": "object",
        "properties": {
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetServers"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetServersRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetServersResp"
          }
        },
        "additionalProperties": false
      },
      "GetSide": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Side Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSideTranslation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSideLocale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bcp47Identifier": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSideResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Side Id",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "iconFileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSideRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSideResp"
          }
        },
        "additionalProperties": false
      },
      "GetSideTranslation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "$ref": "#/components/schemas/GetSideLocale"
          }
        },
        "additionalProperties": false
      },
      "GetSideTranslationsResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSideTranslation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSideTranslationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSideTranslationsResp"
          }
        },
        "additionalProperties": false
      },
      "GetSidesResp": {
        "type": "object",
        "properties": {
          "sides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSide"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetSidesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSidesResp"
          }
        },
        "additionalProperties": false
      },
      "GetSiteSectionResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "hidden": {
            "type": "boolean"
          },
          "urlSafeName": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "headerImageUrl": {
            "type": "string",
            "nullable": true
          },
          "backGroundImageUrl": {
            "type": "string",
            "nullable": true
          },
          "iconImageUrl": {
            "type": "string",
            "nullable": true
          },
          "logoImageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSiteSectionRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSiteSectionResp"
          }
        },
        "additionalProperties": false
      },
      "GetSiteSections": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "nullable": true
          },
          "hidden": {
            "type": "boolean"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "gameUrlSafeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSiteSectionsOptionsResp": {
        "type": "object",
        "properties": {
          "siteSectionOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSiteSectionsOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSiteSectionsOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetSiteSectionsResp": {
        "type": "object",
        "properties": {
          "siteSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSiteSections"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetSiteSectionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSiteSectionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetSponsorResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "imageFileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSponsorRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSponsorResp"
          }
        },
        "additionalProperties": false
      },
      "GetSponsors": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "imageFileName": {
            "type": "string",
            "nullable": true
          },
          "urlSafeName": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSponsorsResp": {
        "type": "object",
        "properties": {
          "sponsors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSponsors"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetSponsorsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSponsorsResp"
          }
        },
        "additionalProperties": false
      },
      "GetStateOptionsResp": {
        "type": "object",
        "properties": {
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ByteItem"
            },
            "description": "Func states",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetStateOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetStateOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetStreamResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "platform": {
            "type": "integer",
            "format": "int32"
          },
          "streamId": {
            "type": "string",
            "nullable": true
          },
          "streamUrl": {
            "type": "string",
            "nullable": true
          },
          "screenCapUrl": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "languageId": {
            "type": "integer",
            "format": "int32"
          },
          "isEventStream": {
            "type": "boolean"
          },
          "isProPlayer": {
            "type": "boolean"
          },
          "isCelebCaster": {
            "type": "boolean"
          },
          "nextBroadcastAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaTag"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetStreamRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetStreamResp"
          }
        },
        "additionalProperties": false
      },
      "GetStreams": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "platform": {
            "type": "integer",
            "format": "int32"
          },
          "streamId": {
            "type": "string",
            "nullable": true
          },
          "streamUrl": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "isLive": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "gameUrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetStreamsResp": {
        "type": "object",
        "properties": {
          "streams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetStreams"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetStreamsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetStreamsResp"
          }
        },
        "additionalProperties": false
      },
      "GetSystemLogResp": {
        "type": "object",
        "properties": {
          "log": {
            "$ref": "#/components/schemas/SystemLogDetail"
          }
        },
        "additionalProperties": false
      },
      "GetSystemLogRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSystemLogResp"
          }
        },
        "additionalProperties": false
      },
      "GetSystemLogsResp": {
        "type": "object",
        "properties": {
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemLogListItem"
            },
            "description": "Api Logs",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetSystemLogsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetSystemLogsResp"
          }
        },
        "additionalProperties": false
      },
      "GetTeamPlayer": {
        "type": "object",
        "properties": {
          "teamPlayerId": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "playerName": {
            "type": "string",
            "nullable": true
          },
          "playerUrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "joinDate": {
            "type": "integer",
            "format": "int64"
          },
          "leaveDate": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "position": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTeamPlayerOptionsResp": {
        "type": "object",
        "properties": {
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "description": "Players",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTeamPlayerOptionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetTeamPlayerOptionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetTeamPlayerResp": {
        "type": "object",
        "properties": {
          "teamPlayerId": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "joinDate": {
            "type": "integer",
            "format": "int64"
          },
          "leaveDate": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetTeamPlayerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetTeamPlayerResp"
          }
        },
        "additionalProperties": false
      },
      "GetTeamPlayersResp": {
        "type": "object",
        "properties": {
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTeamPlayer"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetTeamPlayersRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetTeamPlayersResp"
          }
        },
        "additionalProperties": false
      },
      "GetTeamResp": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "teamName": {
            "type": "string",
            "nullable": true
          },
          "teamTag": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ownerName": {
            "type": "string",
            "nullable": true
          },
          "captainId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "captainName": {
            "type": "string",
            "nullable": true
          },
          "manageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "manageName": {
            "type": "string",
            "nullable": true
          },
          "excludedRankings": {
            "type": "boolean"
          },
          "imageFileName": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "facebook": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "youtube": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTeamRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetTeamResp"
          }
        },
        "additionalProperties": false
      },
      "GetTeamsDetail": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "teamName": {
            "type": "string",
            "nullable": true
          },
          "teamUrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "teamTag": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "gameUrlSafeName": {
            "type": "string",
            "nullable": true
          },
          "isRanked": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTeamsResp": {
        "type": "object",
        "properties": {
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTeamsDetail"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetTeamsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetTeamsResp"
          }
        },
        "additionalProperties": false
      },
      "GetUserForPlayerResp": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/EnumGender"
          },
          "primaryGameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "primaryGame": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUserForPlayerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetUserForPlayerResp"
          }
        },
        "additionalProperties": false
      },
      "GetUserPermissionsResp": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Groups",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Roles",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUserPermissionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetUserPermissionsResp"
          }
        },
        "additionalProperties": false
      },
      "GetUserResp": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/EnumGender"
          },
          "aboutMe": {
            "type": "string",
            "nullable": true
          },
          "avatarImagePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUserRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetUserResp"
          }
        },
        "additionalProperties": false
      },
      "GetUserSessionResp": {
        "type": "object",
        "properties": {
          "userProfile": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "menuList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuItem"
            },
            "nullable": true
          },
          "funcItem": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUserSessionRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetUserSessionResp"
          }
        },
        "additionalProperties": false
      },
      "GetUsers": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User id",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "Username",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "updatedAt": {
            "type": "integer",
            "description": "Updated at",
            "format": "int64",
            "nullable": true
          },
          "updatedUserName": {
            "type": "string",
            "description": "Updated username",
            "nullable": true
          },
          "registeredAt": {
            "type": "integer",
            "description": "Registered at",
            "format": "int64",
            "nullable": true
          },
          "registrationCompletedAt": {
            "type": "integer",
            "description": "Registration completed at",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUsersByGroupResp": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupUserListItem"
            },
            "description": "Users",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUsersByGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetUsersByGroupResp"
          }
        },
        "additionalProperties": false
      },
      "GetUsersByRoleResp": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleUserListItem"
            },
            "description": "Users",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUsersByRoleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetUsersByRoleResp"
          }
        },
        "additionalProperties": false
      },
      "GetUsersResp": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUsers"
            },
            "description": "Users",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetUsersRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetUsersResp"
          }
        },
        "additionalProperties": false
      },
      "GetVenueResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "coordinates": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "imageFileName": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetVenueRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetVenueResp"
          }
        },
        "additionalProperties": false
      },
      "GetVenues": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "coordinates": {
            "type": "string",
            "nullable": true
          },
          "hasCoordinates": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "imageFileName": {
            "type": "string",
            "nullable": true
          },
          "hasImage": {
            "type": "boolean",
            "readOnly": true
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetVenuesResp": {
        "type": "object",
        "properties": {
          "venues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetVenues"
            },
            "description": "/Venues",
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/PagingRespBase"
          }
        },
        "additionalProperties": false
      },
      "GetVenuesRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/GetVenuesResp"
          }
        },
        "additionalProperties": false
      },
      "GroupListItem": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "description": "Group id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "User group name",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Remark",
            "nullable": true
          },
          "updatedAt": {
            "type": "integer",
            "description": "Updated At",
            "format": "int64"
          },
          "updatedUserName": {
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "frontendNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Frontend names",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupTemplate": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "integer",
            "description": "Group template id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Group template name",
            "nullable": true
          },
          "frontendPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Frontend permissions",
            "nullable": true
          },
          "backofficePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleBackOfficePermissionItem"
            },
            "description": "Backoffice permissions",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupUserListItem": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User id",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "User name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int16Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int16ItemListApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int16ItemWithSubItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "subItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int16OrderItem": {
        "required": [
          "id",
          "name",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Int32CheckItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "checked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Int32Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int32OrderItem": {
        "required": [
          "id",
          "name",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Int32StringDictionaryApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LanguageOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogLevel": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "LogoutResp": {
        "type": "object",
        "additionalProperties": false
      },
      "LogoutRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/LogoutResp"
          }
        },
        "additionalProperties": false
      },
      "MediaTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Media Tag Id",
            "format": "int32"
          },
          "mediaItemId": {
            "type": "integer",
            "description": "Media Item Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Media Item Name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MediaVodListItem": {
        "required": [
          "createdAt",
          "creator",
          "hostName",
          "hostVideoId",
          "hostViewCount",
          "isInGame",
          "title",
          "updateAt",
          "vodId"
        ],
        "type": "object",
        "properties": {
          "vodId": {
            "type": "integer",
            "description": "Vod id",
            "format": "int32"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "Vod title"
          },
          "hostName": {
            "minLength": 1,
            "type": "string",
            "description": "Host name"
          },
          "hostVideoId": {
            "minLength": 1,
            "type": "string",
            "description": "Host video id"
          },
          "creator": {
            "minLength": 1,
            "type": "string",
            "description": "Creator"
          },
          "createdAt": {
            "type": "integer",
            "description": "Create at",
            "format": "int64"
          },
          "updateAt": {
            "type": "integer",
            "description": "Update at",
            "format": "int64"
          },
          "isInGame": {
            "type": "boolean",
            "description": "Is in game"
          },
          "hostViewCount": {
            "type": "integer",
            "description": "Host view count",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MenuItem": {
        "type": "object",
        "properties": {
          "funcId": {
            "type": "integer",
            "description": "Backoffice func id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Backoffice func name",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "description": "Parent func id",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "description": "Func level",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "description": "Func position",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "Api url",
            "nullable": true
          },
          "subMenus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuItem"
            },
            "description": "Sub Menus",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModArticleResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModArticleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModArticleResp"
          }
        },
        "additionalProperties": false
      },
      "ModBroadcastTalentResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModBroadcastTalentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModBroadcastTalentResp"
          }
        },
        "additionalProperties": false
      },
      "ModChildEarningPrizePoolReq": {
        "required": [
          "exchangeRate",
          "prizePool",
          "prizePoolCurrency",
          "prizePoolUsd"
        ],
        "type": "object",
        "properties": {
          "prizePoolCurrency": {
            "$ref": "#/components/schemas/EnumCurrency"
          },
          "exchangeRate": {
            "type": "number",
            "description": "Exchange rate",
            "format": "double"
          },
          "prizePool": {
            "type": "number",
            "description": "Prize pool",
            "format": "double"
          },
          "prizePoolUsd": {
            "type": "number",
            "description": "Prize pool usd",
            "format": "double"
          },
          "prizePlacements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModPrizePlacement"
            },
            "description": "Prize placement",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModChildEarningPrizePoolStatusReq": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/EnumEarningPrizeStatus"
          }
        },
        "additionalProperties": false
      },
      "ModChildEarningPrizePoolStatusResp": {
        "type": "object",
        "properties": {
          "childId": {
            "type": "integer",
            "description": "Child id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModChildEarningPrizePoolStatusRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModChildEarningPrizePoolStatusResp"
          }
        },
        "additionalProperties": false
      },
      "ModChildPlayerRegistrationReq": {
        "required": [
          "isReserved"
        ],
        "type": "object",
        "properties": {
          "isReserved": {
            "type": "boolean",
            "description": "Is reserved"
          }
        },
        "additionalProperties": false
      },
      "ModChildResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModChildRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModChildResp"
          }
        },
        "additionalProperties": false
      },
      "ModChildTeamRegistrationReq": {
        "required": [
          "isReserved"
        ],
        "type": "object",
        "properties": {
          "isReserved": {
            "type": "boolean",
            "description": "Is reserved"
          },
          "playerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Player ids",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModFileResp": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "folderId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModFileRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModFileResp"
          }
        },
        "additionalProperties": false
      },
      "ModFolderResp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModFolderRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModFolderResp"
          }
        },
        "additionalProperties": false
      },
      "ModFrontendSiteSectionReq": {
        "required": [
          "frontendId",
          "siteSectionId"
        ],
        "type": "object",
        "properties": {
          "frontendId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "siteSectionId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Site section id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModFrontendSiteSectionResp": {
        "type": "object",
        "properties": {
          "frontendId": {
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "siteSectionId": {
            "type": "integer",
            "description": "Site section id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModFrontendSiteSectionRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModFrontendSiteSectionResp"
          }
        },
        "additionalProperties": false
      },
      "ModFuncResp": {
        "type": "object",
        "properties": {
          "funcId": {
            "type": "integer",
            "description": "Backoffice func id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModFuncRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModFuncResp"
          }
        },
        "additionalProperties": false
      },
      "ModGameAccountReq": {
        "required": [
          "gameAccountId",
          "gameAccountName",
          "playerId"
        ],
        "type": "object",
        "properties": {
          "gameAccountId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "GameAccount Id",
            "format": "int32"
          },
          "playerId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "PlayerId",
            "format": "int32"
          },
          "gameAccountName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "GameAccount Name"
          }
        },
        "additionalProperties": false
      },
      "ModGameAccountResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModGameAccountRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModGameAccountResp"
          }
        },
        "additionalProperties": false
      },
      "ModGameRegionReq": {
        "required": [
          "countryIds",
          "gameId",
          "regionId",
          "regionName"
        ],
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "description": "RegionId",
            "format": "int32"
          },
          "regionName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Region name"
          },
          "gameId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Game id",
            "format": "int32"
          },
          "countryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Country Ids"
          }
        },
        "additionalProperties": false
      },
      "ModGameRegionResp": {
        "required": [
          "regionId"
        ],
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "description": "Region id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModGameRegionRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModGameRegionResp"
          }
        },
        "additionalProperties": false
      },
      "ModGameRegionTranslationReq": {
        "required": [
          "localeId",
          "regionId",
          "regionName"
        ],
        "type": "object",
        "properties": {
          "regionId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Region id",
            "format": "int32"
          },
          "localeId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Locale Id",
            "format": "int32"
          },
          "regionName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Map translations Name"
          }
        },
        "additionalProperties": false
      },
      "ModGameRegionTranslationResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModGameRegionTranslationRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModGameRegionTranslationResp"
          }
        },
        "additionalProperties": false
      },
      "ModGameResp": {
        "type": "object",
        "properties": {
          "gameId": {
            "type": "integer",
            "description": "Game id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModGameRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModGameResp"
          }
        },
        "additionalProperties": false
      },
      "ModGameTranslationsReq": {
        "required": [
          "gameId",
          "localeId",
          "name"
        ],
        "type": "object",
        "properties": {
          "gameId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Game id",
            "format": "int32"
          },
          "localeId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Locale Id",
            "format": "int32"
          },
          "name": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Side translations Name"
          }
        },
        "additionalProperties": false
      },
      "ModGameTranslationsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModGameTranslationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModGameTranslationsResp"
          }
        },
        "additionalProperties": false
      },
      "ModGroupReq": {
        "required": [
          "groupId",
          "name"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "description": "Group id",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "User group name"
          },
          "remark": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Remark",
            "nullable": true
          },
          "frontendIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Frontend ids",
            "nullable": true
          },
          "backofficeFuncIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Backoffice func ids",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModGroupResp": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "description": "Group id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModGroupResp"
          }
        },
        "additionalProperties": false
      },
      "ModHeroResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModHeroRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModHeroResp"
          }
        },
        "additionalProperties": false
      },
      "ModHeroTranslationsReq": {
        "required": [
          "description",
          "id",
          "localeId",
          "name",
          "tagline",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "game hero Id",
            "format": "int32"
          },
          "localeId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Locale Id",
            "format": "int32"
          },
          "name": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Map translations Name"
          },
          "title": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Title"
          },
          "tagline": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Tagline"
          },
          "description": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Description"
          }
        },
        "additionalProperties": false
      },
      "ModHeroTranslationsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModHeroTranslationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModHeroTranslationsResp"
          }
        },
        "additionalProperties": false
      },
      "ModMapResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModMapRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModMapResp"
          }
        },
        "additionalProperties": false
      },
      "ModMapTranslationsReq": {
        "required": [
          "id",
          "localeId",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "game maps Id",
            "format": "int32"
          },
          "localeId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Locale Id",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Map translations Name"
          }
        },
        "additionalProperties": false
      },
      "ModMapTranslationsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModMapTranslationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModMapTranslationsResp"
          }
        },
        "additionalProperties": false
      },
      "ModMediaVodReq": {
        "required": [
          "hostId",
          "hostVideoId",
          "isFeatured",
          "isInGame",
          "siteSectionIds",
          "startTime",
          "title",
          "vodId"
        ],
        "type": "object",
        "properties": {
          "vodId": {
            "type": "integer",
            "description": "Vod id",
            "format": "int32"
          },
          "title": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "Vod title"
          },
          "siteSectionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Site section ids"
          },
          "hostId": {
            "maximum": 32767,
            "minimum": 0,
            "type": "integer",
            "description": "Host id",
            "format": "int32"
          },
          "hostVideoId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Host video id"
          },
          "startTime": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Start time",
            "format": "int32"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags",
            "nullable": true
          },
          "isInGame": {
            "type": "boolean",
            "description": "Is in game"
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Is featured"
          },
          "playerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Related players",
            "nullable": true
          },
          "teamIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Related teams",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModMediaVodResp": {
        "required": [
          "vodId"
        ],
        "type": "object",
        "properties": {
          "vodId": {
            "type": "integer",
            "description": "Vod id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModMediaVodRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModMediaVodResp"
          }
        },
        "additionalProperties": false
      },
      "ModModeReq": {
        "required": [
          "gameId",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Modes Id",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Modes Name"
          },
          "abbreviation": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Modes Abbreviation",
            "nullable": true
          },
          "gameId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Modes Game Id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModModeResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModModeRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModModeResp"
          }
        },
        "additionalProperties": false
      },
      "ModModeTranslationsReq": {
        "required": [
          "id",
          "localeId",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "game modes Id",
            "format": "int32"
          },
          "localeId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Locale Id",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Map translations Name"
          },
          "abbreviation": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Map translations Abbreviation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModModeTranslationsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModModeTranslationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModModeTranslationsResp"
          }
        },
        "additionalProperties": false
      },
      "ModNotificationTemplateReq": {
        "required": [
          "notificationTemplateId",
          "webBody",
          "webTitle"
        ],
        "type": "object",
        "properties": {
          "notificationTemplateId": {
            "type": "integer",
            "description": "Notification Template Id",
            "format": "int32"
          },
          "webTitle": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "webBody": {
            "maxLength": 2147483647,
            "minLength": 0,
            "type": "string"
          },
          "pushTitle": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "pushBody": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailSubject": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailTextBody": {
            "maxLength": 2147483647,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailHtmlBody": {
            "maxLength": 2147483647,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModNotificationTemplateResp": {
        "type": "object",
        "properties": {
          "notificationTemplateId": {
            "type": "integer",
            "description": "Notification Template Id",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModNotificationTemplateRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModNotificationTemplateResp"
          }
        },
        "additionalProperties": false
      },
      "ModOneSignalAppReq": {
        "required": [
          "apiKey",
          "appId",
          "oneSignalAppId",
          "safariWebId"
        ],
        "type": "object",
        "properties": {
          "oneSignalAppId": {
            "type": "integer",
            "description": "One Signal App Id",
            "format": "int32"
          },
          "appId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "App Id"
          },
          "apiKey": {
            "maxLength": 48,
            "minLength": 0,
            "type": "string",
            "description": "Api Key"
          },
          "safariWebId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Safari Web Id"
          },
          "playerMatchStartingNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Player Match Starting Notification Android Channel Id",
            "nullable": true
          },
          "teamMatchStartingNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Team Match Starting Notification Android Channel Id",
            "nullable": true
          },
          "playerArticleNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Player Article Notification Android Channel Id",
            "nullable": true
          },
          "teamArticleNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Team Article Notification Android Channel Id",
            "nullable": true
          },
          "playerMatchResultedNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Player Match Resulted Notification Android Channel Id",
            "nullable": true
          },
          "teamMatchResultedNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Team Match Resulted Notification Android Channel Id",
            "nullable": true
          },
          "teamTransferNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Team Transfer Notification Android Channel Id",
            "nullable": true
          },
          "playerTransferNotificationAndroidChannelId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Player Transfer Notification Android Channel Id",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModOneSignalAppResp": {
        "type": "object",
        "properties": {
          "oneSignalAppId": {
            "type": "integer",
            "description": "One Signal App Id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModOneSignalAppRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModOneSignalAppResp"
          }
        },
        "additionalProperties": false
      },
      "ModOpponentsItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "placement": {
            "type": "integer",
            "format": "int32"
          },
          "pointAdjustment": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModOpponentsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModOpponentsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModOpponentsResp"
          }
        },
        "additionalProperties": false
      },
      "ModPageReq": {
        "required": [
          "content",
          "frontendId",
          "pageId",
          "title"
        ],
        "type": "object",
        "properties": {
          "pageId": {
            "type": "integer",
            "description": "Page id",
            "format": "int32"
          },
          "title": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "content": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Content"
          },
          "frontendId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Frontend id",
            "format": "int32"
          },
          "extraCss": {
            "maxLength": 2147483647,
            "minLength": 0,
            "type": "string",
            "description": "Extra css",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModPageResp": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "integer",
            "description": "Page id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModPageRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModPageResp"
          }
        },
        "additionalProperties": false
      },
      "ModParentResp": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModParentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModParentResp"
          }
        },
        "additionalProperties": false
      },
      "ModParentStageReq": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Stage name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModParentStagesReq": {
        "type": "object",
        "properties": {
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32OrderItem"
            },
            "description": "Stages",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModPlayerResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModPlayerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModPlayerResp"
          }
        },
        "additionalProperties": false
      },
      "ModPrizePlacement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id\r\nUnknown: -1\r\nKnow: > 0",
            "format": "int32"
          },
          "placementFrom": {
            "type": "integer",
            "description": "Placement from",
            "format": "int32"
          },
          "placementTo": {
            "type": "integer",
            "description": "Placement to",
            "format": "int32"
          },
          "prizeAmount": {
            "type": "number",
            "description": "Prize amount",
            "format": "double"
          },
          "teamId": {
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "playerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Player ids",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModRoleReq": {
        "required": [
          "name",
          "remark",
          "roleId"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "description": "Role id",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Role name"
          },
          "remark": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Remark"
          },
          "backofficeFuncIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Backoffice Func Ids",
            "nullable": true
          },
          "frontendIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Frontend ids",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModRoleResp": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "Role id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModRoleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModRoleResp"
          }
        },
        "additionalProperties": false
      },
      "ModServerResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModServerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModServerResp"
          }
        },
        "additionalProperties": false
      },
      "ModSideResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModSideRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModSideResp"
          }
        },
        "additionalProperties": false
      },
      "ModSideTranslationsReq": {
        "required": [
          "id",
          "localeId",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "game side Id",
            "format": "int32"
          },
          "localeId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "description": "Locale Id",
            "format": "int32"
          },
          "name": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Side translations Name"
          }
        },
        "additionalProperties": false
      },
      "ModSideTranslationsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModSideTranslationsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModSideTranslationsResp"
          }
        },
        "additionalProperties": false
      },
      "ModSiteSectionsResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModSiteSectionsRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModSiteSectionsResp"
          }
        },
        "additionalProperties": false
      },
      "ModSponsorResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModSponsorRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModSponsorResp"
          }
        },
        "additionalProperties": false
      },
      "ModStreamResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModStreamRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModStreamResp"
          }
        },
        "additionalProperties": false
      },
      "ModStreamTag": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Media Tag Id",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Media Item Name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModTeamPlayerReq": {
        "required": [
          "isHidden",
          "joinDate",
          "teamId",
          "teamPlayerId"
        ],
        "type": "object",
        "properties": {
          "teamPlayerId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "TeamPlayerId",
            "format": "int32"
          },
          "teamId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "TeamId",
            "format": "int32"
          },
          "joinDate": {
            "minimum": 1,
            "type": "integer",
            "description": "JoinDate",
            "format": "int64"
          },
          "leaveDate": {
            "minimum": 1,
            "type": "integer",
            "description": "LeaveDate",
            "format": "int64",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "IsHidden"
          }
        },
        "additionalProperties": false
      },
      "ModTeamPlayerResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModTeamPlayerRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModTeamPlayerResp"
          }
        },
        "additionalProperties": false
      },
      "ModTeamResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModTeamRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModTeamResp"
          }
        },
        "additionalProperties": false
      },
      "ModUserResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModUserRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModUserResp"
          }
        },
        "additionalProperties": false
      },
      "ModVenueResp": {
        "type": "object",
        "additionalProperties": false
      },
      "ModVenueRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ModVenueResp"
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateArgument": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "example": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateDetail": {
        "required": [
          "createdAt",
          "frontEndId",
          "id",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "frontEndId": {
            "type": "integer",
            "format": "int32"
          },
          "messagingNotificationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "typeIdentifier": {
            "type": "string",
            "nullable": true
          },
          "webSupported": {
            "type": "boolean"
          },
          "webTitle": {
            "type": "string",
            "nullable": true
          },
          "webBody": {
            "type": "string",
            "nullable": true
          },
          "pushSupported": {
            "type": "boolean"
          },
          "pushTitle": {
            "type": "string",
            "nullable": true
          },
          "pushBody": {
            "type": "string",
            "nullable": true
          },
          "emailSupported": {
            "type": "boolean"
          },
          "emailSubject": {
            "type": "string",
            "nullable": true
          },
          "emailTextBody": {
            "type": "string",
            "nullable": true
          },
          "emailHtmlBody": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateListItem": {
        "required": [
          "desc",
          "emailSupported",
          "feName",
          "id",
          "messagingNotificationTypeId",
          "name",
          "pushSupported",
          "webSupported"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Notification Template Id",
            "format": "int32"
          },
          "messagingNotificationTypeId": {
            "type": "integer",
            "description": "Messaging Notification Type Id",
            "format": "int32"
          },
          "feName": {
            "minLength": 1,
            "type": "string",
            "description": "Frontend Name"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Notification Template Name"
          },
          "desc": {
            "minLength": 1,
            "type": "string",
            "description": "Notification Template Description"
          },
          "webSupported": {
            "type": "boolean",
            "description": "Is Web Set"
          },
          "emailSupported": {
            "type": "boolean",
            "description": "Is Email Set"
          },
          "pushSupported": {
            "type": "boolean",
            "description": "Is Push Set"
          }
        },
        "additionalProperties": false
      },
      "OneSignalAppListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "appId": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "safariWebId": {
            "type": "string",
            "nullable": true
          },
          "playerMatchStartingNotificationAndroidChannelId": {
            "type": "string",
            "nullable": true
          },
          "teamMatchStartingNotificationAndroidChannelId": {
            "type": "string",
            "nullable": true
          },
          "playerArticleNotificationAndroidChannelId": {
            "type": "string",
            "nullable": true
          },
          "teamArticleNotificationAndroidChannelId": {
            "type": "string",
            "nullable": true
          },
          "playerMatchResultedNotificationAndroidChannelId": {
            "type": "string",
            "nullable": true
          },
          "teamMatchResultedNotificationAndroidChannelId": {
            "type": "string",
            "nullable": true
          },
          "teamTransferNotificationAndroidChannelId": {
            "type": "string",
            "nullable": true
          },
          "playerTransferNotificationAndroidChannelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Option": {
        "required": [
          "id",
          "order",
          "text"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Option id",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "description": "Option order",
            "format": "int32"
          },
          "text": {
            "minLength": 1,
            "type": "string",
            "description": "Option text"
          }
        },
        "additionalProperties": false
      },
      "PageListItem": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "integer",
            "description": "Page id",
            "format": "int32"
          },
          "feName": {
            "type": "string",
            "description": "Frontend name",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true
          },
          "author": {
            "type": "string",
            "description": "Author",
            "nullable": true
          },
          "updatedAt": {
            "type": "integer",
            "description": "Edited At",
            "format": "int64",
            "nullable": true
          },
          "viewCount": {
            "type": "integer",
            "description": "View count",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagingRespBase": {
        "required": [
          "pageNo",
          "pageSize",
          "totalPages",
          "totalRows"
        ],
        "type": "object",
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalRows": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParentBroadcastTalentListItem": {
        "type": "object",
        "properties": {
          "broadcastTalentId": {
            "type": "integer",
            "description": "Broadcast talent id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name (NickName)",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Roles",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Language",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParentChildDetail": {
        "required": [
          "childName",
          "childStatusName",
          "childType",
          "childTypeName",
          "createdAt",
          "creator",
          "isHidden",
          "isLan",
          "rankingImportance",
          "startingAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "childId": {
            "type": "integer",
            "description": "Child id",
            "format": "int32",
            "nullable": true
          },
          "childName": {
            "minLength": 1,
            "type": "string",
            "description": "Child name"
          },
          "childType": {
            "$ref": "#/components/schemas/EnumChildTournament"
          },
          "childTypeName": {
            "minLength": 1,
            "type": "string",
            "description": "Child type name",
            "readOnly": true
          },
          "childStatusName": {
            "minLength": 1,
            "type": "string",
            "description": "Child status name",
            "readOnly": true
          },
          "startingAt": {
            "type": "integer",
            "description": "Starting at",
            "format": "int64"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Is hidden"
          },
          "isLan": {
            "type": "boolean",
            "description": "Is lan"
          },
          "venueId": {
            "type": "integer",
            "description": "Venue id",
            "format": "int32",
            "nullable": true
          },
          "venueName": {
            "type": "string",
            "description": "Venue name",
            "nullable": true
          },
          "rankingImportance": {
            "type": "number",
            "description": "Ranking importance",
            "format": "double"
          },
          "creator": {
            "minLength": 1,
            "type": "string",
            "description": "Creator"
          },
          "createdAt": {
            "type": "integer",
            "description": "Created at",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "description": "Updated at",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ParentFolder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Folder Id",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "description": "ParentId",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Folder name",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Folder path",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParentStageDetail": {
        "required": [
          "childDetails",
          "stageId",
          "stageName"
        ],
        "type": "object",
        "properties": {
          "stageId": {
            "type": "integer",
            "description": "Stage id",
            "format": "int32"
          },
          "stageName": {
            "minLength": 1,
            "type": "string",
            "description": "Stage name"
          },
          "childDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParentChildDetail"
            },
            "description": "Child details"
          }
        },
        "additionalProperties": false
      },
      "ParentTournamentDetail": {
        "required": [
          "createdAt",
          "creator",
          "frontendName",
          "gameName",
          "hasDescription",
          "hasImage",
          "hasMapPool",
          "hasPrizePool",
          "hasSponsor",
          "isFeatured",
          "isHidden",
          "isLan",
          "isPlayerBased",
          "name",
          "parentId",
          "startingAt",
          "teamSize",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Parent tournament name"
          },
          "typeName": {
            "type": "string",
            "description": "Type name",
            "nullable": true,
            "readOnly": true
          },
          "gameName": {
            "minLength": 1,
            "type": "string",
            "description": "Game name"
          },
          "status": {
            "$ref": "#/components/schemas/EnumTournamentStatus"
          },
          "statusName": {
            "type": "string",
            "description": "Status name",
            "nullable": true,
            "readOnly": true
          },
          "startingAt": {
            "type": "integer",
            "description": "Starting at",
            "format": "int64"
          },
          "hasDescription": {
            "type": "boolean",
            "description": "Has description"
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Is featured"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Is hidden"
          },
          "isLan": {
            "type": "boolean",
            "description": "Is lan"
          },
          "venueId": {
            "type": "integer",
            "description": "Venue id",
            "format": "int32",
            "nullable": true
          },
          "venueName": {
            "type": "string",
            "description": "Venue name",
            "nullable": true
          },
          "hasPrizePool": {
            "type": "boolean",
            "description": "Has prize pool"
          },
          "hasSponsor": {
            "type": "boolean",
            "description": "Has sponsor"
          },
          "hasMapPool": {
            "type": "boolean",
            "description": "Has map pool"
          },
          "frontendName": {
            "minLength": 1,
            "type": "string",
            "description": "Frontend name"
          },
          "hasImage": {
            "type": "boolean",
            "description": "Has image"
          },
          "creator": {
            "minLength": 1,
            "type": "string",
            "description": "Creator"
          },
          "createdAt": {
            "type": "integer",
            "description": "Created at",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "description": "Updated at",
            "format": "int64"
          },
          "teamSize": {
            "type": "integer",
            "description": "Team size",
            "format": "int32"
          },
          "isPlayerBased": {
            "type": "boolean",
            "description": "Is player based"
          }
        },
        "additionalProperties": false
      },
      "ParentTournamentEditDetail": {
        "required": [
          "description",
          "isFeatured",
          "isHidden",
          "isLan",
          "name",
          "parentId",
          "startingAt",
          "typeName"
        ],
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Parent tournament id",
            "format": "int32"
          },
          "typeName": {
            "minLength": 1,
            "type": "string",
            "description": "Type name",
            "readOnly": true
          },
          "frontendId": {
            "type": "integer",
            "description": "Frontend id",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Parent tournament name"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Parent tournament name"
          },
          "startingAt": {
            "type": "integer",
            "description": "Starting at",
            "format": "int64"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Is hidden"
          },
          "isLan": {
            "type": "boolean",
            "description": "Is lan"
          },
          "venueId": {
            "type": "integer",
            "description": "Venue id",
            "format": "int32",
            "nullable": true
          },
          "venueName": {
            "type": "string",
            "description": "Venue name",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Is featured"
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParentTournamentListItem": {
        "required": [
          "creator",
          "feName",
          "gameIconUrl",
          "hasSponsor",
          "hasVenue",
          "name",
          "parentId",
          "startingAt",
          "statusName",
          "url"
        ],
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Tournament id",
            "format": "int32"
          },
          "feName": {
            "minLength": 1,
            "type": "string",
            "description": "Frontend Name"
          },
          "gameIconUrl": {
            "minLength": 1,
            "type": "string",
            "description": "Game icon url"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Parent tournament name"
          },
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "Parent tournament url in frontend",
            "readOnly": true
          },
          "creator": {
            "minLength": 1,
            "type": "string",
            "description": "Creator"
          },
          "startingAt": {
            "type": "integer",
            "description": "Starting at",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/EnumTournamentStatus"
          },
          "statusName": {
            "minLength": 1,
            "type": "string",
            "description": "Status name",
            "readOnly": true
          },
          "hasSponsor": {
            "type": "boolean",
            "description": "Has sponsor"
          },
          "hasVenue": {
            "type": "boolean",
            "description": "Has venue"
          }
        },
        "additionalProperties": false
      },
      "PrizePlacement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32"
          },
          "placementFrom": {
            "type": "integer",
            "description": "Placement from",
            "format": "int32"
          },
          "placementTo": {
            "type": "integer",
            "description": "Placement to",
            "format": "int32"
          },
          "prizeAmount": {
            "type": "number",
            "description": "Prize amount",
            "format": "double"
          },
          "teamId": {
            "type": "integer",
            "description": "Team id",
            "format": "int32"
          },
          "teamName": {
            "type": "string",
            "description": "Team name",
            "nullable": true
          },
          "playerItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int32Item"
            },
            "description": "Player items",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatedQuickPoll": {
        "required": [
          "pollId",
          "question"
        ],
        "type": "object",
        "properties": {
          "pollId": {
            "type": "integer",
            "description": "Poll id",
            "format": "int32"
          },
          "question": {
            "minLength": 1,
            "type": "string",
            "description": "Quick poll question"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Option"
            },
            "description": "Quick poll options",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleListItem": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "Role id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Role name",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "description": "Group id",
            "format": "int32"
          },
          "groupName": {
            "type": "string",
            "description": "Group Name",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Remark",
            "nullable": true
          },
          "updatedAt": {
            "type": "integer",
            "description": "Updated At",
            "format": "int64"
          },
          "updatedUserName": {
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "frontendNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Frontend names",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleTemplate": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "integer",
            "description": "Role template id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Role template name",
            "nullable": true
          },
          "frontendPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Int16Item"
            },
            "description": "Frontend permissions",
            "nullable": true
          },
          "backofficePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleBackOfficePermissionItem"
            },
            "description": "Backoffice permissions",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleUserListItem": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User id",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "User name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleBackOfficePermissionItem": {
        "type": "object",
        "properties": {
          "funcId": {
            "type": "integer",
            "description": "Backoffice func id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Backoffice func name",
            "nullable": true
          },
          "checked": {
            "type": "boolean",
            "description": "Checked"
          },
          "subFuncs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleBackOfficePermissionItem"
            },
            "description": "Sub",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SiteSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Site section id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Site section name",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StagingEarningListItem": {
        "type": "object",
        "properties": {
          "stageId": {
            "type": "integer",
            "description": "Stage id",
            "format": "int32"
          },
          "stageName": {
            "type": "string",
            "description": "Stage name",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "Stage order",
            "format": "int32"
          },
          "childEarnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildEarningListItem"
            },
            "description": "Child earnings",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StartTournamentResp": {
        "type": "object",
        "additionalProperties": false
      },
      "StartTournamentRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/StartTournamentResp"
          }
        },
        "additionalProperties": false
      },
      "SystemLogDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "serverName": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "$ref": "#/components/schemas/LogLevel"
          },
          "logger": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "messagePayload": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "recordedAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SystemLogListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "traceId": {
            "type": "string",
            "description": "Trace Id",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "description": "Prefix",
            "nullable": true
          },
          "serverName": {
            "type": "string",
            "description": "Server Name",
            "nullable": true
          },
          "level": {
            "$ref": "#/components/schemas/LogLevel"
          },
          "logger": {
            "type": "string",
            "description": "Logger",
            "nullable": true
          },
          "method": {
            "type": "string",
            "description": "Method",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message",
            "nullable": true
          },
          "recordedAt": {
            "type": "integer",
            "description": "Record At",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Translation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "$ref": "#/components/schemas/TranslationLocale"
          }
        },
        "additionalProperties": false
      },
      "TranslationLocale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bcp47Identifier": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UInt16Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UInt32Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnAssignGroupReq": {
        "required": [
          "groupId",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "description": "Group id",
            "format": "int32"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Add user ids"
          }
        },
        "additionalProperties": false
      },
      "UnAssignGroupResp": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "UnAssign user ids",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnAssignGroupRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/UnAssignGroupResp"
          }
        },
        "additionalProperties": false
      },
      "UnAssignRoleReq": {
        "required": [
          "roleId",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "description": "Role id",
            "format": "int32"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Add user ids"
          }
        },
        "additionalProperties": false
      },
      "UnAssignRoleResp": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "UnAssign user ids",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnAssignRoleRespApiRespBase": {
        "type": "object",
        "properties": {
          "ret": {
            "$ref": "#/components/schemas/EnumRet"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/UnAssignRoleResp"
          }
        },
        "additionalProperties": false
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "avatarImage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}